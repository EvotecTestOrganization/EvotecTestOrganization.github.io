[{"categories":["Project Server"],"content":"Original Links Original Technet URL Access all Project Online Projects Sites using CSOM Original Technet Description URL Description Download: [Download Link](Download\\Example CSOM to access all Project Sites.ps1) ","date":"2019-12-01","objectID":"/project-server/access-all-online-projects-568c7c59/access-all-online-projects-568c7c59/:1:0","tags":["Active Directory","HTML"],"title":"Access all Project Online Projects Sites using CSOM","uri":"/project-server/access-all-online-projects-568c7c59/access-all-online-projects-568c7c59/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This PowerShell script will use the Project Reporting OData API to get a list of all the Project Sites in the PWA Site Collection linked to a project. It will then access each of those project sites to enable you to easily update / review the site if needed. This example just lists all of the list titles for each site but can be used as a starting script for modifying a particular list or adding a new list on all project sites etc. The user running the script will need to update the source PWA instance URL, username and password. The account will need access to the OData API in PWA and access to all the project sites. A code snippet can be seen below: #add SharePoint Online DLL - update the location if required $programFiles = [environment]::getfolderpath(\"programfiles\") add-type -Path $programFiles'\\SharePoint Online Management Shell\\Microsoft.Online.SharePoint.PowerShell\\Microsoft.SharePoint.Client.dll' #set the environment detail variables: username, password and pwaUrl $username = \"username@cps.com\" $password = \"password\" $securePass = ConvertTo-SecureString $password -AsPlainText -Force $pwaUrl = \"pwa URL\" For the script to work, the SharePoint Online client DLL is required for the SharePoint Online credentials class. This example is for Project Online but could easily be modified for Project Server 2013 / 2016. A supporting blog post can be seen here: https://pwmather.wordpress.com/2016/07/08/access-projectonline-project-sites-using-powershell-and-sharepoint-csom-office365/ The script is provided “As is” with no warranties etc. ","date":"2019-12-01","objectID":"/project-server/access-all-online-projects-568c7c59/access-all-online-projects-568c7c59/:2:0","tags":["Active Directory","HTML"],"title":"Access all Project Online Projects Sites using CSOM","uri":"/project-server/access-all-online-projects-568c7c59/access-all-online-projects-568c7c59/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Add a LPR Printer include Port and needed Driver Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/add-a-lpr-printer-include-f462f332/add-a-lpr-printer-include-f462f332/:1:0","tags":["Active Directory","HTML"],"title":"Add a LPR Printer include Port and needed Driver","uri":"/printing/printer-ports-and-printer-drivers/add-a-lpr-printer-include-f462f332/add-a-lpr-printer-include-f462f332/"},{"categories":["Printing"],"content":"Output from Technet Gallery This script installs a LPR networkprinters and the needed driver. If you want you can use it for your logon script or manually. The following information are needed: \u003cPRINTER_NAME\u003e = Name of the Printer, you will find the name in the INF file of the driver \u003cPATH_TO_INF_FILE\u003e = The Path where the printer INF file is located \u003cSERVER_NAME\u003e = The name of the print server where the LPR cue is installed \u003cSERVER_IP\u003e = The IP Adress of your print server \u003cCUE_NAME\u003e = The name of the printer cue \u003cLOCATION\u003e = Where the printer is located \u003cDESCRIPTION\u003e = Needed information of the printer, eg Type of the Printer, IP Adr, or something you like Windows Shell Script Dim strComputer, strSRVName, strPrinterName, strIPAdr, strPrinterName, strDriverName, strDriverInfPath, strPrinterLocation, strPrinterDescription Dim objWMIService, objNewPort, objDriver, objPrinter ' Enter the following details for the new LPR Printer ' \u003cPRINTER_NAME\u003e = Name of the Printer, you will find the name in the INF file of the driver ' \u003cPATH_TO_INF_FILE\u003e = The Path where the printer INF file is located ' \u003cSERVER_NAME\u003e = The name of the print server where the LPR cue is installed ' \u003cSERVER_IP\u003e = The IP Adress of your print server ' \u003cCUE_NAME\u003e = The name of the printer cue ' \u003cLOCATION\u003e = Where the printer is located ' \u003cDESCRIPTION\u003e = Needed information of the printer, eg Type of the Printer, IP Adr, or something you like ' Example: ' MapLPRPrinter \"HP Universal Printing PCL 5\", \".\\Printers\\\", \"hpcu107b.inf\", \"SERVER01\", \"192.168.0.1\", \"HPLJ_LPR\", \"Accounting Office\", \"HP Color Laserjet from John Doe\" MapLPRPrinter \"\u003cPRINTER_NAME\u003e\", \"\u003cPATH_TO_INF_FILE\u003e\", \"\u003cINF_FILE\u003e\", \"\u003cSERVER_NAME\u003e\", \"\u003cSERVER_IP\u003e\", \"\u003cCUE_NAME\u003e\", \"\u003cLOCATION\u003e\", \"\u003cDESCRIPTION\u003e\" Sub MapLPRPrinter(strDriverName,strDriverInfPath,strDriverInf,strSRVName,strIPAdr,strPrinterName,strPrinterLocation,strPrinterDescription) '========== ' Connects to a Printer and sets this printer as a LPR Printer strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") objWMIService.Security_.Privileges.AddAsString \"SeLoadDriverPrivilege\", True On Error Resume Next 'SETS PRINTER PORT. Set objNewPort = objWMIService.Get(\"Win32_TCPIPPrinterPort\").SpawnInstance_ objNewPort.Name = strSRVName \u0026 \":\" \u0026 strPrinterName objNewPort.PortNumber = \"515\" objNewPort.Protocol = 2 objNewPort.HostAddress = strIPAdr objNewPort.Queue = strPrinterName objNewPort.ByteCount = True objNewPort.SNMPEnabled = False objNewPort.Put_ NewPort = objNewPort.Put_ 'INSTALLS DRIVER NOT LOCATED IN Driver.cab Set objDriver = objWMIService.Get(\"Win32_PrinterDriver\") objDriver.Name = strDriverName objDriver.SupportedPlatform = \"Windows NT x86\" objDriver.Version = \"3\" objDriver.DriverPath = strDriverInfPath objDriver.Infname = strDriverInfPath \u0026 strDriverInf intResult = objDriver.AddPrinterDriver(objDriver) 'SETS PRINTER TO PORT. Set objPrinter = objWMIService.Get(\"Win32_Printer\").SpawnInstance_ objPrinter.Name = strPrinterName objPrinter.DriverName = strDriverName objPrinter.PortName = strSRVName \u0026 \":\" \u0026 strPrinterName objPrinter.DeviceID = strPrinterName objPrinter.Location = strPrinterLocation objPrinter.Comment = strPrinterDescription objPrinter.Description = strPrinterDescription objPrinter.CurrentLanguage = 2 objPrinter.Network = True objPrinter.Shared = False objPrinter.EnableBIDI = False objPrinter.Put_ End Sub ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/add-a-lpr-printer-include-f462f332/add-a-lpr-printer-include-f462f332/:2:0","tags":["Active Directory","HTML"],"title":"Add a LPR Printer include Port and needed Driver","uri":"/printing/printer-ports-and-printer-drivers/add-a-lpr-printer-include-f462f332/add-a-lpr-printer-include-f462f332/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Add a Network Printer Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/85640294-d965-43bc-8ee6-5c1c9daa704d/85640294-d965-43bc-8ee6-5c1c9daa704d/:1:0","tags":["Active Directory","HTML"],"title":"Add a Network Printer","uri":"/printing/printer-ports-and-printer-drivers/85640294-d965-43bc-8ee6-5c1c9daa704d/85640294-d965-43bc-8ee6-5c1c9daa704d/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **Tim Laqua Installs a network printer at logon. The script determines if the user has this printer installed already; if they do, then the script exits. If the printer is not installed the script installs the printer and, if the user does not have a local default printer installed, sets the printer as the default printer. Visual Basic Option Explicit ' Tell WSH to resume on errors, otherwise our error handling can't do it's job On Error Resume Next ' Dim variables Dim objNetwork, objWMIService, objPrinter Dim colInstalledPrinters Dim strPrinterServer, strPrinterShare, strComputerName Dim Return, LocalDefault, PrinterIsInstalled '######## Define Printer Configuration here ######### strPrinterServer = \"\\\\printserver\" strPrinterShare = \"PRINTQUEUE\" '######## Code below does not need to be modified unless logical changes are needed ######## PrinterIsInstalled = False' We will only set this to true if we can find this printer in the list strComputerName = \".\" ' This Computer ' Get WMIService so we can run WMI queries (good stuff) Set objWMIService = GetObject( _ \"winmgmts:\" \u0026 \"{impersonationLevel=impersonate}!\\\\\" _ \u0026 strComputerName \u0026 \"\\root\\cimv2\") ' Run a WMI query to get all the objects belonging to the ' Win32_Printer Class (all the installed printers) Set colInstalledPrinters = objWMIService.ExecQuery _ (\"Select * from Win32_Printer\") ' The WMI query returns a collection (hence, the 'col' prefix), ' so we have to loop through the objects For Each objPrinter in colInstalledPrinters ' Now we have objects... printer objects to be exact... ' Check to see if the current printer object is the default printer If objPrinter.Default = \"True\" Then ' We found the default printer, so lets see if it's a Local printer ' (but NOT that Image Writer doohickey)If objPrinter.ServerName = Null And_ objPrinter.Name \u003c\u003e \"Microsoft Office Document Image Writer\" Then ' User has a local Default Printer, so set LocalDefault to True LocalDefault = TrueElse ' User has a Network Default Printer, so set LocalDefault to False LocalDefault = FalseEnd If End If ' Lets figure out if this printer is installed already by ' checking each printer object for a match If objPrinter.ServerName = strPrinterServer And _ objPrinter.ShareName = strPrinterShare Then' Printer is already installed, so set PrinterIsInstalled to TruePrinterIsInstalled = True End If Next ' If the Printer is not installed, install it. If it's already installed, do nothing. ' This also serves to allow users to choose a different default printer, as we only ' update the default printer if this printer has not been installed before AND they ' do not have a local default printer. If Not PrinterIsInstalled Then' Printer is not installed, so install it ' Create the Network ObjectSet objNetwork = CreateObject(\"WScript.Network\") ' Create a new connection to the specified Printer PathobjNetwork.AddWindowsPrinterConnection strPrinterServer \u0026 \"\\\" \u0026 strPrinterShare ' Check to see if an error was loggedIf err.Number \u003c\u003e 0 Then ' An error was logged, display a nice error message indicating the error number WScript.Echo \"Could not map \" \u0026 strPrinterServer \u0026 \"\\\" _ \u0026 strPrinterShare \u0026 \" [\" \u0026 err.Number \u0026 \"]\" Err.ClearElse ' No errors were logged, so check to see if we should make this printer the default printer If Not LocalDefault Then ' User does not have a local default printer, so make this the default printer objNetwork.SetDefaultPrinter strPrinterServer \u0026 \"\\\" \u0026 strPrinterShare End IfEnd If Else' Printer is already installed, so do nothing End If ' Good practice to clear the main objects, ESPECIALLY WMI provider objects Set objWMIService = Nothing Set objNetwork = Nothing WScript.Quit ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/85640294-d965-43bc-8ee6-5c1c9daa704d/85640294-d965-43bc-8ee6-5c1c9daa704d/:2:0","tags":["Active Directory","HTML"],"title":"Add a Network Printer","uri":"/printing/printer-ports-and-printer-drivers/85640294-d965-43bc-8ee6-5c1c9daa704d/85640294-d965-43bc-8ee6-5c1c9daa704d/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Add a New Default printer Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/9e52c5e2-cd0f-413b-acad-a010b031d44d/9e52c5e2-cd0f-413b-acad-a010b031d44d/:1:0","tags":["Active Directory","HTML"],"title":"Add a New Default printer","uri":"/printing/printer-ports-and-printer-drivers/9e52c5e2-cd0f-413b-acad-a010b031d44d/9e52c5e2-cd0f-413b-acad-a010b031d44d/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **Antonio Luiz Camêlo Chaves Adds a network printer and sets it as the default printer. Visual Basic @Echo Off REM Change \\\\COMPUTER\\PRINTER by your printer's UNC REM Add printer rundll32 printui.dll,PrintUIEntry /in /n\\\\COMPUTER\\PRINTER REM Set printer as default rundll32 printui.dll,PrintUIEntry /y /n\\\\COMPUTER\\PRINTER ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/9e52c5e2-cd0f-413b-acad-a010b031d44d/9e52c5e2-cd0f-413b-acad-a010b031d44d/:2:0","tags":["Active Directory","HTML"],"title":"Add a New Default printer","uri":"/printing/printer-ports-and-printer-drivers/9e52c5e2-cd0f-413b-acad-a010b031d44d/9e52c5e2-cd0f-413b-acad-a010b031d44d/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Add a Printer Connection Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/client-side-printing/db512484-6bf1-4e3a-aa74-8f4e2cbe296b/db512484-6bf1-4e3a-aa74-8f4e2cbe296b/:1:0","tags":["Active Directory","HTML"],"title":"Add a Printer Connection","uri":"/printing/client-side-printing/db512484-6bf1-4e3a-aa74-8f4e2cbe296b/db512484-6bf1-4e3a-aa74-8f4e2cbe296b/"},{"categories":["Printing"],"content":"Output from Technet Gallery Adds a printer connection to a network printer. Script must be run on the local computer. Visual Basic Set WshNetwork = CreateObject(\"WScript.Network\") WshNetwork.AddWindowsPrinterConnection \"\\\\PrintServer1\\Xerox300\" WshNetwork.SetDefaultPrinter \"\\\\PrintServer1\\Xerox300\" ","date":"2019-12-01","objectID":"/printing/client-side-printing/db512484-6bf1-4e3a-aa74-8f4e2cbe296b/db512484-6bf1-4e3a-aa74-8f4e2cbe296b/:2:0","tags":["Active Directory","HTML"],"title":"Add a Printer Connection","uri":"/printing/client-side-printing/db512484-6bf1-4e3a-aa74-8f4e2cbe296b/db512484-6bf1-4e3a-aa74-8f4e2cbe296b/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Add a Printer Using an INF Fil Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/bb1241bc-db60-4ca7-9363-89de960da7c2/bb1241bc-db60-4ca7-9363-89de960da7c2/:1:0","tags":["Active Directory","HTML"],"title":"Add a Printer Using an INF Fil","uri":"/printing/printer-ports-and-printer-drivers/bb1241bc-db60-4ca7-9363-89de960da7c2/bb1241bc-db60-4ca7-9363-89de960da7c2/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **vbzine Adds a printer and a TCP/IP printer port using information found in an INF file. Visual Basic Dim Computer, DriverName, DriverInf, IPAddress, PortName, PrinterName Dim WMI, NewPort, NewDriver, NewPrinter ' Enter Details of Printer ' Computer on which to create the printer. Computer = \".\" ' The printer driver's name. DriverName = \"Xerox Printer PS\" ' The full path and filename of the .inf file. DriverInf = \"Z:\\Printer Drivers\\Xerox\\oemsetup.inf\" ' The printer's IP address. IPAddress = \"192.168.123.11\" ' The printer's Name. PrinterName = \"PRT01-Xerox\" ' End of Details entering ' The port name that will be created. PortName = \"IP_\" \u0026 IPAddress ' Establish WMI connection to specified computer. ' Note that the loaddriver privilege is required to add the driver. Set WMI = GetObject(\"winmgmts:{impersonationlevel=impersonate\" _ \u0026 \",(loaddriver)}!//\" \u0026 Computer \u0026 \"/root/cimv2\") ' Step A: Install the printer's driver. Set NewDriver = WMI.Get(\"Win32_PrinterDriver\") NewDriver.Name = DriverName NewDriver.InfName = DriverInf Result = NewDriver.AddPrinterDriver(NewDriver) If Result = 0 Then WScript.Echo \"Added printer driver: \" \u0026 DriverName Else WScript.Echo \"Error \" \u0026 Result \u0026 \" adding printer driver: \" \u0026 DriverName WScript.Quit End If ' Step B: Create a TCP/IP printer port for the printer. Set NewPort = WMI.Get(\"Win32_TCPIPPrinterPort\").SpawnInstance_ NewPort.HostAddress = IPAddress NewPort.Name = PortName NewPort.Protocol = 1 ' 1 = Raw, 2 = LPR NewPort.Put_ WScript.Echo \"Created printer port: \" \u0026 PortName ' Step C: Add the printer. Set NewPrinter = WMI.Get(\"Win32_Printer\").SpawnInstance_ NewPrinter.DriverName = DriverName NewPrinter.DeviceID = PrinterName NewPrinter.PortName = PortName NewPrinter.Put_ WScript.Echo \"Created printer: \" \u0026 PrinterName ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/bb1241bc-db60-4ca7-9363-89de960da7c2/bb1241bc-db60-4ca7-9363-89de960da7c2/:2:0","tags":["Active Directory","HTML"],"title":"Add a Printer Using an INF Fil","uri":"/printing/printer-ports-and-printer-drivers/bb1241bc-db60-4ca7-9363-89de960da7c2/bb1241bc-db60-4ca7-9363-89de960da7c2/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Add a TCP/IP Printer Port and Printer Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/94e3de42-13b0-4972-aa5a-87ca6781399e/94e3de42-13b0-4972-aa5a-87ca6781399e/:1:0","tags":["Active Directory","HTML"],"title":"Add a TCP/IP Printer Port and Printer","uri":"/printing/printer-ports-and-printer-drivers/94e3de42-13b0-4972-aa5a-87ca6781399e/94e3de42-13b0-4972-aa5a-87ca6781399e/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **Kiran Kumar Adds a TCP/IP printer port and printer. Visual Basic strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set objNewPort = objWMIService.Get _ (\"Win32_TCPIPPrinterPort\").SpawnInstance_ objNewPort.Name = \"IP_10.10.10.113\" objNewPort.Protocol = 1 objNewPort.HostAddress = \"10.10.10.113\" objNewPort.PortNumber = \"9100\" objNewPort.SNMPEnabled = False objNewPort.Put_ Set objPrinter = objWMIService.Get(\"Win32_Printer\").SpawnInstance_ objPrinter.DriverName = \"HP LaserJet 4000 Series PS\" objPrinter.PortName = \"IP_10.10.10.113\" objPrinter.DeviceID = \"FrontOffice\" objPrinter.Network = True objPrinter.Put_ ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/94e3de42-13b0-4972-aa5a-87ca6781399e/94e3de42-13b0-4972-aa5a-87ca6781399e/:2:0","tags":["Active Directory","HTML"],"title":"Add a TCP/IP Printer Port and Printer","uri":"/printing/printer-ports-and-printer-drivers/94e3de42-13b0-4972-aa5a-87ca6781399e/94e3de42-13b0-4972-aa5a-87ca6781399e/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Add and Remove Printers Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/10ab836d-4d38-45a5-8d27-ba9af1717930/10ab836d-4d38-45a5-8d27-ba9af1717930/:1:0","tags":["Active Directory","HTML"],"title":"Add and Remove Printers","uri":"/printing/printer-ports-and-printer-drivers/10ab836d-4d38-45a5-8d27-ba9af1717930/10ab836d-4d38-45a5-8d27-ba9af1717930/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **Larry Motz Logon script that installs new printers and deletes old printers. Visual Basic ' +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ ' Script to remove a printer and add a new replacement printer (Names are case sensative, at least for me they were). ' Put in Logon Script after new printers have been added and IP Addresses and Names have been changed. ' Replace \"ptr_server\" with your print server, replace \"prt_del\" with the printer name you want to delete, and replace \"prt_add\" with the new printer name ' By Larry Motz 27 October 2005 ' +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ On Error Resume Next strComputer = \".\" ' Set objWMIService = GetObject(\"winmgmts:\" _ ' \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Dim objNetwork Set objNetwork = CreateObject(\"WScript.Network\") strPrintServer = \"\\\\ptr_server\\ptr_del\" If strPrintServer = (\"\\\\ptr_server\\ptr_del\") Then objNetwork.RemovePrinterConnection (\"\\\\ptr_server\\ptr_del\") objNetwork.AddWindowsPrinterConnection (\"\\\\ptr_server\\ptr_add\") End If strPrintServer = \"\\\\ptr_server\\ptr_del\" If strPrintServer = (\"\\\\ptr_server\\ptr_del\") Then objNetwork.RemovePrinterConnection (\"\\\\ptr_server\\ptr_del\") objNetwork.AddWindowsPrinterConnection (\"\\\\ptr_server\\ptr_add\") End If ' Repeat above five (5) lines for each printer ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/10ab836d-4d38-45a5-8d27-ba9af1717930/10ab836d-4d38-45a5-8d27-ba9af1717930/:2:0","tags":["Active Directory","HTML"],"title":"Add and Remove Printers","uri":"/printing/printer-ports-and-printer-drivers/10ab836d-4d38-45a5-8d27-ba9af1717930/10ab836d-4d38-45a5-8d27-ba9af1717930/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Add Printer Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/d230c216-9d21-4130-a190-4049ca2df21c/d230c216-9d21-4130-a190-4049ca2df21c/:1:0","tags":["Active Directory","HTML"],"title":"Add Printer","uri":"/printing/printer-ports-and-printer-drivers/d230c216-9d21-4130-a190-4049ca2df21c/d230c216-9d21-4130-a190-4049ca2df21c/"},{"categories":["Printing"],"content":"Output from Technet Gallery \u003chtml xmlns=”\"\u003e This script uses the [wmiclass] type accelerator which creates\ran instance of the System.Management.ManagementClass which gives access to createInstance() method. The Dot Net framework class system.management.managementclass is needed so we can\ruse the equilivant to the spawninstance method from vbscript # -------------------------------------------------------------------- # createPrinterPort.ps1 # ed wilson 3/24/2008 # # uses [wmiclass] type accelerator which creates # an instance of the System.Management.ManagementClass which # gives access to createInstance() method. The Dot Net framework # class system.management.managementclass is needed so we can # use the equilivant to the spawninstance method from vbscript # we need to add special privileges, to do this we use the psbase # object and specify the scope.options.enableprivileges # this is placed on our management class object # all the properties below must be specified, or the command will # fail. Interestingly enough, the script does not need to run with # admin rights on vista. # # ** strangely enough, it seems that enablePrivileges is NOT required # for this script... IT SHOULD be required however, as the loadDriver # privilege is required, and should not be obtained by default... # Make sure you modify default values below. # -------------------------------------------------------------------- $hostAddress = \"111.111.111.111\" $portNumber = \"9100\" $computer = \"hyperv-box\" $wmi= [wmiclass]\"\\\\$computer\\root\\cimv2:win32_tcpipPrinterPort\" #$wmi.psbase.scope.options.enablePrivileges = $true $newPort = $wmi.createInstance() $newPort.hostAddress = $hostAddress $newPort.name = \"IP_\" + $hostAddress $newPort.portNumber = $portNumber $newPort.SNMPEnabled = $false $newPort.Protocol = 1 $newPort.put() ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/d230c216-9d21-4130-a190-4049ca2df21c/d230c216-9d21-4130-a190-4049ca2df21c/:2:0","tags":["Active Directory","HTML"],"title":"Add Printer","uri":"/printing/printer-ports-and-printer-drivers/d230c216-9d21-4130-a190-4049ca2df21c/d230c216-9d21-4130-a190-4049ca2df21c/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Add Printer Permission Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/add-printer-permission-c0ece1f3/add-printer-permission-c0ece1f3/:1:0","tags":["Active Directory","HTML"],"title":"Add Printer Permission","uri":"/printing/print-servers-print-queues-and-print-jobs/add-printer-permission-c0ece1f3/add-printer-permission-c0ece1f3/"},{"categories":["Printing"],"content":"Output from Technet Gallery Windows Server 2012 comes with the PrintManagement module, which makes automation Management of Printers easier. But testing cmdlets like Add-Printer and Set-Printer I noticed that you can set Printer Permission only using the Parameter -PermissionSDDL . These Parameters in both cmdlets expect Printer Permission using Security Definition Description Language (SDDL) which is not what you can type on the command line that easy. Therefore, a complete SDDL string may look like this (one line, formatted for appearance) D:(A;;CC;;;AU)(A;;CCLCRPRC;;;IU)(A;;CCLCRPRC;;;SU)(A;;CCLCRPWPRC;;;SY)(A;;KA;;;BA) (A;;KA;;;S-1-5-21-1234565538-1234563583-123456993-1234)S:(AU;FA;KA;;;WD)(AU;OIIOFA;GA;;;WD) see this site for more details:http://networkadminkb.com/KB/a6/understanding-the-sddl-permissions-in-the-ace-string.aspx These was the reason for me to create an advenced function to set Printer Permission in the way Admins used to do like using domain\\groupname or domain\\username. Example of usage: $PermissionSDDL = Get-Printer -full -Name test99 | select PermissionSDDL -ExpandProperty PermissionSDDL  $newSDDL = Add-LHSPrinterPermissionSDDL -Account “Domain\\Username” -existingSDDL $PermissionSDDL  Get-Printer -Name test99 | Set-Printer -PermissionSDDL $newSDDL -verbose Description: we first get the existing SDDL string from the Printer using the cmdlet Get-Printer from the microsoft PrintManagement module (which has also a -computerName parameter). We create a new SDDL String with the Additional Permission using the Function Add-LHSPrinterPermissionSDDL. finaly we can set the new SDDL string to the Printer using the Set-Printer cmdlet from the Microsoft PrintManagement Module (which has also a -computerName parameter). Function Add-LHSPrinterPermissionSDDL { \u003c# .SYNOPSIS Add Printer Permission using SDDL .DESCRIPTION Add Printer Permission using Security Definition Description Language (SDDL). The function adds full controll rights to the SDDL Use Get-Printer and Set-Printer to modify Printer Permission on local and Remote Computers. Requires Microsoft PS Module PrintManagement. .PARAMETER Account An User or Group account you want to add Permission like \"Domain\\GroupName\" or \"Domain\\UserName\". .PARAMETER existingSDDL The current SDDL of a Printer .EXAMPLE $PermissionSDDL = Get-Printer -full -Name test99 | select PermissionSDDL -ExpandProperty PermissionSDDL $newSDDL = Add-LHSPrinterPermissionSDDL -Account \"Domain\\Username\" -existingSDDL $PermissionSDDL Get-Printer -Name test99 | Set-Printer -PermissionSDDL $newSDDL -verbose .INPUTS None .OUTPUTS SDDL as System.String .NOTES # AccessMask which can contain following values: # Takeownership - 524288 # ReadPermissions - 131072 # ChangePermissions - 262144 # ManageDocuments - 983088 # ManagePrinters - 983052 # Print + ReadPermissions - 131080 # full control all operations - 268435456 AUTHOR: Pasquale Lantella LASTEDIT: KEYWORDS: .LINK DiscretionaryAcl.AddAccess Method (AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags) http://msdn.microsoft.com/en-us/library/xs9aw56y.aspx Understanding the SDDL permissions in the ACE_String http://networkadminkb.com/KB/a6/understanding-the-sddl-permissions-in-the-ace-string.aspx #Requires -Version 3.0 #\u003e [cmdletbinding( ConfirmImpact = 'Low', SupportsShouldProcess = $false )] [OutputType('System.String')] param( [Parameter(Position=0,Mandatory=$True,ValueFromPipeline=$False, HelpMessage='A Security Group or User like \"Domain\\GroupName\" or \"Domain\\UserName\"')] [String]$Account, [Parameter(Position=1,Mandatory=$True,ValueFromPipeline=$False)] [String]$existingSDDL ) BEGIN { Set-StrictMode -Version Latest ${CmdletName} = $Pscmdlet.MyInvocation.MyCommand.Name } # end BEGIN PROCESS { try { $isContainer = $false $isDS = $false $SecurityDescriptor = New-Object -TypeName ` Security.AccessControl.CommonSecurityDescriptor ` $isContainer, $isDS, $existingSDDL Write-Verbose \"Adding Permission for Group $Account\" #get th","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/add-printer-permission-c0ece1f3/add-printer-permission-c0ece1f3/:2:0","tags":["Active Directory","HTML"],"title":"Add Printer Permission","uri":"/printing/print-servers-print-queues-and-print-jobs/add-printer-permission-c0ece1f3/add-printer-permission-c0ece1f3/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Add printers to a PC/computer based on computer group membership in AD Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/client-side-printing/add-printers-to-a-fdc7ea86/add-printers-to-a-fdc7ea86/:1:0","tags":["Active Directory","HTML"],"title":"Add printers to a PC/computer based on computer group membership in AD","uri":"/printing/client-side-printing/add-printers-to-a-fdc7ea86/add-printers-to-a-fdc7ea86/"},{"categories":["Printing"],"content":"Output from Technet Gallery This is the first large powershell script I’ve written after scouring the net for something like it, it didn’t exist. In our environment each computer object is a member of a group that looks like this ptr.gs.printername.printservername and then for each printer there is a default group as well ptr.gs.printername.printservername.default Some computers are members of up to 10 groups. We had an old VBS script that did this on our XP, but for our Windows 7 machines we wanted to use powershell instead. This uses the split command, which is only present in powershell 3.0 (so you’ll need WMF 3.0 installed). Here is what I came up with, hopefully it will help others. We use a product called VPSX by LRS for our printing, but you can substitute the add and remove commands to your liking for either default windows printer add commands or whatever 3rd party product you might use. There’s a fair bit of repeated code, but I had a hard time consolidating after getting it working so I stuck with what I had. Enjoy. Hopefully someone finds a use for this. ############################################################################ ############################################################################ ##### ##### ##### Printer powershell script written by Dan Tootell ##### ##### ##### ##### This script checks computer group membership and adds printers ##### ##### based on the group membership in active directory. ##### ##### ##### ##### ##### ##### Logic is also included to remove any printers that were not ##### ##### added from the LRS server and removes them. ##### ##### ##### ##### ##### ##### Script removes printers when a computer is no longer a member of ##### ##### the active directory group. ##### ##### ##### ##### Powershell 3.0 must be used. ##### ##### ##### ##### Logs are stored at c:\\logs\\lrsprinterscript.txt ##### ##### ##### ##### ##### ############################################################################ ############################################################################ if (Test-Path C:\\logs) { if (Test-Path C:\\logs\\lrsprinterscript.txt) { remove-item c:\\logs\\lrsprinterscript.txt } else { \"Log Folder exists, file doesn't\" } } else { New-Item -ItemType directory -Path C:\\logs\\ } $logpath = \"c:\\logs\\lrsprinterscript.txt\" $numberLines = 500 $date = Get-Date add-content -Path $logpath -Value $Date -Force add-content -Path $logpath -Value \"Adding Printers based on group Membership\" -Force if (Test-Path \"C:\\Program Files\\LRS\") { add-content -Path $logpath -Value \"LRS Driver installed, continuing on with script\" } else { add-content -Path $logpath -Value \"LRS Driver NOT installed, install the driver in order to add printers to LRS. Driver is located here \\\\sccfgmgr1\\sccm_dsl\\packages\\LRS\\\" Exit } #get the computer group memberof values from active directory. $strName = $env:computername + '$' $strFilter = \"(\u0026(objectCategory=Computer)(samAccountName=$strName))\" $objSearcher = New-Object System.DirectoryServices.DirectorySearcher $objSearcher.Filter = $strFilter $objPath = $objSearcher.FindOne() $objComputer = $objPath.GetDirectoryEntry() $DN = $objComputer.distinguishedName $ADVal = [ADSI]\"LDAP://$DN\" $groupstring = $adval.memberof.value if ($groupstring.count -eq 0) { exit } #split the group membership and remove extra text so that we have just the printer name to work with. $array = $groupstring.split(\" \") $pgroups = $array -like \"CN=ptr*\" $pgroups = $pgroups.replace(\"CN=ptr.gs.\", \"\") $pgroups = $pgroups.replace(\",OU=Printer\", \"\") #if only 1 printer group exists use that printer group as the default group if($pgroups.count -eq \"1\") { $default = $pgroups } elseif($pgroups.count -gt \"1\") { $default = $pgroups -like \"*default*\" } add-content -Path $logpath -Value \" \" -Force add-content -Path $logpath -Value \"Number of Printer Groups found\" -Force add-content -Path $logpath -Value $pgroups.count -Force add-content -Path $logpath -Value \" \" -Force #define blank arrays $grouparray = @() $","date":"2019-12-01","objectID":"/printing/client-side-printing/add-printers-to-a-fdc7ea86/add-printers-to-a-fdc7ea86/:2:0","tags":["Active Directory","HTML"],"title":"Add printers to a PC/computer based on computer group membership in AD","uri":"/printing/client-side-printing/add-printers-to-a-fdc7ea86/add-printers-to-a-fdc7ea86/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Add Project Server Users to Project Server Group using PowerShell Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/add-server-users-to-server-40aed317/add-server-users-to-server-40aed317/:1:0","tags":["Active Directory","HTML"],"title":"Add Project Server Users to Project Server Group using PowerShell","uri":"/project-server/add-server-users-to-server-40aed317/add-server-users-to-server-40aed317/"},{"categories":["Project Server"],"content":"Output from Technet Gallery Based on the insights of Paul Mather (Modify lookup tables:https://gallery.technet.microsoft.com/scriptcenter/Update-Server-Lookup-table-bb1ae14f) I created a PowerShell function to add users (from file with UIDs of resources, one UID per line) to a Project Server Group (indentified by its UID). I tested it with Project Server 2013, but it probably works also with other versions. Just edit the following parameters before starting the script: $pwaURL = URL to your PWA instance $sGroupUID = UID of the Project Server Group $sUserToAdd = link to text file with RES_UID entries Have fun using it, Trutz-Sebastian Stephani Campana \u0026 Schott http://www.campana-schott.com PowerShell function Add-PSUsersToProjectServerGroup { param ($pwaUrl, $sGroupUID,$sUserToAdd) try { #Get RES_UID values to add $values = Get-Content $sUserToAdd $svcPSProxy = New-WebServiceProxy -uri \"$pwaUrl/_vti_bin/PSI/Security.asmx?wsdl\" -UseDefaultCredential $secGroup = $svcPSProxy.ReadGroup($sGroupUID) foreach($value in $values) { $secGroupRow = $secGroup.GroupMembers.NewGroupMembersRow() $secGroupRow.RES_UID = [System.Guid] $value $secGroupRow.WSEC_GRP_UID = $sGroupUID $secGroup.GroupMembers.AddGroupMembersRow($secGroupRow) } $error.clear() Try { $svcPSProxy.SetGroups($secGroup) } Catch { write-host \"Error updating the group, see the error below:\" -ForeGroundColor Red -BackGroundColor White write-host \"$error\" -ForeGroundColor Red } If ($error.count -eq 0) { Write-host \"The group $sGroupUID has been updated with the values from the text file specified\" -ForeGroundColor Green } Else { Write-host \"The group $sGroupUID has not been updated with the values from the text file specified, please see error\" -ForeGroundColor Red -BackGroundColor White } $error.clear() } catch [System.Exception] { write-host -f red $_.Exception.ToString() } } #Required Parameters $pwaUrl = \"\u003cPWA URL\u003e\" $sGroupUID=\"\u003cGroup UID, e.g. a6d72f6e-820b-e511-9424-00155d0a0c10\" $sUserToAdd = \".\\UserUIDs.txt\" Add-PSUsersToProjectServerGroup -pwaUrl $pwaUrl -sGroupUID $sGroupUID -sUserToAdd $sUserToAdd ","date":"2019-12-01","objectID":"/project-server/add-server-users-to-server-40aed317/add-server-users-to-server-40aed317/:2:0","tags":["Active Directory","HTML"],"title":"Add Project Server Users to Project Server Group using PowerShell","uri":"/project-server/add-server-users-to-server-40aed317/add-server-users-to-server-40aed317/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Add-PrinterDriver Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/1c8f4c0d-9439-4af0-8840-59686d9b4bc1/1c8f4c0d-9439-4af0-8840-59686d9b4bc1/:1:0","tags":["Active Directory","HTML"],"title":"Add-PrinterDriver","uri":"/printing/printer-ports-and-printer-drivers/1c8f4c0d-9439-4af0-8840-59686d9b4bc1/1c8f4c0d-9439-4af0-8840-59686d9b4bc1/"},{"categories":["Printing"],"content":"Output from Technet Gallery ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/1c8f4c0d-9439-4af0-8840-59686d9b4bc1/1c8f4c0d-9439-4af0-8840-59686d9b4bc1/:2:0","tags":["Active Directory","HTML"],"title":"Add-PrinterDriver","uri":"/printing/printer-ports-and-printer-drivers/1c8f4c0d-9439-4af0-8840-59686d9b4bc1/1c8f4c0d-9439-4af0-8840-59686d9b4bc1/"},{"categories":["Printing"],"content":"Description Add-PrinterDriver is a PowerShell function to install all printer drivers from a specified print server. The function is primarily targeted at Remote Desktop Services (formerly Terminal Services) Session Host servers. More information is available here: http://blog.powershell.no/2011/07/03/adding-printer-drivers-from-a-print-server-using-windows-powershell ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/1c8f4c0d-9439-4af0-8840-59686d9b4bc1/1c8f4c0d-9439-4af0-8840-59686d9b4bc1/:3:0","tags":["Active Directory","HTML"],"title":"Add-PrinterDriver","uri":"/printing/printer-ports-and-printer-drivers/1c8f4c0d-9439-4af0-8840-59686d9b4bc1/1c8f4c0d-9439-4af0-8840-59686d9b4bc1/"},{"categories":["Printing"],"content":"Script #requires -version 2 function Add-PrinterDriver { \u003c# .SYNOPSIS Adds printer drivers to the local computer from a specified print server. .DESCRIPTION Adds printer drivers to the local computer from a specified print server. The function collects all shared printer objects from the specified print server and installs them on the local computer if not already installed. One mandatory parameter: PrintServer .PARAMETER PrintServer The name of the print server to add printer drivers from .PARAMETER Clean Switch parameter which deletes all network printer connections for the current user. .EXAMPLE Add-PrinterDriver -PrintServer srv01.domain.local Add printer drivers from the specified print server .EXAMPLE Add-PrinterDriver -PrintServer srv01.domain.local -Clean Add printer drivers from the specified print server, then removes all network printer connections for the current user. .EXAMPLE Add-PrinterDriver -PrintServer srv01.domain.local -Verbose Add printer drivers from the specified print server with the -Verbose switch parameter .NOTES AUTHOR: Jan Egil Ring BLOG: http://blog.powershell.no LASTEDIT: 03.07.2011 You have a royalty-free right to use, modify, reproduce, and distribute this script file in any way you find useful, provided that you agree that the creator, owner above has no warranty, obligations, or liability for such use. #\u003e [CmdletBinding()] Param( [Parameter(Mandatory=$true)] [string] $PrintServer, [switch] $Clean ) #Collecting all shared printer objects from the specified print server $allprinters = @(Get-WmiObject win32_printer -ComputerName $PrintServer -Filter 'shared=true') #Defining all unique printer drivers from the specified print server $drivers = @($allprinters | Select-Object drivername -Unique) #Defining a collection containing the first printer object using a unique printer driver $printers = @() foreach ($item in $drivers){ $printers += @($allprinters | Where-Object {$_.drivername -eq $item.drivername})[0] } #Collecting locally installed drivers $localdrivers = @() foreach ($driver in (Get-WmiObject Win32_PrinterDriver)){ $localdrivers += @(($driver.name -split \",\")[0]) } #Initializing the CurrentPrinter variable for use with Write-Progress $CurrentPrinter = 1 #Looping through the printer objects collection, installing those who are not already installed on the local computer foreach ($printer in $printers) { Write-Progress -Activity \"Installing printers...\" -Status \"Current printer: $($printer.name)\" -Id 1 -PercentComplete (($CurrentPrinter/$printers.count) * 100) #Create hash-table for output object $outputobject = @{} $outputobject.drivername = $printer.drivername $locallyinstalled = $localdrivers | Where-Object {$_ -eq $printer.drivername} if (-not $locallyinstalled) { Write-Verbose \"$($printer.drivername) is not installed locally\" $AddPrinterConnection = Invoke-WmiMethod -Path Win32_Printer -Name AddPrinterConnection -ArgumentList ([string]::Concat('\\\\', $printer.__SERVER, '\\', $printer.ShareName)) -EnableAllPrivileges $outputobject.returncode = $AddPrinterConnection.ReturnValue } else { Write-Verbose \"$($printer.drivername) is already installed locally\" $outputobject.returncode = \"Already installed\" } #Create a new object for each driver, based on the outputobject hash-table New-Object -TypeName PSObject -Property $outputobject $CurrentPrinter ++ } #Deletes all printer connections for the current user if ($clean) { $printers = Get-WmiObject Win32_Printer -EnableAllPrivileges -Filter network=true if ($printers) { foreach ($printer in $printers) { $printer.Delete() } } } } ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/1c8f4c0d-9439-4af0-8840-59686d9b4bc1/1c8f4c0d-9439-4af0-8840-59686d9b4bc1/:4:0","tags":["Active Directory","HTML"],"title":"Add-PrinterDriver","uri":"/printing/printer-ports-and-printer-drivers/1c8f4c0d-9439-4af0-8840-59686d9b4bc1/1c8f4c0d-9439-4af0-8840-59686d9b4bc1/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Adding Canon Network Printers on Win8 Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/adding-canon-network-26f93fa5/adding-canon-network-26f93fa5/:1:0","tags":["Active Directory","HTML"],"title":"Adding Canon Network Printers on Win8","uri":"/printing/printer-ports-and-printer-drivers/adding-canon-network-26f93fa5/adding-canon-network-26f93fa5/"},{"categories":["Printing"],"content":"Output from Technet Gallery Microsoft release of patch KB3170455 has caused Canon Network Printer drivers “Untrusted.” I have re-written a PowerShell script that’s considered a “workaround” by adding Canon Printers by IP Address until Microsoft fixes the issue or until you move to Windows 10. If you don’t use a print server then you will not be affected, but I support over 1k users and this has solved the problem until we go to Win10. Prerequisites -Have a print server -Have the drivers on the print server #This is the template cscript \"C:\\Windows\\System32\\Printing_Admin_Scripts\\en-US\\prndrvr.vbs\" -a -m \"ENTER DRIVER NAME\" -i \"\\\\path_to_the_printer_inf_file\" cscript \"C:\\Windows\\System32\\Printing_Admin_Scripts\\en-US\\Prnport.vbs\" -a -r IP_00.000.0.000 -h 00.000.0.000 -o raw -n 9100 cscript \"C:\\Windows\\System32\\Printing_Admin_Scripts\\en-US\\prnmngr.vbs\" -a -p \"ENTER PRINTER NAME\" -m \"ENTER DRIVER NAME\" -r \"IP_00.000.0.000\" #This is an example of the completed template cscript \"C:\\Windows\\System32\\Printing_Admin_Scripts\\en-US\\prndrvr.vbs\" -a -m \"Canon iR2318/2320 UFRII LT\" -i \"\\\\printserver\\PrintDrivers\\Canon\\iR x64 - UFRII - 21.70\\Driver\\CNLB0UA64.INF\" cscript \"C:\\Windows\\System32\\Printing_Admin_Scripts\\en-US\\Prnport.vbs\" -a -r IP_10.10.255.12 -h 10.10.255.12 -o raw -n 9100 cscript \"C:\\Windows\\System32\\Printing_Admin_Scripts\\en-US\\prnmngr.vbs\" -a -p \"IP_Canon_2318\" -m \"Canon iR2318/2320 UFRII LT\" -r \"IP_10.10.255.12\"  I’ve written a more in-depth script but it has work-related info and will not be posting it. If you are creative enough I’m sure you can automate 100% of this and even add a GUI interface like I have. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/adding-canon-network-26f93fa5/adding-canon-network-26f93fa5/:2:0","tags":["Active Directory","HTML"],"title":"Adding Canon Network Printers on Win8","uri":"/printing/printer-ports-and-printer-drivers/adding-canon-network-26f93fa5/adding-canon-network-26f93fa5/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Adds a printer to a print server Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/8fb23450-6306-4492-a637-9abb92d03b18/8fb23450-6306-4492-a637-9abb92d03b18/:1:0","tags":["Active Directory","HTML"],"title":"Adds a printer to a print server","uri":"/printing/printer-ports-and-printer-drivers/8fb23450-6306-4492-a637-9abb92d03b18/8fb23450-6306-4492-a637-9abb92d03b18/"},{"categories":["Printing"],"content":"Output from Technet Gallery ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/8fb23450-6306-4492-a637-9abb92d03b18/8fb23450-6306-4492-a637-9abb92d03b18/:2:0","tags":["Active Directory","HTML"],"title":"Adds a printer to a print server","uri":"/printing/printer-ports-and-printer-drivers/8fb23450-6306-4492-a637-9abb92d03b18/8fb23450-6306-4492-a637-9abb92d03b18/"},{"categories":["Printing"],"content":"Description I have to add about twenty printers to a print server everyday. Adding the printer port, and attaching the printer to the server one at a time could possibly take the whole day. This script asks four questions: Tha name of the printer (which will be the port name, and the share name) The IP address of the printer What printer model you’ll be adding, or what driver you want to use. And the location of the printer Additionally, the script adds the IP address and the model of the printer to the comment field. It writes the data you specify to two files in a folder and then reads from those two files to add the printer and ports to the server. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/8fb23450-6306-4492-a637-9abb92d03b18/8fb23450-6306-4492-a637-9abb92d03b18/:3:0","tags":["Active Directory","HTML"],"title":"Adds a printer to a print server","uri":"/printing/printer-ports-and-printer-drivers/8fb23450-6306-4492-a637-9abb92d03b18/8fb23450-6306-4492-a637-9abb92d03b18/"},{"categories":["Printing"],"content":"Script // Click on the Insert Code Section in the toolbar to add your script. #printer add script #Created from Scripting guys example scripts and my own. #Stephen Small #Clears all variables if you've run the scripts before $portname = \"\" $IPaddress = \"\" $driver = \"\" $location = \"\" #publishes the form [void] [System.Reflection.Assembly]::LoadWithPartialName(\"System.Drawing\") [void] [System.Reflection.Assembly]::LoadWithPartialName(\"System.Windows.Forms\") $objForm = New-Object System.Windows.Forms.Form $objForm.Text = \"Printer Add\" $objForm.Size = New-Object System.Drawing.Size(400,400) $objForm.StartPosition = \"CenterScreen\" $objForm.KeyPreview = $True $objForm.Add_KeyDown({if ($_.KeyCode -eq \"Enter\") {$driver=$objListBox.SelectedItem;$portname=$objTextBox1.Text;$IPaddress=$objTextBox2.Text;$Location=$objTextBox3.Text;$objForm.Close()}}) $objForm.Add_KeyDown({if ($_.KeyCode -eq \"Escape\") {$Cancel=$True;$objForm.Close()}}) $OKButton = New-Object System.Windows.Forms.Button $OKButton.Location = New-Object System.Drawing.Size(75,345) $OKButton.Size = New-Object System.Drawing.Size(75,23) $OKButton.Text = \"OK\" $OKButton.Add_Click({$driver=$objListBox.SelectedItem;$portname=$objTextBox1.Text;$IPaddress=$objTextBox2.Text;$Location=$objTextBox3.Text;$objForm.Close()}) $objForm.Controls.Add($OKButton) $CancelButton = New-Object System.Windows.Forms.Button $CancelButton.Location = New-Object System.Drawing.Size(150,345) $CancelButton.Size = New-Object System.Drawing.Size(75,23) $CancelButton.Text = \"Cancel\" $CancelButton.Add_Click({$Cancel=$True;$objForm.Close()}) $objForm.Controls.Add($CancelButton) $objLabel1 = New-Object System.Windows.Forms.Label $objLabel1.Location = New-Object System.Drawing.Size(10,19) $objLabel1.Size = New-Object System.Drawing.Size(280,20) $objLabel1.Text = \"What is the Printer name?\" $objForm.Controls.Add($objLabel1) $objTextBox1 = New-Object System.Windows.Forms.TextBox $objTextBox1.Location = New-Object System.Drawing.Size(10,38) $objTextBox1.Size = New-Object System.Drawing.Size(260,20) $objForm.Controls.Add($objTextBox1) $objLabel2 = New-Object System.Windows.Forms.Label $objLabel2.Location = New-Object System.Drawing.Size(10,61) $objLabel2.Size = New-Object System.Drawing.Size(280,20) $objLabel2.Text = \"What is the IP Address?\" $objForm.Controls.Add($objLabel2) $objTextBox2 = New-Object System.Windows.Forms.TextBox $objTextBox2.Location = New-Object System.Drawing.Size(10,80) $objTextBox2.Size = New-Object System.Drawing.Size(260,20) $objForm.Controls.Add($objTextBox2) $objLabel3 = New-Object System.Windows.Forms.Label $objLabel3.Location = New-Object System.Drawing.Size(10,280) $objLabel3.Size = New-Object System.Drawing.Size(280,20) $objLabel3.Text = \"What is the Location?\" $objForm.Controls.Add($objLabel3) $objLabel4 = New-Object System.Windows.Forms.Label $objLabel4.Location = New-Object System.Drawing.Size(10,100) $objLabel4.Size = New-Object System.Drawing.Size(280,20) $objLabel4.Text = \"Please select a Printer Model\" $objForm.Controls.Add($objLabel4) $objListBox = New-Object System.Windows.Forms.ListBox $objListBox.Location = New-Object System.Drawing.Size(10,120) $objListBox.Size = New-Object System.Drawing.Size(260,20) $objListBox.Height = 160 $objListbox.SelectionMode = \"one\" [void] $objListBox.Items.Add(\"Canon Generic PCL6 Driver\") [void] $objListBox.Items.Add(\"Dell 2130cn Color Laser PCL6\") [void] $objListBox.Items.Add(\"Dell 2145cn Color Laser MFP\") [void] $objListBox.Items.Add(\"Dell 2330dn Laser Printer\") [void] $objListBox.Items.Add(\"Dell 5330dn Mono Laser Printer\") [void] $objListBox.Items.Add(\"DYMO LabelWriter 400 Turbo\") [void] $objListBox.Items.Add(\"HP Universal Printing PCL 6\") $objListBox.SelectedItem $objForm.Controls.Add($objListBox) $objTextBox3 = New-Object System.Windows.Forms.TextBox $objTextBox3.Location = New-Object System.Drawing.Size(10,300) $objTextBox3.Size = New-Object System.Drawing.Size(260,20) $objForm.Controls.Add($objTextBox3) $objForm.Topmost = $True $objForm.Add_S","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/8fb23450-6306-4492-a637-9abb92d03b18/8fb23450-6306-4492-a637-9abb92d03b18/:4:0","tags":["Active Directory","HTML"],"title":"Adds a printer to a print server","uri":"/printing/printer-ports-and-printer-drivers/8fb23450-6306-4492-a637-9abb92d03b18/8fb23450-6306-4492-a637-9abb92d03b18/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Amazing Custom Whiteboard Animation Video Makers to Create Your Own Video Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/project-server/amazing-custom-whiteboard-94788a33/amazing-custom-whiteboard-94788a33/:1:0","tags":["Active Directory","HTML"],"title":"Amazing Custom Whiteboard Animation Video Makers to Create Your Own Video","uri":"/project-server/amazing-custom-whiteboard-94788a33/amazing-custom-whiteboard-94788a33/"},{"categories":["Project Server"],"content":"Output from Technet Gallery If you want to attract people into buying your product, just give them a Video! In this digital time, its all about videos, you can find many purchasers who would love to watch a video instead of reading the detailed description. Today, customers like to watch a video about an item as opposed to reading a long article about it. On this note, you may observe that there are different businesses who love using a video since a short video can change many viewers into buyers overnight. A valid example: almost 70% of different organizations that have utilized video in their advertising efforts got a very quick positive ROI comes about. Therefore, In the event that you haven’t yet incorporated a video content in your promoting strategy, you should consider one. Begin with a 60 Sec whiteboard animation video, which is the most mainstream business video now a day. A whiteboard animation video is short and attractive. It can easily enumerating your business, item or thought in maybe a couple minutes. And if you add your own custom whiteboard animation, you can answer the most fundamental inquiries to the purchasers about you or your product. Landing page, inside an email, in a business meeting or even via social networking media, a whiteboard video is considered the best. Now, for creating your own first video, you need to know about the software. There are many whiteboard animation video makers available on the internet that you can use. Some of the simplest and easiest that you can start with are as follows: Ziteboard** ** The whiteboard video maker that is shareable, has a zoom ability and consist of real-time functionality, Ziteboard is your answer! The best quality this software has that loads easily into any internet browser. For use, this whiteboard you do not require any setup and you don’t even have to sign in to use its functions. It has lasting URLs with the boards that are shareable. The clients can distribute their made boards to the web and highlight them in the introduction or presentation mode that is what makes Ziteboard extraordinary. The clients can match up their screens with a collaborator that enable them to perceive what is presently going on with the project; they can easily look and edit at the same time. Shape recognition algorithm and line smoothing algorithm are the unique components that are offered by Ziteboard. If you draw a circle or a square, you will notice that Ziteboard perceives the expected shape and will automatically smooth the edges. Through Ziteboard you can easily make adjustable and a custom whiteboard animation to address the issues within the group. **Scribblar ** For a whiteboard that spotlights on learning and training sessions, Scribblar can be your best choice. This whiteboard stage has a considerable measure of highlights that aren’t accessible on different other stages. You may say, Scribblar is somewhat more restricted than other free options, but still this whiteboard offers a lot of different functions and considerable measure that users can exploit. While this could imply that Scribblar is not totally free, but you can utilize 14-day free time for testing. For learning and training session ideas, you can embrace Scribblar as your whiteboard solution! With Scribblar, APIs and customization are accessible to you to work on. The powerful tool that makes the Scribbler as a whiteboard instrument that perfect for mentoring or training is its Wolfram Alpha integration option. In terms of the math problem, Scribbler works extremely well. What makes Scribblar a prevalent instructive whiteboard, is its Instructive devices like a condition editorial manager and the capacity to utilize a common pointer. Although Scribblar does not have a free model, any individual who needs a whiteboard with worked in instructive apparatuses can simply purchase and use this whiteboard. Scribblar has one of the most grounded and useful options that you can use. ","date":"2019-12-01","objectID":"/project-server/amazing-custom-whiteboard-94788a33/amazing-custom-whiteboard-94788a33/:2:0","tags":["Active Directory","HTML"],"title":"Amazing Custom Whiteboard Animation Video Makers to Create Your Own Video","uri":"/project-server/amazing-custom-whiteboard-94788a33/amazing-custom-whiteboard-94788a33/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL An updated version for the Visual reports in Project Professional Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/an-updated-version-for-the-da120217/an-updated-version-for-the-da120217/:1:0","tags":["Active Directory","HTML"],"title":"An updated version for the Visual reports in Project Professional","uri":"/project-server/an-updated-version-for-the-da120217/an-updated-version-for-the-da120217/"},{"categories":["Project Server"],"content":"Output from Technet Gallery The outdated Excel reports that come with Project Professional (versions 2007, 2010, 2013, and Project Pro for Office 365) are revisited by me in a blog post on The Project Corner. For a complete description and information on how to install the files on your machine please visit the post: https://evanhurck.Wordpress.com/2015/03/16/updating-the-visual-reports-in-ms-project-2010-and-2013/ If you have any questions, please let me know by commenting on the post or mailing me directly. Happy reporting, Erik v Hurck ","date":"2019-12-01","objectID":"/project-server/an-updated-version-for-the-da120217/an-updated-version-for-the-da120217/:2:0","tags":["Active Directory","HTML"],"title":"An updated version for the Visual reports in Project Professional","uri":"/project-server/an-updated-version-for-the-da120217/an-updated-version-for-the-da120217/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Assign a Default Printer Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/client-side-printing/291fa642-a8b8-4ba8-8d09-aebe3297d1d2/291fa642-a8b8-4ba8-8d09-aebe3297d1d2/:1:0","tags":["Active Directory","HTML"],"title":"Assign a Default Printer","uri":"/printing/client-side-printing/291fa642-a8b8-4ba8-8d09-aebe3297d1d2/291fa642-a8b8-4ba8-8d09-aebe3297d1d2/"},{"categories":["Printing"],"content":"Output from Technet Gallery Sets the default printer on a computer. Visual Basic strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colInstalledPrinters = objWMIService.ExecQuery _ (\"Select * from Win32_Printer Where Name = 'ScriptedPrinter'\") For Each objPrinter in colInstalledPrinters objPrinter.SetDefaultPrinter() Next ","date":"2019-12-01","objectID":"/printing/client-side-printing/291fa642-a8b8-4ba8-8d09-aebe3297d1d2/291fa642-a8b8-4ba8-8d09-aebe3297d1d2/:2:0","tags":["Active Directory","HTML"],"title":"Assign a Default Printer","uri":"/printing/client-side-printing/291fa642-a8b8-4ba8-8d09-aebe3297d1d2/291fa642-a8b8-4ba8-8d09-aebe3297d1d2/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Assign a Default Printer Based on Queue Leng Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/client-side-printing/8f30e2e3-e388-4ff1-83bd-9f95017a559b/8f30e2e3-e388-4ff1-83bd-9f95017a559b/:1:0","tags":["Active Directory","HTML"],"title":"Assign a Default Printer Based on Queue Leng","uri":"/printing/client-side-printing/8f30e2e3-e388-4ff1-83bd-9f95017a559b/8f30e2e3-e388-4ff1-83bd-9f95017a559b/"},{"categories":["Printing"],"content":"Output from Technet Gallery Examines all the print queues on a computer, and sets the default printer to the queue with the fewest documents. Visual Basic intSmallestQueue = 1000 strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colPrintQueues = objWMIService.ExecQuery _ (\"Select * from Win32_PerfFormattedData_Spooler_PrintQueue \" _ \u0026 \"Where Name \u003c\u003e '_Total'\") For Each objPrintQueue in colPrintQueues intCurrentQueue = objPrintQueue.Jobs + objPrintQueue.JobsSpooling If intCurrentQueue \u003c= intSmallestQueue Then strNewDefault = objPrintQueue.Name intSmallestQueue = intCurrentQueue End If Next Set colInstalledPrinters = objWMIService.ExecQuery _ (\"Select * from Win32_Printer Where Name = '\" \u0026 strNewDefault \u0026 \"'\") For Each objPrinter in colInstalledPrinters objPrinter.SetDefaultPrinter() Next ","date":"2019-12-01","objectID":"/printing/client-side-printing/8f30e2e3-e388-4ff1-83bd-9f95017a559b/8f30e2e3-e388-4ff1-83bd-9f95017a559b/:2:0","tags":["Active Directory","HTML"],"title":"Assign a Default Printer Based on Queue Leng","uri":"/printing/client-side-printing/8f30e2e3-e388-4ff1-83bd-9f95017a559b/8f30e2e3-e388-4ff1-83bd-9f95017a559b/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Assign Print Servers at Logon Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/a2513a11-99ff-49d1-83d8-b0f8e67a8fcf/a2513a11-99ff-49d1-83d8-b0f8e67a8fcf/:1:0","tags":["Active Directory","HTML"],"title":"Assign Print Servers at Logon","uri":"/printing/printer-ports-and-printer-drivers/a2513a11-99ff-49d1-83d8-b0f8e67a8fcf/a2513a11-99ff-49d1-83d8-b0f8e67a8fcf/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **Emad Aziz Logon script that connects users to assigned\\available print servers. Each location has an allocated print server and the script provides resilience in case one the remote\\central servers is off line. The administrator does need to know the actual name of the server, just the location. Visual Basic ' PrnConnector.vbs ' 06/10/2005 V 1.0 ' Emad Aziz e.aziz@soton.ac.uk On Error Resume Next Const number0 = 0, number1 = 1, number2 = 2, number3 = 3, number4 = 4, number5 = 5, number6 = 6, number7 = 7, number8 = 8, number9 = 9, number10 = 10 Dim argNumber, pop, queueName, popvalue popvalue = \"/popup\" Computers = Array(\"Central01\", \"Central02\",\"Central03\",\"remote01\",\"remote02\",\"remote03\",\"remote04\",\"remote05\",\"remote06\",\"remote07\",\"remote08\") Set objectShell =WScript.CreateObject(\"WScript.Shell\") Set wshnetwork = createobject(\"WScript.Network\") Set objectArgs = WScript.Arguments pop = Lcase(objectArgs(number0)) argNumber = objectArgs.Count - number2 If objectArgs.Count \u003c number3 Then help() Else main() End If WScript.Quit 'Sub main() Sub main() SrvName = LCase(objectArgs(number1)) defaultsrv = defaultServer(Srvname) location = locationArea(defaultsrv) secondSrv = secSrv(location, defaultsrv) counter = number0 If Isconnected(defaultsrv) Then Do queueName = objectArgs(counter+number2) Call pconnecter1(defaultsrv, queueName) counter = counter + number1 Loop While counter \u003c argNumber If pop = popvalue Then popUpConnector() End If Elseif Isconnected(secondSrv) Then Do queueName = objectArgs(counter+number2) Call pconnecter1(secondSrv, queueName) counter = counter + number1 Loop While counter \u003c argNumber If pop = popvalue Then popUpConnector() End If Else reportError() End If End Sub ' SUB popUpConnector() Sub popUpConnector() WScript.Sleep 5000 objectShell.Run \"\"\"\\\\Domain\\DFSroot\\System Tools\\PrintQConnector\\PPOPUP.EXE\"\"/noexit /poll=5\" End Sub Function Isconnected(SrvName) strPingCmdEcdl = \"ping -n 3 -w 254 \" \u0026 SrvName Set objectExecobject = objectShell.Exec(\"%comspec% /c \" \u0026 strPingCmdEcdl) Do While Not objectExecObject.stdOut.AtEndofStream strText = objectExecObject.stdOut.ReadLine() If Instr(strText, \"Reply\") \u003e 0 Then Isconnected = 1 Exit Do Else Isconnected = 0 End If Loop End Function Sub pconnecter1 (srv, queueName ) wshnetwork.addwindowsprinterconnection \"\\\\\" \u0026 srv \u0026 \"\\\" \u0026 queueName End Sub Function defaultServer(defaultSrv) Select Case defaultSrv Case \"central011\" defaultServer = Computers(number0) Exit Function Case \"central02\" defaultServer = Computers(number1) Exit Function Case \"central03\" defaultServer = Computers(number2) Exit Function Case \"remote01\" defaultServer = Computers(number3) Exit Function Case \"remote02\" defaultServer = Computers(number4) Exit Function Case \"remote03\" defaultServer = Computers(number5) Exit Function Case \"remote04\" defaultServer = Computers(number6) Exit Function Case \"remote05\" defaultServer = Computers(number7) Exit Function Case \"remote06\" defaultServer = Computers(number8) Exit Function Case \"remote07\" defaultServer = Computers(number9) Exit Function Case \"remote08\" defaultServer = Computers(number10) Exit Function Case Else WScript.Echo \"NO Server found, Please consult System adminstartor, call Service Line on 25656\" WScript.Quit End Select End Function Function secSrv(location, SrvName) Select Case location Case \"central\" If srvName = Computers(number0) Then secSrv = Computers(number1) Else secSrv = Computers(number0) End If Case \"remote1\" If srvName = Computers(number3) Then secSrv = Computers(number4) Else secSrv = Computers(number3) End If Case \"Remote2\" secSrv = Computers(number0) End Select End Function Function locationArea(serverName) If serverName = Computers(number0) Or serverName = Computers(number1) Then location = \"central\" locationArea = location Elseif serverName = Computers(number3) Or serverName = Computers(number4) Then location = \"remote1\" locationArea = location Else location = \"Remote2\" locationArea = location End If ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/a2513a11-99ff-49d1-83d8-b0f8e67a8fcf/a2513a11-99ff-49d1-83d8-b0f8e67a8fcf/:2:0","tags":["Active Directory","HTML"],"title":"Assign Print Servers at Logon","uri":"/printing/printer-ports-and-printer-drivers/a2513a11-99ff-49d1-83d8-b0f8e67a8fcf/a2513a11-99ff-49d1-83d8-b0f8e67a8fcf/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Assign Printers Based on Group Membership Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/64850257-af42-433e-9d9a-fd3f5f11fba6/64850257-af42-433e-9d9a-fd3f5f11fba6/:1:0","tags":["Active Directory","HTML"],"title":"Assign Printers Based on Group Membership","uri":"/printing/printer-ports-and-printer-drivers/64850257-af42-433e-9d9a-fd3f5f11fba6/64850257-af42-433e-9d9a-fd3f5f11fba6/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **Jeffrey M. Oyler Assigns printer resources based on group membership. Visual Basic 'Written by Jeffrey M. Oyler, Systems Engineer Option ExplicitOn Error Resume Next Dim objShell : Set objShell = WScript.CreateObject(\"WScript.Shell\")Dim objNetwork : Set objNetwork = WScript.CreateObject(\"WScript.Network\")Dim objGroupListDim enumPrinters : Set enumPrinters = objNetwork.EnumPrinterConnectionsDim strWorkDir : strWorkDir = ObjShell.ExpandEnvironmentStrings(\"%temp%\")Dim strUser : strUser = objNetwork.UserNameDim strDomain : strDomain = objNetwork.UserDomainDim strGroupDim objUser : Set objUser = GetObject(\"WinNT://\" \u0026 strDomain \u0026 \"/\" \u0026 strUser \u0026 \",user\")Dim intCounterDim localPrinter : Set localPrinter = False 'Set script working directory to user %temp% objShell.CurrentDirectory = strWorkDir 'Remove all current network printers For intCounter = 1 to enumPrinters.Count -1 step 2 objNetwork.RemovePrinterConnection enumPrinters.Item(intCounter), true Next 'Map standard printers for all users objNetwork.AddWindowsPrinterConnection \"\\\\SERVERNAME\\Printer 01$\"objNetwork.AddWindowsPrinterConnection \"\\\\SERVERNAME\\Printer 02$\"objNetwork.AddWindowsPrinterConnection \"\\\\SERVERNAME\\Printer 03$\" 'Set standard default printer objNetwork.SetDefaultPrinter \"\\\\SERVERNAME\\Printer 01$\" 'If local printer existson LPT or USB, set to default For intCounter = 0 to enumPrinters.Count -1 step 2if Left(enumPrinters(intCounter),3)=\"LPT\" OR Left(enumPrinters(intCounter),3)=\"USB\" OR Left(enumPrinters(intCounter),3)=\"DOT\" Thenif Left(enumPrinters(intCounter+1),7)=\"Acrobat\" ThenElseobjNetwork.SetDefaultPrinter enumPrinters(intCounter+1)localPrinter = Trueend ifend ifNext 'Map additional printers and change default printer if no local printer based on group membership strGroup = \"Group 01\"if IsMember(strGroup) ThenobjNetwork.AddWindowsPrinterConnection \"\\\\SERVER\\Printer 04$\"if localPrinter = false ThenobjNetwork.SetDefaultPrinter \"\\\\SERVER\\Printer 04$\"end ifend if strGroup = \"Group 02\"if IsMember(strGroup) Thenif localPrinter = false ThenobjNetwork.SetDefaultPrinter \"\\\\SERVERNAME\\Printer 02$\"end ifend if 'For use with Windows 2003 built in fax server (Client must have XP fax client installed)strGroup = \"Fax Group\"if IsMember(strGroup) ThenobjNetwork.AddWindowsPrinterConnection \"\\\\FAXSERVER\\Fax Printer$\"end if 'Cleanup Set objGroupList = NothingSet objUser = Nothing 'Function to test group membership Function IsMember(strGroup) If IsEmpty(objGroupList) ThenCall LoadGroupsEnd If IsMember = objGroupList.Exists(strGroup) End Function 'Subroutine to load user's groups into dictionary object Sub LoadGroups Dim objGroup Set objGroupList = CreateObject(\"Scripting.Dictionary\")objGroupList.CompareMode = vbTextCompareFor Each objGroup In objUser.GroupsobjGroupList(objGroup.name) = TrueNext Set objGroup = Nothing End Sub ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/64850257-af42-433e-9d9a-fd3f5f11fba6/64850257-af42-433e-9d9a-fd3f5f11fba6/:2:0","tags":["Active Directory","HTML"],"title":"Assign Printers Based on Group Membership","uri":"/printing/printer-ports-and-printer-drivers/64850257-af42-433e-9d9a-fd3f5f11fba6/64850257-af42-433e-9d9a-fd3f5f11fba6/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Auto notify to last week timesheets defaulter -PS2010 Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/auto-notify-to-last-week-a637ad53/auto-notify-to-last-week-a637ad53/:1:0","tags":["Active Directory","HTML"],"title":"Auto notify to last week timesheets defaulter -PS2010","uri":"/project-server/auto-notify-to-last-week-a637ad53/auto-notify-to-last-week-a637ad53/"},{"categories":["Project Server"],"content":"Output from Technet Gallery Ever need this kind of requirement to combine both type of resources (one who have not submitted and the other ones who have not created timesheets for last week) and notify them, use this script. This stored procedure can be attached with SQL server agent job to execute it on first morning of new week so that all the concerned resources of last week will get a notification email with Timesheet Manager in cc. How to use - Download the script and change the database name to your PS environment’s reporting DB. Please note that DB profile to trigger database email should be pre-configured so that you can change the parameter name @profile_name to as per your system. Note sp_send_dbmail is a system defined stored procedure which is used by SQL Server to send email. For more detail to configure database mail profile, account etc., you can find detailed instructions from here Once stored procedure script is ready with correct parameters values, execute it so that SP is stored in your system. Now Go to SQL Server Agent and create new job to execute this script at scheduled time.Visit here to check the instructions on how to create SQL agent jobs. Note-Above steps need to be performed on Database server of your Project Server application. Hope it helps ","date":"2019-12-01","objectID":"/project-server/auto-notify-to-last-week-a637ad53/auto-notify-to-last-week-a637ad53/:2:0","tags":["Active Directory","HTML"],"title":"Auto notify to last week timesheets defaulter -PS2010","uri":"/project-server/auto-notify-to-last-week-a637ad53/auto-notify-to-last-week-a637ad53/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Automate the Management of Checked-out Projects in Project Server Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/automate-the-management-of-23a1d5d3/automate-the-management-of-23a1d5d3/:1:0","tags":["Active Directory","HTML"],"title":"Automate the Management of Checked-out Projects in Project Server","uri":"/project-server/automate-the-management-of-23a1d5d3/automate-the-management-of-23a1d5d3/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This script will automate the management of checked-out Projects in Project Server. It will check the Project Server database for a list of currently checked-out Projects, then send an email to each person who has a Project checked-out longer than x days (7 by default). If the Project has been checked-out longer than y days (28 by default), then we force the check-in of the Project and notify the person who had it checked out by email. This script can be run as a scheduled task to automate the management of checked-out Projects. Full details on my blog: https://smsagent.wordpress.com/2015/02/17/automating-the-management-of-checked-out-projects-in-project-server/ ","date":"2019-12-01","objectID":"/project-server/automate-the-management-of-23a1d5d3/automate-the-management-of-23a1d5d3/:2:0","tags":["Active Directory","HTML"],"title":"Automate the Management of Checked-out Projects in Project Server","uri":"/project-server/automate-the-management-of-23a1d5d3/automate-the-management-of-23a1d5d3/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Bulk create Project Server Project Sites Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/bulk-create-server-sites-784f7b29/bulk-create-server-sites-784f7b29/:1:0","tags":["Active Directory","HTML"],"title":"Bulk create Project Server Project Sites","uri":"/project-server/bulk-create-server-sites-784f7b29/bulk-create-server-sites-784f7b29/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This PowerShell script will bulk create a project site for the associated project using the correct site template set on the EPT for all projects without an associated project site. This script does require PowerShell 3.0 or later. A code snippet can be seen below: ###create sites for projects without a site ###update the uri with the correct PWA URL for your farm $svcPSProxy = New-WebServiceProxy -uri \"http://vm753/pwa/_vti_bin/PSI/Project.asmx?wsdl\" -useDefaultCredential $svcWSSProxy = New-WebServiceProxy -uri \"http://vm753/pwa/_vti_bin/PSI/WssInterop.asmx?wsdl\" -useDefaultCredential $emptyGUID = [system.guid]::empty $wssServerUID = $svcWSSProxy.ReadWssSettings().WSSadmin.Wadmin_current_sts_server_uid This script works for Project Server 2010 and 2013, only requirement is that the script is run with an account that has admin access and you are running it from a PowerShell 3.0 console or later. The script will need to be updated with the correct PWA URL for the Web Service Proxies. For further details on this script please see the following post: http://pwmather.wordpress.com/2014/03/05/projectserver-ps2010-ps2013-bulk-project-site-creation-using-powershell-3-0-or-later-sp2013-sp2010/ ","date":"2019-12-01","objectID":"/project-server/bulk-create-server-sites-784f7b29/bulk-create-server-sites-784f7b29/:2:0","tags":["Active Directory","HTML"],"title":"Bulk create Project Server Project Sites","uri":"/project-server/bulk-create-server-sites-784f7b29/bulk-create-server-sites-784f7b29/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Canon PIXMA MG3670 Launched in Indonesia Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/canon-pixma-mg3670-56c52db0/canon-pixma-mg3670-56c52db0/:1:0","tags":["Active Directory","HTML"],"title":"Canon PIXMA MG3670 Launched in Indonesia","uri":"/printing/print-servers-print-queues-and-print-jobs/canon-pixma-mg3670-56c52db0/canon-pixma-mg3670-56c52db0/"},{"categories":["Printing"],"content":"Output from Technet Gallery Canon through pt. Datascrip as an authorized distributor in Indonesia has recently presented the PIXMA MG3670. It’s a all-In-One Printer that are available in trendy colors and allow users to print documents directly from a mobile device. This printer can also scan a document or photo the the output can be sent directly to the Cloud services via a smartphone or tablet. Print and scan various documents or your favorite photos from your mobile now become so much easier. With Access Point Mode feature users will easier to print documents as well as photos directly from their smartphone or tablet, and you don’t need wireless router at all. Canon also provides Canon Inkjet / SELPHY print app that can be downloaded for free from the Apple App Store or Google Play Store. With this application, you can take a lot of advantage because it allow you to print from popular social media websites like Facebook and Instagram. Canon Inkjet / SELPHY print app works like a virtual remote LCD screen where it allow users to view the current status of printer such as paper jam, or if the ink will run out. Those of you owners of a tablet PC device, Canon also give you Easy PhotoPrint + application that provides tons of layout settings for photos, calendars and you can give some effects to old photos so it will look like a new photo. Using this multifunction inkjet printer, you can save more money and time as well. By using the optional XL ink cartridges, you can print more documents as well as minimize cycle of replacement ink cartridges. Auto Power ON / OFF feature that make energy consumption more efficient is also included in this printer. Canon PIXMA MG3670 has three trendy colors, they are red, white, and black and sold with the price of $105. via : http://www.myhomeprinters.com ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/canon-pixma-mg3670-56c52db0/canon-pixma-mg3670-56c52db0/:2:0","tags":["Active Directory","HTML"],"title":"Canon PIXMA MG3670 Launched in Indonesia","uri":"/printing/print-servers-print-queues-and-print-jobs/canon-pixma-mg3670-56c52db0/canon-pixma-mg3670-56c52db0/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Capture Project Online user last logon Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/capture-online-user-last-43621a21/capture-online-user-last-43621a21/:1:0","tags":["Active Directory","HTML"],"title":"Capture Project Online user last logon","uri":"/project-server/capture-online-user-last-43621a21/capture-online-user-last-43621a21/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This simple JavaScript file enables you to capture the PWA users last logon time from the Project Web App homepage. It is simple to deploy and use - you just need to set up the list first. The link to the blog post below details the steps required. A code snippet can be seen below: JavaScript \u003cscript type=\"text/javascript\"\u003e ExecuteOrDelayUntilScriptLoaded(getUser, \"sp.js\"); var PWAUsageListName = 'PWAUsageList' //update for correct list name var browser var userId var userName var currentUser //get the current user function getUser(){  Here is a link to the supporting blog post that details the requirements to use this script: https://pwmather.wordpress.com/2016/09/30/want-to-capture-the-last-logon-time-for-the-projectonline-pwa-users-ppm-javascript-office365-sharepoint/ ","date":"2019-12-01","objectID":"/project-server/capture-online-user-last-43621a21/capture-online-user-last-43621a21/:2:0","tags":["Active Directory","HTML"],"title":"Capture Project Online user last logon","uri":"/project-server/capture-online-user-last-43621a21/capture-online-user-last-43621a21/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Capture Project Team Morale in SharePoint / Project Online / Project Server 2013 Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/capture-morale-in-9702d380/capture-morale-in-9702d380/:1:0","tags":["Active Directory","HTML"],"title":"Capture Project Team Morale in SharePoint / Project Online / Project Server 2013","uri":"/project-server/capture-morale-in-9702d380/capture-morale-in-9702d380/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This simple JavaScript file enables you to capture the project team morale from the Project Web App homepage or anyother SharePoint site. It is simple to deploy and use - just need to set up the list first. The link to the blog post below details the steps required. A code sample can be seen below: JavaScript \u003cscript type=\"text/javascript\"\u003e ExecuteOrDelayUntilScriptLoaded(getUser, \"sp.js\"); var userId var userName var currentUser; //get the current user function getUser(){ this.clientContext = new SP.ClientContext.get_current(); this.oWeb = clientContext.get_web(); currentUser = this.oWeb.get_currentUser(); this.clientContext.load(currentUser); this.clientContext.executeQueryAsync( Function.createDelegate(this,this.onQuerySucceededUser), Function.createDelegate(this,this.onQueryFailedUser)); Once loaded to the PWA site it will look like the example below: Here is a link to the supporting blog post that details the requirements to use this script: https://pwmather.wordpress.com/2015/12/01/want-to-capture-your-project-team-staff-morale-projectonline-projectserver-sharepoint-ppm-javascript-jquery/ ","date":"2019-12-01","objectID":"/project-server/capture-morale-in-9702d380/capture-morale-in-9702d380/:2:0","tags":["Active Directory","HTML"],"title":"Capture Project Team Morale in SharePoint / Project Online / Project Server 2013","uri":"/project-server/capture-morale-in-9702d380/capture-morale-in-9702d380/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Cascading custom fields Original Technet Description URL Description Download: [Download Link](Download\\Cascading custom fields.docx) ","date":"2019-12-01","objectID":"/project-server/cascading-custom-fields-783ea791/cascading-custom-fields-783ea791/:1:0","tags":["Active Directory","HTML"],"title":"Cascading custom fields","uri":"/project-server/cascading-custom-fields-783ea791/cascading-custom-fields-783ea791/"},{"categories":["Project Server"],"content":"Output from Technet Gallery In this article I’ll detail one of a specific configurations to automatically display values in a lookup table custom field depending on the value select in another custom field. This configuration is based on custom fields, departments and project detail pages (PDP). More details here: http://psbehindthescene.blogspot.co.uk/2014/04/cascading-custom-fields.html ","date":"2019-12-01","objectID":"/project-server/cascading-custom-fields-783ea791/cascading-custom-fields-783ea791/:2:0","tags":["Active Directory","HTML"],"title":"Cascading custom fields","uri":"/project-server/cascading-custom-fields-783ea791/cascading-custom-fields-783ea791/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Catch the Information about the HR Colleagues in Offices Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/project-server/catch-the-information-2fbe7eb9/catch-the-information-2fbe7eb9/:1:0","tags":["Active Directory","HTML"],"title":"Catch the Information about the HR Colleagues in Offices","uri":"/project-server/catch-the-information-2fbe7eb9/catch-the-information-2fbe7eb9/"},{"categories":["Project Server"],"content":"Output from Technet Gallery Human Resources continuously sustain the improved bond between employees and management. Human Resources works like a network between these two main partitions of the business. The essential work of this unit is to support employees in achieving specific and organizational goalmouths. It can trace all the basics of an organization to every employees. It preserves all the actions from hiring to wage of a specific employee. Human Resources field demand has been improved in these days. You will interact with different experts after start working in the department of the HR. Here we are writing about the different kinds of HR colleagues in this **Human Resource assignment help**section for the students. Tongue twister champion: In this department mainly, you will see the person those are talkative because in this department they need to interact with multiple people on daily basis. They need to impress the person with their talkative skills. In this department all work in completely bases on your talking skills. Mostly females: In this department, the main holds are in the hand of female. Or you can say that this is female dominated department. Here you will get the lesser number of male employees. In most of the company’s maximum numbers of females are taking care of this department without any failure. Perfect Experts: Here you will see the most of the experienced persons because they need to complete the paper work perfectly without any mistake. Labour law experts: In this department you will interact with the labour law experts those are perfectly dealing with the situation which is related to the employees. Excel experts: All the employees in this department mainly work on the excel, here you will see the maximum numbers of excel champs. The “scare”: In this department you will see the maximum candidates are serious. They only concern about their work and try to complete the task properly on time. They don’t want to delay their work. The legendary colleagues: This department contains the maximum numbers of experienced persons. In this company many people don’t get the chance to meet them. You only get the mails from these professionals. The smooth talker: In this department all the candidates get the promotion on the basic of their communication skills. Maximum numbers of candidates have the good or you can say that advance communication skills. Situation Handler: Most of the colleague you will in this department are active and smart. They are completely capable to handle the entire situation without any mistake. They even know that which situations occurs and when. They know that every kind of huddles. The nagger: In this department you will definitely meet the colleague who able to complete the speech in a single sentence into 20 to 3o minutes. Yes, it is true these kinds of people are surely you will see in this department as your colleague. Before choosing the best online Human Resources homework and assignment help service benefactor, students should be alert about the benefits and drawbacks of the service benefactors. We tend to available with our technical support 24*7 to clear the doubt and you can easily reach us just with a single click. Our professionals are always ready to assist you with your queries. ","date":"2019-12-01","objectID":"/project-server/catch-the-information-2fbe7eb9/catch-the-information-2fbe7eb9/:2:0","tags":["Active Directory","HTML"],"title":"Catch the Information about the HR Colleagues in Offices","uri":"/project-server/catch-the-information-2fbe7eb9/catch-the-information-2fbe7eb9/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Change Print Server Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/ee5b6f46-a549-4593-874d-e5bfc72c56b7/ee5b6f46-a549-4593-874d-e5bfc72c56b7/:1:0","tags":["Active Directory","HTML"],"title":"Change Print Server","uri":"/printing/printer-ports-and-printer-drivers/ee5b6f46-a549-4593-874d-e5bfc72c56b7/ee5b6f46-a549-4593-874d-e5bfc72c56b7/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **moshe.or Changes a client printer connection to point to a different print server. Visual Basic 'Qchange.vbs 'Syntax: ' cscript qchange.vbs changes.txt ' File format: \\\\ServerName\\Source_Printer;\\\\New_server\\Source_printer On Error Resume Next Const VERBOSE = \"N\" 'Display progress (Y or N) Const Title = \"Print Connection Migrator\" Const ForReading = 1 Dim strDefaultPrinter Dim InstalledPrinters 'Array of printer names Dim Textfile 'File with print Q names Dim OldPrintQueues() 'Dynamic array to store old print queue names, from the text file Dim NewPrintQueues() 'Dynamic array to store new print queue names, from the text file Dim fso 'File System Object Dim objTextFile 'Text file object Dim strNextLine 'Line of the text file Dim i Dim WshNetwork Set WshNetwork = CreateObject(\"WScript.Network\") ' 1. - Get the command line args ### SET Parameters = Wscript.arguments 'If no command line arguments provided, quit If Parameters.Count = 0 Then WScript.Quit(1) Else Textfile = Parameters.item(0) End If If Textfile = \"\" or Not Right(TextFile,4) = \".txt\" or Not FileExist(Textfile) Then Error=MsgBox(\"No valid input file provided. Stopping the script now.\",vbokonly, Title) WScript.Quit(1) End If If VERBOSE = \"Y\" Then Wscript.Echo \"Reading input file\" ' 2. Read the text file and import it in a Array ### Set objFSO = CreateObject(\"Scripting.FileSystemObject\") Set objTextFile = objFSO.OpenTextFile (TextFile, ForReading) i=-1 While not objTextFile.AtEndOfStream i = i+1 Redim Preserve OldPrintQueues(i) ReDim Preserve NewPrintQueues(i) strLine = objTextFile.Readline 'Do not import the comment lines If Left(strLine,2) = \"\\\\\" Then OldPrintQueues(i) = Left(strLine,InStr(strline,\";\")-1) If VERBOSE = \"Y\" Then Wscript.Echo \" old Q is: \" \u0026 OldPrintQueues(i) NewPrintQueues(i) = Mid(strline,InStr(strline,\";\")+1,Len(strline)) If VERBOSE = \"Y\" Then Wscript.Echo \" new Q is: \" \u0026 NewPrintQueues(i) End If Wend objTextFile.Close ' 3. Store the name of the default Printer ### strDefaultPrinter = DefaultPrinter If VERBOSE = \"Y\" Then Wscript.Echo \" Default is: \" \u0026 strDefaultPrinter ' 4. WMI query for current printer connections ### strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colInstalledPrinters = objWMIService.ExecQuery _ (\"Select * from Win32_Printer\") ' 5. Main Loop through printer collection ### For Each objPrinter in colInstalledPrinters If VERBOSE = \"Y\" Then Wscript.Echo \" Current connection: \" \u0026 objPrinter.Name If Left(objPrinter.Name, 2) = \"\\\\\" Then 'Work only On network printers 'Search the corresponding printer and create it i = 0 'set the indice at the beginning of the array (prepare to loop) Do Until i \u003e UBound(OldPrintQueues) If UCase(objPrinter.Name) = UCase(OldPrintQueues(i)) Then 'Create the connection to the new printer If VERBOSE = \"Y\" Then Wscript.Echo \" New connection: \" \u0026 NewPrintQueues(i) WshNetwork.AddWindowsPrinterConnection NewPrintQueues(i) If UCase(strDefaultPrinter) = UCase(objPrinter.Name) Then 'This is the default printer 'Set the default Printer WshNetwork.SetDefaultPrinter NewPrintQueues(i) End If 'Delete the printer connection WshNetwork.RemovePrinterConnection objPrinter.Name If VERBOSE = \"Y\" Then Wscript.Echo \" Removing : \" \u0026 objPrinter.Name End If i = i + 1 Loop End If 'End of check for network printers Next 'End of the loop through the printers of this user Set WshNetwork = Nothing '----------------- ' Functions '----------------- 'Return the default printer Function DefaultPrinter Dim strComputer Dim Result strComputer = \".\" Result = \"\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colInstalledPrinters = objWMIService.ExecQuery _ (\"Select * from Win32_Printer\") For Each objPrinter in colInstalledPrinters If objPrinter.Default = True Then Result = objPrinter.Name End If Next DefaultPrinter = Result End Function '-------","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/ee5b6f46-a549-4593-874d-e5bfc72c56b7/ee5b6f46-a549-4593-874d-e5bfc72c56b7/:2:0","tags":["Active Directory","HTML"],"title":"Change Print Server","uri":"/printing/printer-ports-and-printer-drivers/ee5b6f46-a549-4593-874d-e5bfc72c56b7/ee5b6f46-a549-4593-874d-e5bfc72c56b7/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Change the Printer Server on a Client Computer Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/3eccad3c-8cf1-4edc-9805-66741d48a09e/3eccad3c-8cf1-4edc-9805-66741d48a09e/:1:0","tags":["Active Directory","HTML"],"title":"Change the Printer Server on a Client Computer","uri":"/printing/printer-ports-and-printer-drivers/3eccad3c-8cf1-4edc-9805-66741d48a09e/3eccad3c-8cf1-4edc-9805-66741d48a09e/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **moshe.or@gmail.com Points an existing printer on a client computer to a new print server. Visual Basic 'Qchange.vbs 'Syntax: ' cscript qchange.vbs changes.txt ' File format: \\\\ServerName\\Source_Printer;\\\\New_server\\Source_printer On Error Resume Next Const VERBOSE = \"N\" 'Display progress (Y or N) Const Title = \"Print Connection Migrator\" Const ForReading = 1 Dim strDefaultPrinter Dim InstalledPrinters 'Array of printer names Dim Textfile 'File with print Q names Dim OldPrintQueues() 'Dynamic array to store old print queue names, from the text file Dim NewPrintQueues() 'Dynamic array to store new print queue names, from the text file Dim fso 'File System Object Dim objTextFile 'Text file object Dim strNextLine 'Line of the text file Dim i Dim WshNetwork Set WshNetwork = CreateObject(\"WScript.Network\") ' 1. - Get the command line args ### SET Parameters = Wscript.arguments 'If no command line arguments provided, quit If Parameters.Count = 0 Then WScript.Quit(1) Else Textfile = Parameters.item(0) End If If Textfile = \"\" or Not Right(TextFile,4) = \".txt\" or Not FileExist(Textfile) Then Error=MsgBox(\"No valid input file provided. Stopping the script now.\",vbokonly, Title) WScript.Quit(1) End If If VERBOSE = \"Y\" Then Wscript.Echo \"Reading input file\" ' 2. Read the text file and import it in a Array ### Set objFSO = CreateObject(\"Scripting.FileSystemObject\") Set objTextFile = objFSO.OpenTextFile (TextFile, ForReading) i=-1 While not objTextFile.AtEndOfStream i = i+1 Redim Preserve OldPrintQueues(i) ReDim Preserve NewPrintQueues(i) strLine = objTextFile.Readline 'Do not import the comment lines If Left(strLine,2) = \"\\\\\" Then OldPrintQueues(i) = Left(strLine,InStr(strline,\";\")-1) If VERBOSE = \"Y\" Then Wscript.Echo \" old Q is: \" \u0026 OldPrintQueues(i) NewPrintQueues(i) = Mid(strline,InStr(strline,\";\")+1,Len(strline)) If VERBOSE = \"Y\" Then Wscript.Echo \" new Q is: \" \u0026 NewPrintQueues(i) End If Wend objTextFile.Close ' 3. Store the name of the default Printer ### strDefaultPrinter = DefaultPrinter If VERBOSE = \"Y\" Then Wscript.Echo \" Default is: \" \u0026 strDefaultPrinter ' 4. WMI query for current printer connections ### strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colInstalledPrinters = objWMIService.ExecQuery _ (\"Select * from Win32_Printer\") ' 5. Main Loop through printer collection ### For Each objPrinter in colInstalledPrinters If VERBOSE = \"Y\" Then Wscript.Echo \" Current connection: \" \u0026 objPrinter.Name If Left(objPrinter.Name, 2) = \"\\\\\" Then 'Work only On network printers 'Search the corresponding printer and create it i = 0 'set the indice at the beginning of the array (prepare to loop) Do Until i \u003e UBound(OldPrintQueues) If UCase(objPrinter.Name) = UCase(OldPrintQueues(i)) Then 'Create the connection to the new printer If VERBOSE = \"Y\" Then Wscript.Echo \" New connection: \" \u0026 NewPrintQueues(i) WshNetwork.AddWindowsPrinterConnection NewPrintQueues(i) If UCase(strDefaultPrinter) = UCase(objPrinter.Name) Then 'This is the default printer 'Set the default Printer WshNetwork.SetDefaultPrinter NewPrintQueues(i) End If 'Delete the printer connection WshNetwork.RemovePrinterConnection objPrinter.Name If VERBOSE = \"Y\" Then Wscript.Echo \" Removing : \" \u0026 objPrinter.Name End If i = i + 1 Loop End If 'End of check for network printers Next 'End of the loop through the printers of this user Set WshNetwork = Nothing '----------------- ' Functions '----------------- 'Return the default printer Function DefaultPrinter Dim strComputer Dim Result strComputer = \".\" Result = \"\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colInstalledPrinters = objWMIService.ExecQuery _ (\"Select * from Win32_Printer\") For Each objPrinter in colInstalledPrinters If objPrinter.Default = True Then Result = objPrinter.Name End If Next DefaultPrinter = Result End Function '","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/3eccad3c-8cf1-4edc-9805-66741d48a09e/3eccad3c-8cf1-4edc-9805-66741d48a09e/:2:0","tags":["Active Directory","HTML"],"title":"Change the Printer Server on a Client Computer","uri":"/printing/printer-ports-and-printer-drivers/3eccad3c-8cf1-4edc-9805-66741d48a09e/3eccad3c-8cf1-4edc-9805-66741d48a09e/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Check and start the spooler servi Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/check-and-start-the-d1b90917/check-and-start-the-d1b90917/:1:0","tags":["Active Directory","HTML"],"title":"Check and start the spooler servi","uri":"/printing/print-servers-print-queues-and-print-jobs/check-and-start-the-d1b90917/check-and-start-the-d1b90917/"},{"categories":["Printing"],"content":"Output from Technet Gallery We recently went through at terrible period of printing problems in our Citrix-farm. The spooler service crashed on 20 servers every 5 minutes. The script checks if the spooler service is running on each server listed in a csv-file. If the service isn’t running the script will start it. You need to run the script with a user which have admin privileges on the targeted servers. List the servernames in a csv-file named serversSpool.csv within the same folder as the script. Heading ServerName, new line for each server. Ooops, I made a itsy bitsy teeny weeny mistake in my script file. The first line should read: $servers = Import-Csv .\\serversSpool.csv $servers = Import-Csv .\\serversSpool.csv foreach ($server in $servers) { $a = (Get-Service -Computer $server.ServerName -Name spooler | where {$_.Status -eq \"Stopped\"}) if (!$a) {\"The spooler is running on \"+$server.ServerName} else {Start-Service -InputObject $a;\"The spooler was startet on \"+$server.ServerName} }  After a while I got tired of running the script manually so i added a timer function. Found it in a script from mck74 and mjolinor. Since I’m not the author of all the code, only the old script is uploaded The new script: # Timer code from mck74 and mjolinor $timer = [System.Diagnostics.Stopwatch]::StartNew() $run_interval = 5 $run_pass = { $timer.reset() $timer.start() $servers = Import-Csv .\\serversSpool.csv foreach ($server in $servers) { $a = (Get-Service -Computer $server.ServerName -Name spooler | where {$_.Status -eq \"Stopped\"}) if (!$a) {\"The spooler is running on \"+$server.ServerName} else {Start-Service -InputObject $a;\"The spooler was startet on \"+$server.ServerName} } } #End of code that should run #run the first pass $start_pass = Get-Date \u0026$run_pass #if $run_interval is set, calculate how long to sleep before the next pass while ($run_interval -gt 0){ if ($run_interval -eq \"C\"){\u0026$run_pass} else{ $last_run = (Get-Date) - $start_pass $sleep_time = ([TimeSpan]::FromMinutes($run_interval) - $last_run).totalseconds Write-Host \"`n$(\"*\"*10) Sleeping for $($sleep_time) seconds `n\" #sleep, and then start the next pass Start-Sleep -seconds $sleep_time $start_pass = Get-Date \u0026$run_pass } }  $run_interval is the time between the execution of the code in minutes. If set to C it runs in continuous loop, if set to 0 it runs once. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/check-and-start-the-d1b90917/check-and-start-the-d1b90917/:2:0","tags":["Active Directory","HTML"],"title":"Check and start the spooler servi","uri":"/printing/print-servers-print-queues-and-print-jobs/check-and-start-the-d1b90917/check-and-start-the-d1b90917/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Check effective SharePoint permissions for PWA users in PWA si Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/check-effective-sharepoint-2f44b8a6/check-effective-sharepoint-2f44b8a6/:1:0","tags":["Active Directory","HTML"],"title":"Check effective SharePoint permissions for PWA users in PWA si","uri":"/project-server/check-effective-sharepoint-2f44b8a6/check-effective-sharepoint-2f44b8a6/"},{"categories":["Project Server"],"content":"Output from Technet Gallery The attached script will get a list of user accounts from the Project Server database based on membership in specific Project Server groups. It will then iterate through the user list and check the effective permission for the specified PWA site for each of them. Script does not use parameters currently. You need to modify at least 3 lines (mentioned in the first line of the script) to fill the database, group name and PWA url. The script was written to help with a synchronization issue with Project Server 2013. In some environments we found that users did not have permissions for the SharePoint site despite having global logon permission in PWA and a “successful” synchronization job in the queue. The quest was: How to find out which users are affected by this issue. Script party based on script by Rahul Rashu in http://social.technet.microsoft.com/wiki/contents/articles/31207.sharepoint-2013-how-to-check-effective-permissions-of-a-user-in-each-site-in-a-site-collection.aspx. Thanks for that. #Please modify lines 23, 30 and 40 as needed [void][System.Reflection.Assembly]::LoadWithPartialName(\"Microsoft.SharePoint\") [void][System.Reflection.Assembly]::LoadWithPartialName(\"Microsoft.Office.Server\") [void][System.Reflection.Assembly]::LoadWithPartialName(\"Microsoft.Office.Server.UserProfiles\") [void][System.Reflection.Assembly]::LoadWithPartialName(\"System.Web\") Add-PSSnapin Microsoft.SharePoint.Powershell function GetHelp() { $HelpText = @\" DESCRIPTION: This Script will check for the SharePoint permissions of PWA users. PWA users are specified in a SQL query (member of group having name like xxxx) \"@ $HelpText } function CheckEffectivePermissions() { $connection= new-object system.data.sqlclient.sqlconnection #Set new object to connect to sql database #####modify the connection string as needed: $connection.ConnectionString =\"server=SQLSERVERNAME;database=ProjectWebApp_DB;trusted_connection=True\" # Connectiongstring setting for local machine database with window authentication Write-host \"connection information:\" $connection #List connection information Write-host \"connect to database successful.\" $connection.open() #Connecting successful $SqlCmd = New-Object System.Data.SqlClient.SqlCommand #setting object to use sql commands #####modify this query as necessary $SqlQuery = \"select sc.ENCODED_CLAIM from pub.MSP_WEB_SECURITY_CLAIMS sc inner join pub.MSP_WEB_SECURITY_GROUP_MEMBERS sgm on sc.SECURITY_GUID =sgm.WRES_GUID inner join pub.MSP_WEB_SECURITY_GROUPS sg on sg.WSEC_GRP_GUID=sgm.WSEC_GRP_GUID where sg.WSEC_GRP_NAME like '%Projectmanager%'\" $SqlCmd.CommandText = $SqlQuery # get query $SqlAdapter = New-Object System.Data.SqlClient.SqlDataAdapter # $SqlAdapter.SelectCommand = $SqlCmd $SqlCmd.Connection = $connection $DataSet = New-Object System.Data.DataSet $SqlAdapter.Fill($DataSet) $connection.Close() #####enter the URL here $url=\"URL of PWA site here\" $site=get-spsite $url $serverContext = [Microsoft.Office.Server.ServerContext]::GetContext($site) $web=get-spweb $url foreach ($row in $DataSet.Tables[0]) { $userlogin=$row[0] $permissionInfo = $web.GetUserEffectivePermissionInfo($userLogin) $roles = $permissionInfo.RoleAssignments write-host \"Now checking the permissions of the user \" $userLogin \" \" \"in the site \" $web.Url if ($roles.count -eq 0) {write-host \"The User \" $userlogin \" does not have any permissions in this web\"} for ($i = 0; $i -lt $roles.Count; $i++) { $bRoles = $roles[$i].RoleDefinitionBindings foreach ($roleDefinition in $bRoles) { if ($roles[$i].Member.ToString().Contains('\\')) { write-host \"The User \" $userLogin \" has direct permissions \" $roleDefinition.Name } else { write-host \"The User \" $userLogin \" has permissions \" $roleDefinition.Name \" given via \" $roles[$i].Member.ToString() } } } } $site.Dispose() } if($help) { GetHelp; Continue } else { CheckEffectivePermissions } ","date":"2019-12-01","objectID":"/project-server/check-effective-sharepoint-2f44b8a6/check-effective-sharepoint-2f44b8a6/:2:0","tags":["Active Directory","HTML"],"title":"Check effective SharePoint permissions for PWA users in PWA si","uri":"/project-server/check-effective-sharepoint-2f44b8a6/check-effective-sharepoint-2f44b8a6/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Check entities from multiple Project Online PWA instances Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/check-entities-from-a1cb87e4/check-entities-from-a1cb87e4/:1:0","tags":["Active Directory","HTML"],"title":"Check entities from multiple Project Online PWA instances","uri":"/project-server/check-entities-from-a1cb87e4/check-entities-from-a1cb87e4/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This PowerShell script will use the Project CSOM API to return a list of Enterprise Custom Fields from mutiple PWA instances. The user running the script specifies the number of PWA instances to check then enters the URL, Username and password for each. The fields will then be displayed in the console but it could easily be updated to output these to a file. A code snippet can be seen below: #Add in libraries #Project CSOM Add-Type -Path 'C:\\Program Files\\Common Files\\microsoft shared\\Web Server Extensions\\15\\ISAPI\\Microsoft.ProjectServer.Client.dll' #add SharePoint Online DLL $programFiles = [environment]::getfolderpath(\"programfiles\") add-type -Path $programFiles'\\SharePoint Online Management Shell\\Microsoft.Online.SharePoint.PowerShell\\Microsoft.SharePoint.Client.dll' $NoPWAInstances = Read-Host \"how many instances to check?\" $PWAIntances = 1 For the script to work, references will need to be updated to point to the correct DLLs. The script has only been tested using PowerShell 3.0, other versions of PowerShell may not work - see the note in the blog post below. A supporting blog post can be seen here: https://pwmather.wordpress.com/2015/11/04/check-entities-from-multiple-projectonline-pwa-instances-using-powershell-and-csom-office365/ The script is provided “As is” with no warranties etc. ","date":"2019-12-01","objectID":"/project-server/check-entities-from-a1cb87e4/check-entities-from-a1cb87e4/:2:0","tags":["Active Directory","HTML"],"title":"Check entities from multiple Project Online PWA instances","uri":"/project-server/check-entities-from-a1cb87e4/check-entities-from-a1cb87e4/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Check for and Add a Network Printer Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/560dec08-9eaa-4dd2-ad52-08f06ea1c1e6/560dec08-9eaa-4dd2-ad52-08f06ea1c1e6/:1:0","tags":["Active Directory","HTML"],"title":"Check for and Add a Network Printer","uri":"/printing/printer-ports-and-printer-drivers/560dec08-9eaa-4dd2-ad52-08f06ea1c1e6/560dec08-9eaa-4dd2-ad52-08f06ea1c1e6/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **Anonymous Submission Checks for the existence of a network printer on a computer, and adds that printer if it cannot be found. Visual Basic Dim objPrinter Set objPrinter = CreateObject(\"WScript.Network\") If WScript.Arguments.count \u003c 1 Then '---name of printer on print server----- '---do not include the server name----- WScript.Echo(\"Missing command line arguments\") WScript.Quit End If Printer=WScript.Arguments.Item(0) For Each x In objPrinter.EnumPrinterConnectionsIf x\u003c\u003e\"\\\\cwcdc\\\" \u0026 Printer Then '--change cwcdc with the name of your print server--- objPrinter.AddWindowsPrinterConneon _ (\"\\\\cwcdc\\\" \u0026 Printer)'--change cwcdc with the name of your print server--- Exit For End if Next objPrinter.SetDefaultPrinter \"\\\\cwcdc\\\" \u0026 Printer '--change cwcdc with the name of your print server--- ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/560dec08-9eaa-4dd2-ad52-08f06ea1c1e6/560dec08-9eaa-4dd2-ad52-08f06ea1c1e6/:2:0","tags":["Active Directory","HTML"],"title":"Check for and Add a Network Printer","uri":"/printing/printer-ports-and-printer-drivers/560dec08-9eaa-4dd2-ad52-08f06ea1c1e6/560dec08-9eaa-4dd2-ad52-08f06ea1c1e6/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Check for non healthy printers on server Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/30a8318d-3388-4261-8e8d-474fb881f9b5/30a8318d-3388-4261-8e8d-474fb881f9b5/:1:0","tags":["Active Directory","HTML"],"title":"Check for non healthy printers on server","uri":"/printing/print-servers-print-queues-and-print-jobs/30a8318d-3388-4261-8e8d-474fb881f9b5/30a8318d-3388-4261-8e8d-474fb881f9b5/"},{"categories":["Printing"],"content":"Output from Technet Gallery Checks printer que’s on one or multiple servers to see if they are healthy CLS $arrayComp =\"Server1\" foreach ($machine in $arrayComp) { get-WmiObject -class win32_printer -computername $machine |` where-object {$_.status -notmatch \"Unknown\" -and $_.status -notmatch \"Ok\"} | sort name | ft name, systemName, shareName, status, location } ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/30a8318d-3388-4261-8e8d-474fb881f9b5/30a8318d-3388-4261-8e8d-474fb881f9b5/:2:0","tags":["Active Directory","HTML"],"title":"Check for non healthy printers on server","uri":"/printing/print-servers-print-queues-and-print-jobs/30a8318d-3388-4261-8e8d-474fb881f9b5/30a8318d-3388-4261-8e8d-474fb881f9b5/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Check if the network printer is connected (PowerShell) Original Technet Description URL Description Download: [Download Link](Download\\CheckIfNetworkPrinterIsConnected (PowerShell).zip) ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/check-if-the-network-30e7800a/check-if-the-network-30e7800a/:1:0","tags":["Active Directory","HTML"],"title":"Check if the network printer is connected (PowerShell)","uri":"/printing/print-servers-print-queues-and-print-jobs/check-if-the-network-30e7800a/check-if-the-network-30e7800a/"},{"categories":["Printing"],"content":"Output from Technet Gallery Check if the network printer is connected (PowerShell) ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/check-if-the-network-30e7800a/check-if-the-network-30e7800a/:2:0","tags":["Active Directory","HTML"],"title":"Check if the network printer is connected (PowerShell)","uri":"/printing/print-servers-print-queues-and-print-jobs/check-if-the-network-30e7800a/check-if-the-network-30e7800a/"},{"categories":["Printing"],"content":"Introduction This PowerShell script will list the status of network printer and whether the printer connection is connected. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/check-if-the-network-30e7800a/check-if-the-network-30e7800a/:3:0","tags":["Active Directory","HTML"],"title":"Check if the network printer is connected (PowerShell)","uri":"/printing/print-servers-print-queues-and-print-jobs/check-if-the-network-30e7800a/check-if-the-network-30e7800a/"},{"categories":["Printing"],"content":"Scenarios In a real word, office environment are always changing, users have been using the network for a long time. Many users will encounter some printer problems, but not all of the print problems are user related, sometime some problems from printer itself, especially the printers were offline. IT helpdesk always take a lot of time on it. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/check-if-the-network-30e7800a/check-if-the-network-30e7800a/:4:0","tags":["Active Directory","HTML"],"title":"Check if the network printer is connected (PowerShell)","uri":"/printing/print-servers-print-queues-and-print-jobs/check-if-the-network-30e7800a/check-if-the-network-30e7800a/"},{"categories":["Printing"],"content":"Script Step1: Start the PowerShell Console with administrator. To run the script in the Windows PowerShell Console**,** type the one command\u003c Script Path\u003e at the Windows PowerShell Console. For example, type C:\\Script\\CheckIfNetworkPrinterIsConnected.ps1 The step is shown in the following figure. When the script finishes running, it will display the results as below. Here are some code snippets for your references. To get the complete script sample, please click the download button at the beginning of this page. Try { #retrieve all network printer and check if network printer is connected Get-WmiObject -Class Win32_Printer -ErrorAction Stop | Where {$_.Network} | Select-Object Name,SystemName,` @{Name=\"PrinterStatus\";Expression={Switch($_.PrinterStatus) {1{\"Other\"; break}2{\"Unknown\"; break}3{\"Idle\"; break}4{\"Printing\"; break}5{\"Warming Up\"; break}6{\"Stopped printing\"; break}7{\"Offline\"; break}}}},` @{Name=\"ConnectedStatus\";Expression={$PrinterName = $_.Name; Try { $NetworkObj = New-Object -ComObject WScript.Network $NetworkObj.AddWindowsPrinterConnection(\"$PrinterName\") \"Connected\"} Catch {\"Unconnected\"}}} | Format-Table -AutoSize } ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/check-if-the-network-30e7800a/check-if-the-network-30e7800a/:5:0","tags":["Active Directory","HTML"],"title":"Check if the network printer is connected (PowerShell)","uri":"/printing/print-servers-print-queues-and-print-jobs/check-if-the-network-30e7800a/check-if-the-network-30e7800a/"},{"categories":["Printing"],"content":"Prerequisite Windows PowerShell 2.0 ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/check-if-the-network-30e7800a/check-if-the-network-30e7800a/:6:0","tags":["Active Directory","HTML"],"title":"Check if the network printer is connected (PowerShell)","uri":"/printing/print-servers-print-queues-and-print-jobs/check-if-the-network-30e7800a/check-if-the-network-30e7800a/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Check if the network printer is connected (VBScript) Original Technet Description URL Description Download: [Download Link](Download\\CheckIfNetworkPrinterIsConnected (VBScript).zip) ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/check-if-the-network-3d8d2b2c/check-if-the-network-3d8d2b2c/:1:0","tags":["Active Directory","HTML"],"title":"Check if the network printer is connected (VBScript)","uri":"/printing/print-servers-print-queues-and-print-jobs/check-if-the-network-3d8d2b2c/check-if-the-network-3d8d2b2c/"},{"categories":["Printing"],"content":"Output from Technet Gallery Check if the network printer is connected (VBScript) ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/check-if-the-network-3d8d2b2c/check-if-the-network-3d8d2b2c/:2:0","tags":["Active Directory","HTML"],"title":"Check if the network printer is connected (VBScript)","uri":"/printing/print-servers-print-queues-and-print-jobs/check-if-the-network-3d8d2b2c/check-if-the-network-3d8d2b2c/"},{"categories":["Printing"],"content":"Introduction This VBScript will list the status of network printer and whether the printer connection is connected. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/check-if-the-network-3d8d2b2c/check-if-the-network-3d8d2b2c/:3:0","tags":["Active Directory","HTML"],"title":"Check if the network printer is connected (VBScript)","uri":"/printing/print-servers-print-queues-and-print-jobs/check-if-the-network-3d8d2b2c/check-if-the-network-3d8d2b2c/"},{"categories":["Printing"],"content":"Scenarios In a real word, office environment are always changing, users have been using the network for a long time. Many users will encounter some printer problems, but not all of the print problems are user related, sometime some problems from printer itself, especially the printers were offline. IT helpdesk always take a lot of time on it. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/check-if-the-network-3d8d2b2c/check-if-the-network-3d8d2b2c/:4:0","tags":["Active Directory","HTML"],"title":"Check if the network printer is connected (VBScript)","uri":"/printing/print-servers-print-queues-and-print-jobs/check-if-the-network-3d8d2b2c/check-if-the-network-3d8d2b2c/"},{"categories":["Printing"],"content":"Script Step 1:** ****Step 1: **Click **Start**, type **cmd** in the search box on the Start Menu, right-click the **cmd.exe **icon, and then click **Run as administrator**. If the **User Account Control** dialog box appears, confirm that the action it displays is what you want, and then click **Continue**. **Step 2: **Run this VBScript with cscript in the Windows Console (type the path of the script at the command prompt) The step is shown in the following figure. When the script finishes running, it will spawn a window that displays brief information about the result. Here are some code snippets for your references. To get the complete script sample, please click the download button at the beginning of this page. VB Script For Each objPrinter in colPrinters PrinterPath = objPrinter.Name If IsEmpty(PrinterPath) Then WScript.Echo \"Failed to find printer, please check your printer service 'Spooler' is running.\" Else WshNetwork.AddWindowsPrinterConnection PrinterPath If Err.Number = 0 Then PrinterStatus = \"Connected\" Else PrinterStatus = \"Unconnected\" End If WScript.Echo \"Name :\" \u0026 vbTab \u0026 PrinterPath \u0026 vbCrLf \u0026 \"Conneted Status : \" \u0026 PrinterStatus End If Next ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/check-if-the-network-3d8d2b2c/check-if-the-network-3d8d2b2c/:5:0","tags":["Active Directory","HTML"],"title":"Check if the network printer is connected (VBScript)","uri":"/printing/print-servers-print-queues-and-print-jobs/check-if-the-network-3d8d2b2c/check-if-the-network-3d8d2b2c/"},{"categories":["Printing"],"content":"Prerequisite Windows XP or higher version ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/check-if-the-network-3d8d2b2c/check-if-the-network-3d8d2b2c/:6:0","tags":["Active Directory","HTML"],"title":"Check if the network printer is connected (VBScript)","uri":"/printing/print-servers-print-queues-and-print-jobs/check-if-the-network-3d8d2b2c/check-if-the-network-3d8d2b2c/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Collecting ProjectServer logs Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/project-server/collecting-projectserver-8a38c086/collecting-projectserver-8a38c086/:1:0","tags":["Active Directory","HTML"],"title":"Collecting ProjectServer logs","uri":"/project-server/collecting-projectserver-8a38c086/collecting-projectserver-8a38c086/"},{"categories":["Project Server"],"content":"Output from Technet Gallery While debugging/testing features on ProjectServer you might need to examine logs. Here is a short step by step guid on how to get a clean log. – Draft –select * from msp_queue_project_message delete from msp_queue_project_message delete from msp_queue_project_group delete from msp_queue_project_group_archive delete from msp_queue_project_filter delete from msp_queue_project_stats Do a new job - case save and/or publish Take a uls verbose with SharePoint PowerShell as follows: 1- $starttime = Get-Date 2- Set-SPLogLevel -TraceSeverity VerboseEx 3- New-SPLogFile 4- Repro 5- $endtime = Get-Date 6- Merge-SPLogFile -Path MergedLog.log -StartTime $starttime -EndTime $endtime 7- New-SPLogFile 8- Clear-SPLogLevel ** ** ","date":"2019-12-01","objectID":"/project-server/collecting-projectserver-8a38c086/collecting-projectserver-8a38c086/:2:0","tags":["Active Directory","HTML"],"title":"Collecting ProjectServer logs","uri":"/project-server/collecting-projectserver-8a38c086/collecting-projectserver-8a38c086/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Compare Print Server Queues and Drivers Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/compare-print-server-cc8ec286/compare-print-server-cc8ec286/:1:0","tags":["Active Directory","HTML"],"title":"Compare Print Server Queues and Drivers","uri":"/printing/print-servers-print-queues-and-print-jobs/compare-print-server-cc8ec286/compare-print-server-cc8ec286/"},{"categories":["Printing"],"content":"Output from Technet Gallery Compare Print Server Queues and Drivers ### Authored by David Dubuque ### Function get-printserverqueues { [System.Reflection.Assembly]::LoadWithPartialName('Microsoft.VisualBasic') | Out-Null $ServerName = $First = [Microsoft.VisualBasic.Interaction]::InputBox(\"Type the first server name to compare printer information\", \"Printer Server Number One\") $Second = [Microsoft.VisualBasic.Interaction]::InputBox(\"Type the second server name to compare printer information\", \"Print Server Number Two\") $Computers = \"$($First)\",\"$($Second)\" foreach($computer in $Computers) { $PrinterNames = Get-Printer -ComputerName $computer| Select Name,DriverName $csvexport = \"C:\\Users\\$ENV:USERNAME\\Desktop\\$($computer)_Printer_Results.csv\" foreach($PrinterName in $PrinterNames) { $DriverName = $PrinterName.DriverName $Printers = Get-PrinterDriver -ComputerName $computer|?{$_.Name -eq $PrinterName.DriverName}| Select-Object Name,@{n=\"DriverVersion\";e={ $ver = $_.DriverVersion $rev = $ver -band 0xffff $build = ($ver -shr 16) -band 0xffff $minor = ($ver -shr 32) -band 0xffff $major = ($ver -shr 48) -band 0xffff \"$major.$minor.$build.$rev\" }} foreach($Printer in $Printers) { $hash = @{ \"Server\" = $computer \"PrinterName\" = $PrinterName.Name \"DriverName\" = $PrinterName.DriverName \"DriverVersion\" = $Printer.DriverVersion} $newRow = New-Object PsObject -Property $hash $newRow|Select Server,PrinterName,DriverName,DriverVersion|Export-CSV $csvexport -Append -Force -NoTypeInformation } } $CSV = Import-CSV $csvexport|Sort PrinterName -Unique $CSV|Out-GridView -Title \"$computer Printers\" Remove-Variable hash Remove-Variable newRow Remove-Item $csvexport -Force } } ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/compare-print-server-cc8ec286/compare-print-server-cc8ec286/:2:0","tags":["Active Directory","HTML"],"title":"Compare Print Server Queues and Drivers","uri":"/printing/print-servers-print-queues-and-print-jobs/compare-print-server-cc8ec286/compare-print-server-cc8ec286/"},{"categories":["Printing"],"content":"Purpose This sfunction is something I built to provide a friendlier output while comparing two print servers queues and the drivers associated. The company I work for has been migrating our file and print services from Windows Server 2008 R2 to Windows Server 2012 R2. This has been extremely helpful in verifying queue names, and drivers match up. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/compare-print-server-cc8ec286/compare-print-server-cc8ec286/:3:0","tags":["Active Directory","HTML"],"title":"Compare Print Server Queues and Drivers","uri":"/printing/print-servers-print-queues-and-print-jobs/compare-print-server-cc8ec286/compare-print-server-cc8ec286/"},{"categories":["Printing"],"content":"Usage When running you define two servers to compare. It really doesn’t matter which is first or second, both will have an output. The reason I have the process generate CSV files for re-importing the data, is that if you want to keep record of the comparision, you can modift the script to not delete the CSV files, once it opens the out-grid. There are more efficient ways to handle this data, however creating CSV’s was done on purpose. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/compare-print-server-cc8ec286/compare-print-server-cc8ec286/:4:0","tags":["Active Directory","HTML"],"title":"Compare Print Server Queues and Drivers","uri":"/printing/print-servers-print-queues-and-print-jobs/compare-print-server-cc8ec286/compare-print-server-cc8ec286/"},{"categories":["Printing"],"content":"Note This works with both server 2008 R2 and 2012 R2 remove the function line and brackets to use as a standalone script. You must be an administrator of both boxes, with manage permission over each queue in order to query the information. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/compare-print-server-cc8ec286/compare-print-server-cc8ec286/:5:0","tags":["Active Directory","HTML"],"title":"Compare Print Server Queues and Drivers","uri":"/printing/print-servers-print-queues-and-print-jobs/compare-print-server-cc8ec286/compare-print-server-cc8ec286/"},{"categories":["Printing"],"content":"Outputs Below are the expected inputs and outputs. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/compare-print-server-cc8ec286/compare-print-server-cc8ec286/:6:0","tags":["Active Directory","HTML"],"title":"Compare Print Server Queues and Drivers","uri":"/printing/print-servers-print-queues-and-print-jobs/compare-print-server-cc8ec286/compare-print-server-cc8ec286/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Configure Project Server 2016 Beta 2 using PowerShell Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/configure-server-2016-beta-ab806c4a/configure-server-2016-beta-ab806c4a/:1:0","tags":["Active Directory","HTML"],"title":"Configure Project Server 2016 Beta 2 using PowerShell","uri":"/project-server/configure-server-2016-beta-ab806c4a/configure-server-2016-beta-ab806c4a/"},{"categories":["Project Server"],"content":"Output from Technet Gallery The following PowerShell scrips provisions SharePoint 2016 Technical Preview Beta 2 Warning: There is no error trapping or testing to determine if something is already in place. My intention with this script is to execute line by line and if an error occurs, then determine the cause and skip or fix the issue. There are a few new things in this script, such as creating the project server services and providing the license key. Also, create PWA with SharePoint sites within this collection. ","date":"2019-12-01","objectID":"/project-server/configure-server-2016-beta-ab806c4a/configure-server-2016-beta-ab806c4a/:2:0","tags":["Active Directory","HTML"],"title":"Configure Project Server 2016 Beta 2 using PowerShell","uri":"/project-server/configure-server-2016-beta-ab806c4a/configure-server-2016-beta-ab806c4a/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Configure Project Server 2016 Technical Preview Beta 1 Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/install-server-2016-7e0cebd0/install-server-2016-7e0cebd0/:1:0","tags":["Active Directory","HTML"],"title":"Configure Project Server 2016 Technical Preview Beta 1","uri":"/project-server/install-server-2016-7e0cebd0/install-server-2016-7e0cebd0/"},{"categories":["Project Server"],"content":"Output from Technet Gallery The following script is an example of loading project server 2016 technial preview from the SharePoint 2016 Technical Prview. The powershell script provides a place to update variables that are used thru the script. The script creates web application, site and provision project server using the new processes. Prior to running script the following must be done Install SQL Server INstall SHarePoint Server 2016 Technical Preview Setup Domain Accounts ","date":"2019-12-01","objectID":"/project-server/install-server-2016-7e0cebd0/install-server-2016-7e0cebd0/:2:0","tags":["Active Directory","HTML"],"title":"Configure Project Server 2016 Technical Preview Beta 1","uri":"/project-server/install-server-2016-7e0cebd0/install-server-2016-7e0cebd0/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Connect to Printers in a Specific Location Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/cd07d126-d326-4161-8a4d-29a59b890ab9/cd07d126-d326-4161-8a4d-29a59b890ab9/:1:0","tags":["Active Directory","HTML"],"title":"Connect to Printers in a Specific Location","uri":"/printing/printer-ports-and-printer-drivers/cd07d126-d326-4161-8a4d-29a59b890ab9/cd07d126-d326-4161-8a4d-29a59b890ab9/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **Mark Fellensiek Determines the computer’s location in Active Directory and then connects to all the printers found in that location. Visual Basic '********************************************************* ' Purpose: Looks up the computer's account location in the ' Active Directory, then finds all the printers ' at that location and connects them to the PC. ' ' Usage: Set the value below to the name of your domain ' eg: yourdomain.local ' '********************************************************* Const TheDomainName = \"'LDAP://DC=yourdomain,DC=local'\" '********************************************************* ' no need to change anything below this line '********************************************************* '********************************************************* ' Lookup the recorded location for this computer '********************************************************* Const ADS_SCOPE_SUBTREE = 2 Set WshNetwork = CreateObject(\"WScript.Network\") Set objSysInfo = CreateObject(\"ADSystemInfo\") Set objComputer = GetObject (\"LDAP://\" \u0026 objSysInfo.ComputerName) ThisComputerLocation = objComputer.Location '********************************************************* ' disconnect all network printers from the PC (optional) '********************************************************* strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set objNetwork = WScript.CreateObject(\"WScript.Network\") Set colPrinters = objNetwork.EnumPrinterConnections For i = 0 to colPrinters.Count -1 Step 2 if lcase(left(colPrinters.Item (i+1),2)) = \"\\\\\" then objNetwork.RemovePrinterConnection colPrinters.Item (i + 1), true, true end if Next '********************************************************* ' Query the Directory for all printers at this location '********************************************************* Set objConnection = CreateObject(\"ADODB.Connection\") Set objCommand = CreateObject(\"ADODB.Command\") objConnection.Provider = \"ADsDSOObject\" objConnection.Open \"Active Directory Provider\" Set objCommand.ActiveConnection = objConnection objCommand.CommandText = \"Select uncName from \" _ \u0026 TheDomainName \u0026 \" where objectClass='printQueue' and Location='\" \u0026 ThisComputerLocation \u0026\"'\" objCommand.Properties(\"Page Size\") = 1000 objCommand.Properties(\"Searchscope\") = ADS_SCOPE_SUBTREE Set objRecordSet = objCommand.Execute 'objRecordSet.MoveFirst '********************************************************* ' Connect them. ' and set one of them as the default (optional) '********************************************************* While Not objRecordSet.EOF objNetwork.AddWindowsPrinterConnection objRecordSet.Fields(\"uncName\").Value 'objNetwork.SetDefaultPrinter objRecordSet.Fields(\"uncName\").Value objRecordSet.MoveNext Wend ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/cd07d126-d326-4161-8a4d-29a59b890ab9/cd07d126-d326-4161-8a4d-29a59b890ab9/:2:0","tags":["Active Directory","HTML"],"title":"Connect to Printers in a Specific Location","uri":"/printing/printer-ports-and-printer-drivers/cd07d126-d326-4161-8a4d-29a59b890ab9/cd07d126-d326-4161-8a4d-29a59b890ab9/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Connect Users to Available Print Server Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/e6c59b55-e203-4bbd-b1ed-a32e4830247f/e6c59b55-e203-4bbd-b1ed-a32e4830247f/:1:0","tags":["Active Directory","HTML"],"title":"Connect Users to Available Print Server","uri":"/printing/printer-ports-and-printer-drivers/e6c59b55-e203-4bbd-b1ed-a32e4830247f/e6c59b55-e203-4bbd-b1ed-a32e4830247f/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **Emad Aziz At logon, connects users to a specified print server. Each location has an allocated print server, and he administrator does need to know the actual name of the server, just the location. Visual Basic ' PrnConnector.vbs ' 06/10/2005 V 1.0 ' Emad Aziz e.aziz@soton.ac.uk On Error Resume Next Const number0 = 0, number1 = 1, number2 = 2, number3 = 3, number4 = 4, number5 = 5, number6 = 6, number7 = 7, number8 = 8, number9 = 9, number10 = 10 Dim argNumber, pop, queueName, popvalue popvalue = \"/popup\" Computers = Array(\"Central01\", \"Central02\",\"Central03\",\"remote01\",\"remote02\",\"remote03\",\"remote04\",\"remote05\",\"remote06\",\"remote07\",\"remote08\") Set objectShell =WScript.CreateObject(\"WScript.Shell\") Set wshnetwork = createobject(\"WScript.Network\") Set objectArgs = WScript.Arguments pop = Lcase(objectArgs(number0)) argNumber = objectArgs.Count - number2 If objectArgs.Count \u003c number3 Then help() Else main() End If WScript.Quit 'Sub main() Sub main() SrvName = LCase(objectArgs(number1)) defaultsrv = defaultServer(Srvname) location = locationArea(defaultsrv) secondSrv = secSrv(location, defaultsrv) counter = number0 If Isconnected(defaultsrv) Then Do queueName = objectArgs(counter+number2) Call pconnecter1(defaultsrv, queueName) counter = counter + number1 Loop While counter \u003c argNumber If pop = popvalue Then popUpConnector() End If Elseif Isconnected(secondSrv) Then Do queueName = objectArgs(counter+number2) Call pconnecter1(secondSrv, queueName) counter = counter + number1 Loop While counter \u003c argNumber If pop = popvalue Then popUpConnector() End If Else reportError() End If End Sub ' SUB popUpConnector() Sub popUpConnector() WScript.Sleep 5000 objectShell.Run \"\"\"\\\\Domain\\DFSroot\\System Tools\\PrintQConnector\\PPOPUP.EXE\"\"/noexit /poll=5\" End Sub Function Isconnected(SrvName) strPingCmdEcdl = \"ping -n 3 -w 254 \" \u0026 SrvName Set objectExecobject = objectShell.Exec(\"%comspec% /c \" \u0026 strPingCmdEcdl) Do While Not objectExecObject.stdOut.AtEndofStream strText = objectExecObject.stdOut.ReadLine() If Instr(strText, \"Reply\") \u003e 0 Then Isconnected = 1 Exit Do Else Isconnected = 0 End If Loop End Function Sub pconnecter1 (srv, queueName ) wshnetwork.addwindowsprinterconnection \"\\\\\" \u0026 srv \u0026 \"\\\" \u0026 queueName End Sub Function defaultServer(defaultSrv) Select Case defaultSrv Case \"central011\" defaultServer = Computers(number0) Exit Function Case \"central02\" defaultServer = Computers(number1) Exit Function Case \"central03\" defaultServer = Computers(number2) Exit Function Case \"remote01\" defaultServer = Computers(number3) Exit Function Case \"remote02\" defaultServer = Computers(number4) Exit Function Case \"remote03\" defaultServer = Computers(number5) Exit Function Case \"remote04\" defaultServer = Computers(number6) Exit Function Case \"remote05\" defaultServer = Computers(number7) Exit Function Case \"remote06\" defaultServer = Computers(number8) Exit Function Case \"remote07\" defaultServer = Computers(number9) Exit Function Case \"remote08\" defaultServer = Computers(number10) Exit Function Case Else WScript.Echo \"NO Server found, Please consult System adminstartor, call Service Line on 25656\" WScript.Quit End Select End Function Function secSrv(location, SrvName) Select Case location Case \"central\" If srvName = Computers(number0) Then secSrv = Computers(number1) Else secSrv = Computers(number0) End If Case \"remote1\" If srvName = Computers(number3) Then secSrv = Computers(number4) Else secSrv = Computers(number3) End If Case \"Remote2\" secSrv = Computers(number0) End Select End Function Function locationArea(serverName) If serverName = Computers(number0) Or serverName = Computers(number1) Then location = \"central\" locationArea = location Elseif serverName = Computers(number3) Or serverName = Computers(number4) Then location = \"remote1\" locationArea = location Else location = \"Remote2\" locationArea = location End If End Function Sub help() msgbox \"Connects to print server and its Queue(s)\" \u0026 vbCr \u0026_ \"Usage:\" \u0026 vbC","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/e6c59b55-e203-4bbd-b1ed-a32e4830247f/e6c59b55-e203-4bbd-b1ed-a32e4830247f/:2:0","tags":["Active Directory","HTML"],"title":"Connect Users to Available Print Server","uri":"/printing/printer-ports-and-printer-drivers/e6c59b55-e203-4bbd-b1ed-a32e4830247f/e6c59b55-e203-4bbd-b1ed-a32e4830247f/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Copy-ACLToPrinter Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/copy-acltoprinter-2d66ce19/copy-acltoprinter-2d66ce19/:1:0","tags":["Active Directory","HTML"],"title":"Copy-ACLToPrinter","uri":"/printing/print-servers-print-queues-and-print-jobs/copy-acltoprinter-2d66ce19/copy-acltoprinter-2d66ce19/"},{"categories":["Printing"],"content":"Output from Technet Gallery Replace the permissions (ACL) from one printer to another. I’m using WMI Object win32_printer and Win32_SecurityDescriptor .. not a great deal of error trapping I’m afraid. I’ve used this script to set permissions after a PaperCut installation highlighted the need to adjust permissions across 400 printers! Run the powershell environment at administrator as I couldn’t figure how to get the permissions when a normal user :o( When permissions are set to should get this output …. __GENUS : 2 __CLASS : __PARAMETERS __SUPERCLASS : __DYNASTY : __PARAMETERS __RELPATH : __PROPERTY_COUNT : 1 __DERIVATION : {} __SERVER : __NAMESPACE : __PATH : ReturnValue : 0 ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/copy-acltoprinter-2d66ce19/copy-acltoprinter-2d66ce19/:2:0","tags":["Active Directory","HTML"],"title":"Copy-ACLToPrinter","uri":"/printing/print-servers-print-queues-and-print-jobs/copy-acltoprinter-2d66ce19/copy-acltoprinter-2d66ce19/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Create a Printer Port and Install a Printer Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/b9a9f45a-eba7-4df5-9cbb-16b301274678/b9a9f45a-eba7-4df5-9cbb-16b301274678/:1:0","tags":["Active Directory","HTML"],"title":"Create a Printer Port and Install a Printer","uri":"/printing/printer-ports-and-printer-drivers/b9a9f45a-eba7-4df5-9cbb-16b301274678/b9a9f45a-eba7-4df5-9cbb-16b301274678/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **mbk5us Creates a TCP/IP printer port and installs a network printer. Visual Basic 'For Windows XP only 'Creates LAN Printer and Print device in one step 'It assumes a LAN printer with IP address 10.72.36.208 ' 'Begin defining printer parameters/info strComputer = \".\" PrinterIP = \"10.72.36.208\" DeviceName = \"Lexmark Optra L Plus Series\" PortName = \"IP_\" \u0026 PrinterIP ShareName = \"Lexmark Optra L Plus Series - LSQ1\" Location = \"HeadQuarter/Building # 2/Suite 310\" Comment = \"LSQ1 - Tech support only\" 'End Parameters Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set objNewPort = objWMIService.Get _ (\"Win32_TCPIPPrinterPort\").SpawnInstance_ objNewPort.Name = PortName objNewPort.Protocol = 1 objNewPort.HostAddress = PrinterIP objNewPort.PortNumber = \"9100\" objNewPort.SNMPEnabled = False objNewPort.Put_ Set objDriver = objWMIService.Get(\"Win32_PrinterDriver\") objWMIService.Security_.Privileges.AddAsString \"SeLoadDriverPrivilege\", True objDriver.Name = DeviceName objDriver.SupportedPlatform = \"Windows NT x86\" objDriver.Version = \"3\" errResult = objDriver.AddPrinterDriver(objDriver) Set objPrinter = objWMIService.Get(\"Win32_Printer\").SpawnInstance_ objPrinter.DriverName = DeviceName objPrinter.PortName = PortName objPrinter.DeviceID = DeviceName \u0026 \" LanPrinter\" objPrinter.Location = Location ObjPrinter.Comment = Comment objPrinter.Network = False objPrinter.Shared = False 'does not share the printer objPrinter.ShareName = ShareName objPrinter.Put_ Wscript.Echo \"Done.\" ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/b9a9f45a-eba7-4df5-9cbb-16b301274678/b9a9f45a-eba7-4df5-9cbb-16b301274678/:2:0","tags":["Active Directory","HTML"],"title":"Create a Printer Port and Install a Printer","uri":"/printing/printer-ports-and-printer-drivers/b9a9f45a-eba7-4df5-9cbb-16b301274678/b9a9f45a-eba7-4df5-9cbb-16b301274678/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Create Project Server 2010 / 2013 project from a template and update the EP Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/create-server-2010-2013-19bd3cc7/create-server-2010-2013-19bd3cc7/:1:0","tags":["Active Directory","HTML"],"title":"Create Project Server 2010 / 2013 project from a template and update the EP","uri":"/project-server/create-server-2010-2013-19bd3cc7/create-server-2010-2013-19bd3cc7/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This PowerShell script will create a project from the specified project template then update that project to associate it with the correct EPT. By default, when creating projects from templates using the Create Project From Template PSI method, the projects will be associated with the defaut EPT. The script will prompt for the new project name, the project template name and the EPT name. A code snippet can be seen below: #Get details for new project $ProjName = Read-Host -Prompt \"Enter the Name of the Project\" $ProjTempName = Read-Host -Prompt \"Enter the Name of the Project Template\" $ProjEPTName = Read-Host -Prompt \"Enter the Name of the EPT\" Write-host \"The Project is called $ProjName\" #Create empty GUID $EPMTYGUID = [system.guid]::empty #Project PSI Web Service $svcPSProjProxy = New-WebServiceProxy -uri \"http://vm753/pwa/_vti_bin/PSI/Project.asmx?wsdl\" -useDefaultCredential #Get the Project Template UID from the ReadProjectStatus Method The script will need to be updated with the correct PWA URL for the WebServiceProxy. For further details on this script please see the following post: http://pwmather.wordpress.com/2013/08/30/create-a-projectserver-ps2010-ps2013-project-from-a-template-and-update-the-ept-sp2013-sp2010-powershell/ ","date":"2019-12-01","objectID":"/project-server/create-server-2010-2013-19bd3cc7/create-server-2010-2013-19bd3cc7/:2:0","tags":["Active Directory","HTML"],"title":"Create Project Server 2010 / 2013 project from a template and update the EP","uri":"/project-server/create-server-2010-2013-19bd3cc7/create-server-2010-2013-19bd3cc7/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Create Project Server 2010 Project Professional 2010 accounts with PowerShell Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/create-server-2010-dfb0fbba/create-server-2010-dfb0fbba/:1:0","tags":["Active Directory","HTML"],"title":"Create Project Server 2010 Project Professional 2010 accounts with PowerShell","uri":"/project-server/create-server-2010-dfb0fbba/create-server-2010-dfb0fbba/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This is a PowerShell script that will create the Project Server Project Professional 2010 account. The script works by creating a new registry key with the required string values. This is just an example to show how system administrators could automate the creation of the Project Server account. As this script is only an example, please test thoroughly on a test workstation before deploying on a production environment. A code snippet can be seen below: #Creates the Project Professional 2010 Project Server Account $keyPath = \"hkcu:\\Software\\Microsoft\\Office\\14.0\\MS Project\\Profiles\\\" #Update account name $accountName = \"PaulMathersTest\" $guid = [System.Guid]::NewGuid() #Update PWA URL $pwaURL = \"http://vm353/pwa\" New-Item -Path \"$keyPath$accountName\" New-ItemProperty -Path \"$keyPath$accountName\" -Name Name -PropertyType String -Value $accountName New-ItemProperty -Path \"$keyPath$accountName\" -Name GUID -PropertyType String -Value \"{$guid}\" New-ItemProperty -Path \"$keyPath$accountName\" -Name Path -PropertyType String -Value $pwaURL  Two variables will need to be updated before executing this script. For further details on this script please see the following blog post: http://pwmather.wordpress.com/2013/01/15/create-projectserver-2010-msproject-2010-accounts-with-powershell-ps2010-sp2010-msoffice/ Please backup the registry before making any changes ","date":"2019-12-01","objectID":"/project-server/create-server-2010-dfb0fbba/create-server-2010-dfb0fbba/:2:0","tags":["Active Directory","HTML"],"title":"Create Project Server 2010 Project Professional 2010 accounts with PowerShell","uri":"/project-server/create-server-2010-dfb0fbba/create-server-2010-dfb0fbba/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Create TCPIP Shared Printer and Por Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/create-tcpip-shared-90d927a1/create-tcpip-shared-90d927a1/:1:0","tags":["Active Directory","HTML"],"title":"Create TCPIP Shared Printer and Por","uri":"/printing/print-servers-print-queues-and-print-jobs/create-tcpip-shared-90d927a1/create-tcpip-shared-90d927a1/"},{"categories":["Printing"],"content":"Output from Technet Gallery Reworked older VBS file that creates printer ports from file. This will recreate a port or printer of the same name even if it already exists. This script outputs information toe two places ‘stdout’ and ‘stderr’. StdOut is useful for logging the exact settings of the created ports on a tab delimited format that can be opened in a spreadsheet. StdErr contains ad-hoc messages Visual Basic '========================================================================== ' ' VBScript Source File -- Created with SAPIEN Technologies PrimalScript 2011 ' ' NAME: InstallRCPIPPrinter.vbs ' ' AUTHOR: James Vierra , DSS ' DATE : 5/26/2012 ' ' COMMENT: Reworked older VBS file that creates printer ports from file. ' This will recreate a port or printer of teh samee name even if it ' already exists. ' ' TESTED: W2K, WS2003, XP ' Pipe delimited file ' Example: ' PrinterIP|PortNumber|DriverName|ShareName|Location ' 169.254.110.160|9100|HP LaserJet 4000 Series PS|MyNewPrinter|USA/NYC/MyDept '========================================================================== Const INFILE=\"printers.txt\" Set fso=CreateObject(\"Scripting.FileSystemObject\") Set file = fso.OpenTextFile(INFILE) While Not file.AtEndOfStream line = file.ReadLine() rec=Split(line,\"|\") InstallPrinter rec(0), rec(1), rec(2),rec(3),rec(4) Wend Function InstallPrinter( strPrinterIP, strPortNumber, strDriverName, strShareName, strLocation ) Set wmi = GetObject(\"winmgmts:{impersonationLevel=impersonate}!\\\\.\\root\\cimv2\") With wmi.Get(\"Win32_TCPIPPrinterPort\").SpawnInstance_ .Name = \"IP_\" \u0026 strPrinterIP .Protocol = 1 .HostAddress = strPrinterIP .PortNumber = strPortNumber ret=.Put_() WScript.StdErr.WriteLine \"Port created:\" \u0026 ret End With With wmi.Get(\"Win32_Printer\").SpawnInstance_ .DriverName = strDriverName .PortName = \"IP_\" \u0026 strPortIP .DeviceID = strShareName .Location = strLocation .Network = True .Shared = True .ShareName = strShareName ert=.Put_() WScript.StdErr.WriteLine \"Printer created:\" \u0026 ret End With WScript.Echo Now,\"INSTALLED\", strPrinterIP, strPortNumber, strDriverName, strShareName, strLocation End Function ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/create-tcpip-shared-90d927a1/create-tcpip-shared-90d927a1/:2:0","tags":["Active Directory","HTML"],"title":"Create TCPIP Shared Printer and Por","uri":"/printing/print-servers-print-queues-and-print-jobs/create-tcpip-shared-90d927a1/create-tcpip-shared-90d927a1/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Custom and Native field bulk update, Project Onlin Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/custom-and-native-field-29cb2e42/custom-and-native-field-29cb2e42/:1:0","tags":["Active Directory","HTML"],"title":"Custom and Native field bulk update, Project Onlin","uri":"/project-server/custom-and-native-field-29cb2e42/custom-and-native-field-29cb2e42/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This pair of scripts can be used to query your instance of project web app and return your native and custom fields (along with some system information that supports them) and then uses that information in combination with a CSV of the updates you want to make in order to run a bulk update. This is based on the great start that from PWMather to Update Project Online Project Custom Field Value Using PowerShell and Quadri Yusuff to Update Project Server- Project Custom Field and Lookup Value Using PowerShell, along with Hammad Arif who’s best documented how to find the required DLLs. What was missing from those and is included here is the automatic lookup / translation of the custom field values to the internal names and object types needed to pass through to the api, and also the removal of many hard-coded values related to the fields you’re trying to update. Instructions You’ll need to download the required CSOM DLLs as referenced at the top of each script:Locate them at: nuget https://www.nuget.org/packages/Microsoft.SharePointOnline.CSOM Create a CSV including the attributes you want to update, along with the project name. The project name is what’s used to lookup the project. A good starting point would be to have a view of the project center with the names of the fields you want to update, then export that view to excel. Make your changes, then save it as a CSV. If you don’t want to update a certain field, just remove it from the CSV. Open both scripts and change the values of the paths for where the script can find the DLLs, your CSV, and the URL to your PWA instance and the name of your account with the access. Run the “Get Lookup Tables and Entries” script, which will write to the screen and keep in memory $allFields which is used by the second script, BulkUpdate. Run the “Bulk Update” Script. Notes For native fields, I only allowed the Description and ProjectIdentifier fields to be updated - there might be a few other that behave nicely, but I havne’t tried them out. If you know you can update them, just add them to the list of $allowedNativeFields on line 17. For custom fields, I haven’t tested the inclusion of custom fields that have more than one value (though a tree structure does work) Known issues I haven’t put in checks for required fields… if you’re trying to run a bulk update against a project with a required field that’s null and you haven’t included that attribute/value in your CSV, that project will fail to check-in and publish. There’s something with timing that I haven’t quite worked out - if you get a series of errors unrelated to a missing required field, it’s likely something in the script processed too quickly. Just run the bulk update script a second time. That’s always worked for me. Code Snippet # Get the Custom Fields $url = $PWAURL +\"/_api/ProjectServer/CustomFields\" [Microsoft.SharePoint.Client.SharePointOnlineCredentials]$spocreds = New-Object Microsoft.SharePoint.Client.SharePointOnlineCredentials($PWAUserName, $securePass); $webrequest = [System.Net.WebRequest]::Create($url) $webrequest.Credentials = $spocreds $webrequest.Accept = \"application/json;odata=verbose\" $webrequest.Headers.Add(\"X-FORMS_BASED_AUTH_ACCEPTED\", \"f\") $response = $webrequest.GetResponse() $reader = New-Object System.IO.StreamReader $response.GetResponseStream() $data = $reader.ReadToEnd() $results = ConvertFrom-Json -InputObject $data $CustomFields = $results.d.results $CustomFields | %{ $CustomField = New-Object -TypeName System.Object $CustomField | Add-Member -Type NoteProperty -Name Name -Value $_.Name $CustomField | Add-Member -Type NoteProperty -Name FieldType -Value \"Custom\" $CustomField | Add-Member -Type NoteProperty -Name InternalName -Value $_.InternalName # Find lookup table $url = $_.LookupTable.__deferred.uri ","date":"2019-12-01","objectID":"/project-server/custom-and-native-field-29cb2e42/custom-and-native-field-29cb2e42/:2:0","tags":["Active Directory","HTML"],"title":"Custom and Native field bulk update, Project Onlin","uri":"/project-server/custom-and-native-field-29cb2e42/custom-and-native-field-29cb2e42/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Custom Project Status Report for Microsoft Project - All Versions Original Technet Description URL Description Download: [Download Link](Download\\Custom Project Status Report for Microsoft Project - All Versions.zip) ","date":"2019-12-01","objectID":"/project-server/custom-status-report-for-3f208f6a/custom-status-report-for-3f208f6a/:1:0","tags":["Active Directory","HTML"],"title":"Custom Project Status Report for Microsoft Project - All Versions","uri":"/project-server/custom-status-report-for-3f208f6a/custom-status-report-for-3f208f6a/"},{"categories":["Project Server"],"content":"Output from Technet Gallery The Custom Project Status Report for Microsoft Project offers a collection of useful information about key project data. It has been developed to help Project Managers get quick insights about their projects in a simple and objective way. Once older versions of Microsoft Project (such as Project 2010 or Project 2007) do not offer the beautiful Visual Reports that come with Project 2013 and 2016, this Project Status report offers an opportunity for users to export the data from Microsoft Project to Microsoft Access and then connect it to the report in order to have useful information that can be refreshed once the project is updated. ","date":"2019-12-01","objectID":"/project-server/custom-status-report-for-3f208f6a/custom-status-report-for-3f208f6a/:2:0","tags":["Active Directory","HTML"],"title":"Custom Project Status Report for Microsoft Project - All Versions","uri":"/project-server/custom-status-report-for-3f208f6a/custom-status-report-for-3f208f6a/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Custom Reports for Project 2013 and 2016 Original Technet Description URL Description Download: [Download Link](Download\\Custom Reports for Project 2013 and 2016.zip) ","date":"2019-12-01","objectID":"/project-server/custom-reports-for-2013-584584de/custom-reports-for-2013-584584de/:1:0","tags":["Active Directory","HTML"],"title":"Custom Reports for Project 2013 and 2016","uri":"/project-server/custom-reports-for-2013-584584de/custom-reports-for-2013-584584de/"},{"categories":["Project Server"],"content":"Output from Technet Gallery The Custom Reports for Project 2013 \u0026 2016 offer a collection of useful information about key project information. They have been developed to help Project Managers get quick insights about their projects in a simple and objective way. The reports present a collection of useful information about key project data, such as schedule, cost and work, allowing Project Managers to identify variances and discrepancies to be able to take quick corrective actions. ","date":"2019-12-01","objectID":"/project-server/custom-reports-for-2013-584584de/custom-reports-for-2013-584584de/:2:0","tags":["Active Directory","HTML"],"title":"Custom Reports for Project 2013 and 2016","uri":"/project-server/custom-reports-for-2013-584584de/custom-reports-for-2013-584584de/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Data backup and restore errors in HP printer Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/data-backup-and-restore-38b72d86/data-backup-and-restore-38b72d86/:1:0","tags":["Active Directory","HTML"],"title":"Data backup and restore errors in HP printer","uri":"/printing/printer-ports-and-printer-drivers/data-backup-and-restore-38b72d86/data-backup-and-restore-38b72d86/"},{"categories":["Printing"],"content":"Output from Technet Gallery HP printer data backup is essential for times when you lost your data and want to recover it. If you face any errors while creating or restoring data in HP printer, then you can go for dialing\rHP helpline number. The backup file for your data can be created and can be restored in very simple steps. To create a data backup and restore data in HP printer, go through the following given guide: From the tabs given on the top, click on General. From the left navigation panel, click on the option Backup and Restore. To do a backup for your data, click on Backup and then enter a storage path in the folder path to choose the location where you will save your backup file. There is no need to write the file name. This will create a backup file for your data. You can view the backup file in the location where you have saved the file. In order to restore the backup file you have created, follow the steps given below: To perform a restore, click on Restore. Enter the path of the backup file to restore the field of the file to restore. You can also include the name of the backup file to restore its field. Clicking on Ok will restore the backup file you have created. You can also restore the backup files in the following way: Click on Start menu and enter recovery in the search field. Now click on HP Backup and Recovery. This will open the HP Backup and Recovery Manager. In the expert mode, select the files and folders created for recovery. Clicking on Next will open the File Recovery Wizard of the HP Backup and Recovery Manager. Using these steps can be helpful in creating a backup file and restoring the same for HP printers. Even if you are facing some errors like failure to back up your files, loss of backup files, HP recovery manager is not working, then it is the right time to go for technical help which is available at HP Printer tech support number. For all technical assistance for your HP Printer, you can use our troubleshooting services provided by expert technicians who are working round the clock on such issues. They will make it easier to deal with HP printer issues and will solve all your queries as well. For more help visit here:- https://www.phonesupportnumbers.com/hp-customer-service.html ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/data-backup-and-restore-38b72d86/data-backup-and-restore-38b72d86/:2:0","tags":["Active Directory","HTML"],"title":"Data backup and restore errors in HP printer","uri":"/printing/printer-ports-and-printer-drivers/data-backup-and-restore-38b72d86/data-backup-and-restore-38b72d86/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Delete a Printer Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/client-side-printing/509a4bc3-dbfb-41b3-8ea8-5231eb2ae26c/509a4bc3-dbfb-41b3-8ea8-5231eb2ae26c/:1:0","tags":["Active Directory","HTML"],"title":"Delete a Printer","uri":"/printing/client-side-printing/509a4bc3-dbfb-41b3-8ea8-5231eb2ae26c/509a4bc3-dbfb-41b3-8ea8-5231eb2ae26c/"},{"categories":["Printing"],"content":"Output from Technet Gallery Deletes a printer named ScriptedPrinter. Visual Basic strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colInstalledPrinters = objWMIService.ExecQuery _ (\"Select * from Win32_Printer where DeviceID = 'ScriptedPrinter'\") For Each objPrinter in colInstalledPrinters objPrinter.Delete_ Next ","date":"2019-12-01","objectID":"/printing/client-side-printing/509a4bc3-dbfb-41b3-8ea8-5231eb2ae26c/509a4bc3-dbfb-41b3-8ea8-5231eb2ae26c/:2:0","tags":["Active Directory","HTML"],"title":"Delete a Printer","uri":"/printing/client-side-printing/509a4bc3-dbfb-41b3-8ea8-5231eb2ae26c/509a4bc3-dbfb-41b3-8ea8-5231eb2ae26c/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Delete a Printer Connection Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/client-side-printing/73f51dbe-a00a-4958-b053-2ca8db590b34/73f51dbe-a00a-4958-b053-2ca8db590b34/:1:0","tags":["Active Directory","HTML"],"title":"Delete a Printer Connection","uri":"/printing/client-side-printing/73f51dbe-a00a-4958-b053-2ca8db590b34/73f51dbe-a00a-4958-b053-2ca8db590b34/"},{"categories":["Printing"],"content":"Output from Technet Gallery Removes a printer connection to a network printer. Script must be run on the local computer. Visual Basic Set objNetwork = WScript.CreateObject(\"WScript.Network\") objNetwork.RemovePrinterConnection \"\\\\PrintServer\\xerox3006\" ","date":"2019-12-01","objectID":"/printing/client-side-printing/73f51dbe-a00a-4958-b053-2ca8db590b34/73f51dbe-a00a-4958-b053-2ca8db590b34/:2:0","tags":["Active Directory","HTML"],"title":"Delete a Printer Connection","uri":"/printing/client-side-printing/73f51dbe-a00a-4958-b053-2ca8db590b34/73f51dbe-a00a-4958-b053-2ca8db590b34/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Delete A Printer Por Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/60308cdd-bcf8-46b8-9f8d-5384d34faa08/60308cdd-bcf8-46b8-9f8d-5384d34faa08/:1:0","tags":["Active Directory","HTML"],"title":"Delete A Printer Por","uri":"/printing/printer-ports-and-printer-drivers/60308cdd-bcf8-46b8-9f8d-5384d34faa08/60308cdd-bcf8-46b8-9f8d-5384d34faa08/"},{"categories":["Printing"],"content":"Output from Technet Gallery Deletes a TCP/IP printer port from a computer. Visual Basic strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colInstalledPorts = objWMIService.ExecQuery _ (\"Select * from Win32_TCPIPPrinterPort Where Name = 'IP_169.254.110.14'\") For Each objPort in colInstalledPorts objPort.Delete_ Next ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/60308cdd-bcf8-46b8-9f8d-5384d34faa08/60308cdd-bcf8-46b8-9f8d-5384d34faa08/:2:0","tags":["Active Directory","HTML"],"title":"Delete A Printer Por","uri":"/printing/printer-ports-and-printer-drivers/60308cdd-bcf8-46b8-9f8d-5384d34faa08/60308cdd-bcf8-46b8-9f8d-5384d34faa08/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Delete All Large Print Jobs Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/9b07ec17-a3ae-427d-a417-c95f05fc515f/9b07ec17-a3ae-427d-a417-c95f05fc515f/:1:0","tags":["Active Directory","HTML"],"title":"Delete All Large Print Jobs","uri":"/printing/print-servers-print-queues-and-print-jobs/9b07ec17-a3ae-427d-a417-c95f05fc515f/9b07ec17-a3ae-427d-a417-c95f05fc515f/"},{"categories":["Printing"],"content":"Output from Technet Gallery Deletes all print jobs larger than 1 megabyte. Visual Basic strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colPrintJobs = objWMIService.ExecQuery _ (\"Select * from Win32_PrintJob Where Size \u003e 1000000\") For Each objPrintJob in colPrintJobs objPrintJob.Delete_ Next ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/9b07ec17-a3ae-427d-a417-c95f05fc515f/9b07ec17-a3ae-427d-a417-c95f05fc515f/:2:0","tags":["Active Directory","HTML"],"title":"Delete All Large Print Jobs","uri":"/printing/print-servers-print-queues-and-print-jobs/9b07ec17-a3ae-427d-a417-c95f05fc515f/9b07ec17-a3ae-427d-a417-c95f05fc515f/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Delete All Print Jobs Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/client-side-printing/0e89fa7c-a837-4607-b421-c870142e7323/0e89fa7c-a837-4607-b421-c870142e7323/:1:0","tags":["Active Directory","HTML"],"title":"Delete All Print Jobs","uri":"/printing/client-side-printing/0e89fa7c-a837-4607-b421-c870142e7323/0e89fa7c-a837-4607-b421-c870142e7323/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **Rob Shannon Deletes all the print jobs on the local computer. Visual Basic strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colInstalledPrinters = objWMIService.ExecQuery(\"Select * from Win32_Printer\") For Each objPrinter in colInstalledPrinters objPrinter.CancelAllJobs() Next ","date":"2019-12-01","objectID":"/printing/client-side-printing/0e89fa7c-a837-4607-b421-c870142e7323/0e89fa7c-a837-4607-b421-c870142e7323/:2:0","tags":["Active Directory","HTML"],"title":"Delete All Print Jobs","uri":"/printing/client-side-printing/0e89fa7c-a837-4607-b421-c870142e7323/0e89fa7c-a837-4607-b421-c870142e7323/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Delete All Printers on a Print Server Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/98a7a33b-d9fe-40c3-af3c-2eea19e9141c/98a7a33b-d9fe-40c3-af3c-2eea19e9141c/:1:0","tags":["Active Directory","HTML"],"title":"Delete All Printers on a Print Server","uri":"/printing/print-servers-print-queues-and-print-jobs/98a7a33b-d9fe-40c3-af3c-2eea19e9141c/98a7a33b-d9fe-40c3-af3c-2eea19e9141c/"},{"categories":["Printing"],"content":"Output from Technet Gallery Deletes all the printers from a print server. Visual Basic strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colInstalledPrinters = objWMIService.ExecQuery _ (\"Select * from Win32_Printer\") For Each objPrinter in colInstalledPrinters objPrinter.Delete_ Next ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/98a7a33b-d9fe-40c3-af3c-2eea19e9141c/98a7a33b-d9fe-40c3-af3c-2eea19e9141c/:2:0","tags":["Active Directory","HTML"],"title":"Delete All Printers on a Print Server","uri":"/printing/print-servers-print-queues-and-print-jobs/98a7a33b-d9fe-40c3-af3c-2eea19e9141c/98a7a33b-d9fe-40c3-af3c-2eea19e9141c/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Delete Old Print queues on Print Servers. Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/delete-old-print-queues-on-a1fedd43/delete-old-print-queues-on-a1fedd43/:1:0","tags":["Active Directory","HTML"],"title":"Delete Old Print queues on Print Servers.","uri":"/printing/print-servers-print-queues-and-print-jobs/delete-old-print-queues-on-a1fedd43/delete-old-print-queues-on-a1fedd43/"},{"categories":["Printing"],"content":"Output from Technet Gallery This is a simple script to remove old print queues on a server(s) that you may have. It allows you to remove from multiple servers all you will need to do is create a csv file with server and DNS name of printer. Please contact me with any questions that you may have regarding it. This is my first script being published on here so any feedback would be helpful. $InCSVPath = \"C:\\Temp\\printerstodelete.csv\" $csv = Import-Csv $InCSVPath foreach($item in $csv){ $server = $item.Server + \".YourDomain\" $printer = $item.Printer $a = Get-WmiObject Win32_Printer -ComputerName $server -Filter \"Name='$printer'\" if($a){ \"Deleting Printer: \" + $a.Name # $a.Delete() } else{ \"could not delete: \"+$printer } } ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/delete-old-print-queues-on-a1fedd43/delete-old-print-queues-on-a1fedd43/:2:0","tags":["Active Directory","HTML"],"title":"Delete Old Print queues on Print Servers.","uri":"/printing/print-servers-print-queues-and-print-jobs/delete-old-print-queues-on-a1fedd43/delete-old-print-queues-on-a1fedd43/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Delete Printer Connection Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/efce5116-c83d-4770-af61-0e095e04f3e0/efce5116-c83d-4770-af61-0e095e04f3e0/:1:0","tags":["Active Directory","HTML"],"title":"Delete Printer Connection","uri":"/printing/printer-ports-and-printer-drivers/efce5116-c83d-4770-af61-0e095e04f3e0/efce5116-c83d-4770-af61-0e095e04f3e0/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **Anonymous Submission Deletes a printer connection on logoff. Visual Basic dim oMaster dim oPrinter set oMaster = CreateObject(\"PrintMaster.PrintMaster.1\") set oPrinter = CreateObject(\"Printer.Printer.1\") oPrinter.ServerName = \"\" oPrinter.PrinterName = \"Lexmark E332n\" oMaster.PrinterDel oPrinter if Err \u003c\u003e 0 then'An error occurred end if ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/efce5116-c83d-4770-af61-0e095e04f3e0/efce5116-c83d-4770-af61-0e095e04f3e0/:2:0","tags":["Active Directory","HTML"],"title":"Delete Printer Connection","uri":"/printing/printer-ports-and-printer-drivers/efce5116-c83d-4770-af61-0e095e04f3e0/efce5116-c83d-4770-af61-0e095e04f3e0/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Delete Project Server Project Sites Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/delete-server-sites-9c3d3e95/delete-server-sites-9c3d3e95/:1:0","tags":["Active Directory","HTML"],"title":"Delete Project Server Project Sites","uri":"/project-server/delete-server-sites-9c3d3e95/delete-server-sites-9c3d3e95/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This PowerShell script will delete the project sites for the associated project. The projects are inputted from a text file. A code snippet can be seen below: #Fully test on a test PWA instance first #For projects that you wish to delete the project site, add the exact project names to a text file and reference the text file location below $projectList = Get-Content C:\\Users\\paulmather\\Desktop\\projectsitesstodelete.txt #Update the uri with the correct PWA URL for your PWA instance and run with an account that has access to the projects listed in the text file $svcPSProxy = New-WebServiceProxy -uri \"http://vm753/PWA/_vti_bin/PSI/Project.asmx?wsdl\" -useDefaultCredential $svcWSSProxy = New-WebServiceProxy -uri \"http://vm753/PWA/_vti_bin/PSI/WssInterop.asmx?wsdl\" -useDefaultCredential $emptyGUID = [system.guid]::empty Use this script with care as it will remove any project site and project site content for any project name added to the text file - that data will be gone and not recoverable. This script works for Project Server 2010 and 2013, only requirement is that the script is run with an account that has admin access. The script will need to be updated with the correct PWA URL for the Web Service Proxies and corrrect path and file name for the project name text file. For further details on this script please see the following post: https://pwmather.wordpress.com/2015/06/26/projectserver-ps2010-ps2013-delete-project-site-using-powershell-sp2013-sp2010/ Fully test this script on a test / non-production PWA instance before running on any production environment. As a precaution, take full database backups (PWA and SharePoint Content) before running the script on the production environment so that you can roll back if needed. The script is provided “As is” with no warranties etc. ","date":"2019-12-01","objectID":"/project-server/delete-server-sites-9c3d3e95/delete-server-sites-9c3d3e95/:2:0","tags":["Active Directory","HTML"],"title":"Delete Project Server Project Sites","uri":"/project-server/delete-server-sites-9c3d3e95/delete-server-sites-9c3d3e95/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Delete reappearing printers that keeps comming back Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/delete-reappearing-91bfec8b/delete-reappearing-91bfec8b/:1:0","tags":["Active Directory","HTML"],"title":"Delete reappearing printers that keeps comming back","uri":"/printing/print-servers-print-queues-and-print-jobs/delete-reappearing-91bfec8b/delete-reappearing-91bfec8b/"},{"categories":["Printing"],"content":"Output from Technet Gallery Script to delete ghost printers that keeps coming back after deletion. You can read more about this problem here. You need to add psexec to system path. Download PsTools and extract it to C:\\Windows\\System32. **Please, take a registry backup first! ** This script removes the following registry keys: Windows Shell Script HKLM:\\SYSTEM\\CurrentControlSet\\Enum\\SWD\\PRINTENUM\\* HKLM:\\SYSTEM\\CurrentControlSet\\Control\\DeviceClasses\\{0ecef634-6ef0-472a-8085-5ad023ecbccd}\\* HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Print\\Providers\\Client Side Rendering Print Provider\\* HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Print\\Printers\\* HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Print\\V4 Connections\\*  I had not any problem running script in several servers, but be carefully using it: `\"Using Registry Editor incorrectly can cause serious, system-wide problems that may require you to re-install Windows to correct them. Microsoft cannot guarantee that any problems resulting from the use of Registry Editor can be solved. Use this tool at your own risk.“` Reboot server immediately after running it. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/delete-reappearing-91bfec8b/delete-reappearing-91bfec8b/:2:0","tags":["Active Directory","HTML"],"title":"Delete reappearing printers that keeps comming back","uri":"/printing/print-servers-print-queues-and-print-jobs/delete-reappearing-91bfec8b/delete-reappearing-91bfec8b/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Delete Specific Printers Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/67382d47-85dc-4a18-98f2-96486de98189/67382d47-85dc-4a18-98f2-96486de98189/:1:0","tags":["Active Directory","HTML"],"title":"Delete Specific Printers","uri":"/printing/print-servers-print-queues-and-print-jobs/67382d47-85dc-4a18-98f2-96486de98189/67382d47-85dc-4a18-98f2-96486de98189/"},{"categories":["Printing"],"content":"Output from Technet Gallery Deletes all HP QuietJet printers installed on a computer. Visual Basic strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colInstalledPrinters = objWMIService.ExecQuery _ (\"Select * from Win32_Printer Where DriverName = 'HP QuietJet'\") For Each objPrinter in colInstalledPrinters objPrinter.Delete_ Next ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/67382d47-85dc-4a18-98f2-96486de98189/67382d47-85dc-4a18-98f2-96486de98189/:2:0","tags":["Active Directory","HTML"],"title":"Delete Specific Printers","uri":"/printing/print-servers-print-queues-and-print-jobs/67382d47-85dc-4a18-98f2-96486de98189/67382d47-85dc-4a18-98f2-96486de98189/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Delete Unused Printer Ports Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/c06c3764-d77a-43ae-b8ce-ad79a20dfd4f/c06c3764-d77a-43ae-b8ce-ad79a20dfd4f/:1:0","tags":["Active Directory","HTML"],"title":"Delete Unused Printer Ports","uri":"/printing/printer-ports-and-printer-drivers/c06c3764-d77a-43ae-b8ce-ad79a20dfd4f/c06c3764-d77a-43ae-b8ce-ad79a20dfd4f/"},{"categories":["Printing"],"content":"Output from Technet Gallery Deletes any printer ports that have been installed on a computer but are not in use. Visual Basic Set objDictionary = CreateObject(\"Scripting.Dictionary\") strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colPrinters = objWMIService.ExecQuery _ (\"Select * from Win32_Printer\") For Each objPrinter in colPrinters objDictionary.Add objPrinter.PortName, objPrinter.PortName Next Set colPorts = objWMIService.ExecQuery _ (\"Select * from Win32_TCPIPPrinterPort\") For Each objPort in colPorts If objDictionary.Exists(objPort.Name) Then Else ObjPort.Delete_ End If Next ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/c06c3764-d77a-43ae-b8ce-ad79a20dfd4f/c06c3764-d77a-43ae-b8ce-ad79a20dfd4f/:2:0","tags":["Active Directory","HTML"],"title":"Delete Unused Printer Ports","uri":"/printing/printer-ports-and-printer-drivers/c06c3764-d77a-43ae-b8ce-ad79a20dfd4f/c06c3764-d77a-43ae-b8ce-ad79a20dfd4f/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Deploy Printer via PowerShell for Microsoft Intun Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/deploy-printer-via-d557b5ad/deploy-printer-via-d557b5ad/:1:0","tags":["Active Directory","HTML"],"title":"Deploy Printer via PowerShell for Microsoft Intun","uri":"/printing/printer-ports-and-printer-drivers/deploy-printer-via-d557b5ad/deploy-printer-via-d557b5ad/"},{"categories":["Printing"],"content":"Output from Technet Gallery ######################### # PowerShell Help # ######################### \u003c# .SYNOPSIS This script is designed to deploy printers to Windows 10 workstations deployed and triggered by Intune. .DESCRIPTION Written by Jean-Pierre Simonis, Delivery Quality Assurance https://www.linkedin.com/in/jsimonis/ Version 1.1 ######################### # Change Log # ######################### 23/11/2017 1.1 Features - Add support for MSI install keys so that script deployment via Intune reports as successful 10/11/2017 v1.0 - Initial Release # Features - Error trapping and logging - Unzip Printer Driver package - Install Local Printer Queue .NOTES ######################### # Notes # ######################### This script is designed to be packaged as an exe and pushed out via Intune This script requires the following permissions # - Elevated PowerShell Session first time only to create custom eventlog type # - Permission to update install the printer (Assumed it will run in Intune installation context) # - Your endpoint protection may need this package to be added as an exception as it might detect and block it as this script extracts itself and launch a script in an administrative context Installation 1. Ensure script is run against Windows 10 devices with at least PowerShell V5.1 2. Create printer driver zip file 3. Configure variables in PowerShell Script to desired printer configuration supply name of driver zip file 4. Create batch file to launch PowerShell script (Refer below instructions for contents of batch file) 5. Create Self-extracting executable (I used WinRAR) # a. Configure it to extract to temporary directory # b. Configure post launch a command (deploy.bat) # c. Configure Icon, Overwrite (Replace) and Title settings # d. Configure for silent extraction (hidden dialogs) # e. Ensure deploy.bat, Deploy-Printer.ps1, PrinterDriver.zip are added to archive 6. Use MSI Wrapper to convert the EXE to MSI # a. download from http://www.exemsi.com # b. Configure MSI Settings # Application ID (ensure this value is the same as defined in script configuration) # Deploy Printer Package 1 # Upgrade Code (This can generated by MSI Wrapper) # {E6454CC0-00B2-4134-9D28-9089E5628C4B} # Product Name # Deploy Printer Package # Version # 1.0.0.0 # Icon # PowerShell.ico (I downloaded and used a powershell logo in ico format) # Comments # PowerShell Script to Deploy Campus Side Printer 7. (Optional) Use ORCA to modify MSI tables to update product name to remove (wrapped by MSI Wrapper in title or buy the product) # a. download from https://msdn.microsoft.com/en-us/library/windows/desktop/aa370557(v=vs.85).aspx 8. Configure Intune to deploy LOB Windows Application 9. Enjoy Customer Success\r😊 Contents of deploy.bat @echo off REM Written by Jean-Pierre Simonis, Delivery Quality Assurance, www.deliveryqa.com.au @echo Launching Printer Deployment PowerShell Script powershell.exe -executionpolicy unrestricted -file .\\Deploy-Printer.ps1 End of Script .LINK http://www.deliveryqa.com.au #\u003e ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/deploy-printer-via-d557b5ad/deploy-printer-via-d557b5ad/:2:0","tags":["Active Directory","HTML"],"title":"Deploy Printer via PowerShell for Microsoft Intun","uri":"/printing/printer-ports-and-printer-drivers/deploy-printer-via-d557b5ad/deploy-printer-via-d557b5ad/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Disable Advanced Printing Features Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/disable-advanced-printing-d014f75b/disable-advanced-printing-d014f75b/:1:0","tags":["Active Directory","HTML"],"title":"Disable Advanced Printing Features","uri":"/printing/print-servers-print-queues-and-print-jobs/disable-advanced-printing-d014f75b/disable-advanced-printing-d014f75b/"},{"categories":["Printing"],"content":"Output from Technet Gallery This powershell script will let you specify a print server and export a list of printers to a csv file. Then it will import that same list of printers loop through each printer and disable the advanced printing features for each queue. It does this by creating a foreach loop and taking the name field of the csv file and converting each printer to a local variable to be called in the native vbscript prnnfg.vbs New-Item -ItemType directory -Path C:\\Printer_Exports -ErrorAction SilentlyContinue $PrintServer = Read-host \"Enter Print Server Name\" $SavePath = \"c:\\Printer_Exports\\$PrintServer.csv\" Get-WMIObject -Class Win32_Printer -Computer $Printserver | Select Name | Export-CSV -Path $SavePath Write-Host \"File saved to:\" $SavePath $PrinterCSV = Import-CSV $SavePath foreach($Printer in $PrinterCSV) { Write-Host \"Disabling Advanced Printing Features: $Printer\" $CurrentPrinter = $Printer.Name cscript c:\\windows\\system32\\printing_admin_scripts\\en-us\\prncnfg.vbs -t -p $CurrentPrinter +rawonly } ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/disable-advanced-printing-d014f75b/disable-advanced-printing-d014f75b/:2:0","tags":["Active Directory","HTML"],"title":"Disable Advanced Printing Features","uri":"/printing/print-servers-print-queues-and-print-jobs/disable-advanced-printing-d014f75b/disable-advanced-printing-d014f75b/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Display Project Online ideas list data Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/display-online-ideas-list-c59c8cc7/display-online-ideas-list-c59c8cc7/:1:0","tags":["Active Directory","HTML"],"title":"Display Project Online ideas list data","uri":"/project-server/display-online-ideas-list-c59c8cc7/display-online-ideas-list-c59c8cc7/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This JavaScript file enables you to view the Project Ideas list data on a page in the Project Web App site and provides a hyperlink to the projects that have been created from a list item. It is simple to deploy and use, just create a page in the PWA site, update the JavaScript file so that the listName variable has the correct project ideas list title, upload the JavaScript file and add it to the page using a content editor web part. The link to the blog post below details the steps required. A code snippet can be seen below: JavaScript \u003ctable width=\"100%\" align=\"left\" cellpadding=\"0\" border=\"1\" class=\"stripe hover\" id=\"ProjectIdeasTable\"\u003e \u003cthead\u003e\u003cth\u003eItem ID\u003c/th\u003e\u003cth\u003eItem Title\u003c/th\u003e\u003cth\u003eProject GUID and link to Project\u003c/th\u003e\u003c/thead\u003e \u003c/table\u003e \u003cscript type=\"text/javascript\"\u003e //update project ideas list title var listName = 'ProjectIdeas'; $(document).ready(function(){  Once loaded to the PWA site it will look like the example below but with the list data from your project ideas list: Here is a link to the supporting blog post that details the requirements to use this script: https://pwmather.wordpress.com/2016/07/22/projectonline-project-ideas-list-view-with-project-guid-office365-sharepoint-javascript-jquery/ ","date":"2019-12-01","objectID":"/project-server/display-online-ideas-list-c59c8cc7/display-online-ideas-list-c59c8cc7/:2:0","tags":["Active Directory","HTML"],"title":"Display Project Online ideas list data","uri":"/project-server/display-online-ideas-list-c59c8cc7/display-online-ideas-list-c59c8cc7/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Durations of 2016 in Microsoft Proj Original Technet Description URL Description Download: [Download Link](Download\\Durations of 2016.zip) ","date":"2019-12-01","objectID":"/project-server/durations-of-2016-in-900089ab/durations-of-2016-in-900089ab/:1:0","tags":["Active Directory","HTML"],"title":"Durations of 2016 in Microsoft Proj","uri":"/project-server/durations-of-2016-in-900089ab/durations-of-2016-in-900089ab/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This Zip file contains a 2016 and a 2007 file format MPP. In it there is a set of tasks with the correct durations of: the year the quarters the months Using these files as a guideline you are sure to grab the correct duration for a specific time. For instance, you want to have a resource allocated for the whole time in Q2 2016 for 40% of his/her max units. This file will provide you with the task. The file is useful for organisations that have long running projects, without to much detail in the schedule. Thanks for downloading! Erik van Hurck ","date":"2019-12-01","objectID":"/project-server/durations-of-2016-in-900089ab/durations-of-2016-in-900089ab/:2:0","tags":["Active Directory","HTML"],"title":"Durations of 2016 in Microsoft Proj","uri":"/project-server/durations-of-2016-in-900089ab/durations-of-2016-in-900089ab/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Durations of 2017 in Microsoft Proj Original Technet Description URL Description Download: [Download Link](Download\\Durations of 2017.zip) ","date":"2019-12-01","objectID":"/project-server/durations-of-2017-in-a117db34/durations-of-2017-in-a117db34/:1:0","tags":["Active Directory","HTML"],"title":"Durations of 2017 in Microsoft Proj","uri":"/project-server/durations-of-2017-in-a117db34/durations-of-2017-in-a117db34/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This Zip file contains a 2016 and a 2007 file format MPP. In it there is a set of tasks with the correct durations for: the year the quarters the months Using these files as a guideline you are sure to grab the correct duration for a specific time. For instance, you want to have a resource allocated for the whole time in Q2 2017 for 40% of his/her max units? This file will provide you with the correct duration and a task that you can use for this purpose. The file is useful for organizations that have long running projects, without to much detail in the schedule. Thanks for downloading! Erik van Hurck PS: for the 2016 durations and a updated version of the visual reports please visite my other contributions. ","date":"2019-12-01","objectID":"/project-server/durations-of-2017-in-a117db34/durations-of-2017-in-a117db34/:2:0","tags":["Active Directory","HTML"],"title":"Durations of 2017 in Microsoft Proj","uri":"/project-server/durations-of-2017-in-a117db34/durations-of-2017-in-a117db34/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Durations of 2018 Original Technet Description URL Description Download: [Download Link](Download\\Durations of 2018.zip) ","date":"2019-12-01","objectID":"/project-server/durations-of-2018-6e421d75/durations-of-2018-6e421d75/:1:0","tags":["Active Directory","HTML"],"title":"Durations of 2018","uri":"/project-server/durations-of-2018-6e421d75/durations-of-2018-6e421d75/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This Zip file contains a 2016 and a 2007 file format MPP. In it there is a set of tasks with the correct durations of: the year the quarters the months Using these files as a guideline you are sure to grab the correct duration for a specific time. For instance, you want to have a resource allocated for the whole time in Q2 2016 for 40% of his/her max units. This file will provide you with the task. The file is useful for organisations that have long running projects, without to much detail in the schedule. Thanks for downloading! Erik van Hurck ** ** ","date":"2019-12-01","objectID":"/project-server/durations-of-2018-6e421d75/durations-of-2018-6e421d75/:2:0","tags":["Active Directory","HTML"],"title":"Durations of 2018","uri":"/project-server/durations-of-2018-6e421d75/durations-of-2018-6e421d75/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Durations of 2019 Original Technet Description URL Description Download: [Download Link](Download\\Durations of 2019.zip) ","date":"2019-12-01","objectID":"/project-server/durations-of-2019-1b3370a9/durations-of-2019-1b3370a9/:1:0","tags":["Active Directory","HTML"],"title":"Durations of 2019","uri":"/project-server/durations-of-2019-1b3370a9/durations-of-2019-1b3370a9/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This Zip file contains a 2019 and a 2007 file format MPP. In it there is a set of tasks with the correct durations of: the year the quarters the months Using these files as a guideline you are sure to grab the correct duration for a specific time. For instance, you want to have a resource allocated for the whole time in Q2 2019 for 40% of his/her max units. This file will provide you with the task. The file is useful for organisations that have long running projects, without to much detail in the schedule. Thanks for downloading! Erik van Hurck ","date":"2019-12-01","objectID":"/project-server/durations-of-2019-1b3370a9/durations-of-2019-1b3370a9/:2:0","tags":["Active Directory","HTML"],"title":"Durations of 2019","uri":"/project-server/durations-of-2019-1b3370a9/durations-of-2019-1b3370a9/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Enable Project Server License for SharePoint 2016 / Project Server 2016 Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/enable-server-license-for-b3ab48d8/enable-server-license-for-b3ab48d8/:1:0","tags":["Active Directory","HTML"],"title":"Enable Project Server License for SharePoint 2016 / Project Server 2016","uri":"/project-server/enable-server-license-for-b3ab48d8/enable-server-license-for-b3ab48d8/"},{"categories":["Project Server"],"content":"Output from Technet Gallery Hello, Attached ps1 file will help you to enable Project Server license in SharePoint 2016 or Project Server 2016. How it works Open “Enable-ProjectServerLicense-PS16.ps1” file in notepad. put your Project Server 2016 Key in line number 21. $ProjectServerKey=\"PutYourProjectServerKeyHere” Save and Close the file SharePoint 2016 Management Shell with administrator rights locate the path where “Enable-ProjectServerLicense-PS16.ps1” is. put the command “.\\Enable-ProjectServerLicense-PS16.ps1” and press enter Bingo.. :) Regards, Avinash kumar ","date":"2019-12-01","objectID":"/project-server/enable-server-license-for-b3ab48d8/enable-server-license-for-b3ab48d8/:2:0","tags":["Active Directory","HTML"],"title":"Enable Project Server License for SharePoint 2016 / Project Server 2016","uri":"/project-server/enable-server-license-for-b3ab48d8/enable-server-license-for-b3ab48d8/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Enhanced Microsoft’s Project Online Power BI Content Pack with currency choice. Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/microsofts-online-power-bi-0260454a/microsofts-online-power-bi-0260454a/:1:0","tags":["Active Directory","HTML"],"title":"Enhanced Microsoft's Project Online Power BI Content Pack with currency choice.","uri":"/project-server/microsofts-online-power-bi-0260454a/microsofts-online-power-bi-0260454a/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This file is based upon Microsoft’s content pack for Project Online and contains the following modifications. Currency : the user is prompted to enter their currency when they open the template, and combined with the locale set in the Options under Regional Settings ensures that currency values are displayed in the user’s local currency. **Time **: Additional time fields have been added to reports, allowing the user to drill down into weeks. This is useful especially on visualisations such as the Resource Heatmap. The model includes dates from 2013 to 2023. Page Level Filters : Reports such as resource assignments and resource availability have had relative time filters added, such as 7 months (to provide a valid 6 month look ahead) or 1 year. TimePhased Data : Some of the reports have been duplicated and appended with (TP). These reports show TimePhased data values. Drill through : has been added for resources on the Resource Availability and Work (TP) page. Buttons allowing viewing of by month, week or day for Resource Availability have been added.** ** Engagements : An Engagement report is included into the model. **Additional reports **: A report combining resource work and availability has been provided. Additional Filters** : **Some reports have slightly modified filters to provide a better user experience. Further details can also be found at http://www.applepark.co.uk/project-online-power-bi-content-pack-with-currency-parameter/ and https://applepark.co.uk/powerbi-template-v4/ ** ** ","date":"2019-12-01","objectID":"/project-server/microsofts-online-power-bi-0260454a/microsofts-online-power-bi-0260454a/:2:0","tags":["Active Directory","HTML"],"title":"Enhanced Microsoft's Project Online Power BI Content Pack with currency choice.","uri":"/project-server/microsofts-online-power-bi-0260454a/microsofts-online-power-bi-0260454a/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Exclude Printers From a Printer Configuration Scrip Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/437f6748-c23d-4772-adac-2d632602bc34/437f6748-c23d-4772-adac-2d632602bc34/:1:0","tags":["Active Directory","HTML"],"title":"Exclude Printers From a Printer Configuration Scrip","uri":"/printing/printer-ports-and-printer-drivers/437f6748-c23d-4772-adac-2d632602bc34/437f6748-c23d-4772-adac-2d632602bc34/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **Stephane Courcy-Poitras Creates a printer exclusion list which specified printers not to be affected by the community script Apply Printer Settings to Network Printers. Visual Basic \u003c!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"\u003e \u003chtml\u003e \u003chead\u003e \u003cmeta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\"\u003e \u003ctitle\u003eExclude printers\u003c/title\u003e \u003cHTA:APPLICATION ID=\"ExcludePrinters\" APPLICATIONNAME=\"ExcludePrinters\" SCROLL=\"yes\" SINGLEINSTANCE=\"yes\" WINDOWSTATE=\"normal\"\u003e \u003c/head\u003e \u003cSCRIPT Language=\"VBScript\"\u003e ' ----------------------------------------------------------------------------------------- ' Create a printer exclusion list to save in user's homedir. ' Stéphane Courcy-Poitras ' ----------------------------------------------------------------------------------------- 'General declarations Const CleRacine = \"Printers\\Connections\\\" Const HKCU = \u0026H80000001 Dim WSHShell : Set WSHShell = CreateObject(\"WScript.Shell\") Dim WMI : Set WMI = GetObject(\"Winmgmts:\") Dim wmiLocator : Set wmiLocator = CreateObject(\"WbemScripting.SWbemLocator\") Dim NameSpace : Set NameSpace = wmiLocator.ConnectServer(\"\", \"root\\default\") Dim colPrinter : Set colPrinter = WMI.InstancesOf(\"Win32_printer\") Dim CheminExceptions,Exceptions 'General functions and subs Sub EcrireFichier (Chemin,Contenu) 'Save Contenu to file Const ForWriting = 2 Dim oFSO: set oFSO = CreateObject(\"Scripting.FileSystemObject\") Dim oFic Set oFic = oFSO.OpenTextFile(Chemin,ForWriting,True) oFic.Write(Contenu) oFic.Close() Set oFic = Nothing Set oFSO = Nothing End Sub Function LireFichier (Chemin) 'Get all text from file. Return \"\" if file not found. const ForReading = 1 Dim fso: set fso = CreateObject(\"Scripting.FileSystemObject\") Dim Fic If fso.FileExists(Chemin) Then Set Fic = fso.OpenTextFile(Chemin,ForReading,False) LireFichier = \"\" On Error Resume Next LireFichier = Fic.ReadAll() On Error GoTo 0 Set Fic = Nothing Else LireFichier = \"\" End If End Function \u003c/SCRIPT\u003e \u003cbody\u003e \u003ch1\u003eExcluded printers\u003c/h1\u003e \u003cp\u003eDon't apply saved printers settings to the current user for the following printers:\u003c/p\u003e \u003cform action=\"\" name=\"Formulaire\" id=\"Formulaire\"\u003e \u003ctable width=\"100%\" border=\"0\"\u003e \u003ctr bgcolor=\"#FFFFCC\"\u003e \u003ctd width=\"4%\" valign=\"top\"\u003e\u003cstrong\u003e\u003c/strong\u003e\u003c/td\u003e \u003ctd width=\"56%\" valign=\"top\"\u003e\u003cstrong\u003ePrinter\u003c/strong\u003e\u003c/td\u003e \u003ctd width=\"56%\" valign=\"top\"\u003e\u003cstrong\u003eDriver\u003c/strong\u003e\u003c/td\u003e \u003ctd width=\"40%\" valign=\"TOP\"\u003e\u003cstrong\u003eExclude\u003c/strong\u003e\u003c/td\u003e \u003ctr\u003e \u003cscript language=\"vbscript\"\u003e 'Get actual excluded printers names CheminExceptions = WSHShell.SpecialFolders(\"MyDocuments\") \u0026 \"\\ExcludedPrinters.txt\" Exceptions = LireFichier(CheminExceptions) 'Display network printers with check boxes For Each oPrinter In colPrinter If (oPrinter.ServerName \u003c\u003e \"\") Then 'This is a network printer Document.write \"\u003ctr\u003e\" Document.write \"\u003ctd width=\"\"4%\"\" valign=\"\"top\"\"\u003e\u0026nbsp;\u003c/td\u003e\" Document.write \"\u003ctd width=\"\"56%\"\" valign=\"\"top\"\"\u003e\" \u0026 oPrinter.Name \u0026 \"\u003c/td\u003e\" Document.write \"\u003ctd width=\"\"56%\"\" valign=\"\"top\"\"\u003e\" \u0026 oPrinter.DriverName \u0026 \"\u003c/td\u003e\" Document.write \"\u003ctd width=\"\"40%\"\" valign=\"\"TOP\"\"\u003e\" If Instr(Exceptions,oPrinter.Name) = 0 Then 'Printer already in exclusion list, show it checked Document.write \"\u003cinput name=\"\"\" \u0026 oPrinter.Name \u0026 \"\"\"type=\"\"checkbox\"\" value=\"\"1\"\"\" \u0026 oPrinter.name \u0026 \"\"\"\u003e\" Else 'Printer not in exclusion list, show in unchecked Document.write \"\u003cinput name='\" \u0026 oPrinter.Name \u0026 \"' type='checkbox' value='1'\" \u0026 oPrinter.name \u0026 \" checked='checked'\u003e\" End If Document.write \"\u003c/td\u003e\" Document.write \"\u003c/tr\u003e\" End If Next \u003c/script\u003e \u003c/table\u003e\u003cp class=\"style1\"\u003e \u003cinput name=\"BoutonDemarrer\" type=\"button\" id=\"BoutonDemarrer\" value=\"Save this list for the current user\"\u003e \u003c/p\u003e \u003c/form\u003e \u003cSCRIPT language=\"VBSCRIPT\"\u003e Sub BoutonDemarrer_OnClick() 'Update the exclusion list file Dim CheckBox Exceptions = \"\" For Each oPrinter In colPrinter If (oPrinter.ServerName \u003c\u003e \"\") Then 'This is a network printer If Document.Formulaire.elements(oPrinter.Name).","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/437f6748-c23d-4772-adac-2d632602bc34/437f6748-c23d-4772-adac-2d632602bc34/:2:0","tags":["Active Directory","HTML"],"title":"Exclude Printers From a Printer Configuration Scrip","uri":"/printing/printer-ports-and-printer-drivers/437f6748-c23d-4772-adac-2d632602bc34/437f6748-c23d-4772-adac-2d632602bc34/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Export to Pdf file powershell Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/client-side-printing/export-to-pdf-file-d360e5cb/export-to-pdf-file-d360e5cb/:1:0","tags":["Active Directory","HTML"],"title":"Export to Pdf file powershell","uri":"/printing/client-side-printing/export-to-pdf-file-d360e5cb/export-to-pdf-file-d360e5cb/"},{"categories":["Printing"],"content":"Output from Technet Gallery .Synopsis  Cmdlet to Export html to pdf using PDFCreator.exe  .Requires  Install PDFCreator from http://www.pdfforge.org  Make pdfcreator as default printer  Open pdfcreator and set the autosave option enabled and save  .Usage  Convert a text object to html using convertto-html and use out-pdfcreator for creating pdf  or you can print a html without conversion  .Example  Out-PDFCreator -Input_HTML “C:\\test.html” -OUTPUT_FOLDER “c:\\test” -OUTPUT_FILENAME “myname” -Verbose  .Credits  Adapted from script of Jishusen gupta titled “Automated Website Printing in IE using PowerShell”  http://gallery.technet.microsoft.com/scriptcenter/1f08824a-c9db-415e-83b1-2c49ebda195c \u003c# .Synopsis Cmdlet to Export html to pdf using PDFCreator.exe .Requires Install PDFCreator from http://www.pdfforge.org Make pdfcreator as default printer Open pdfcreator and set the autosave option enabled and save .Usage Convert a text object to html using convertto-html and use out-pdfcreator for creating pdf or you can print a html without conversion .Example Out-PDFCreator -Input_HTML \"C:\\test.html\" -OUTPUT_FOLDER \"c:\\test\" -OUTPUT_FILENAME \"myname\" -Verbose .Credits Adapted from script of Jishusen gupta titled \"Automated Website Printing in IE using PowerShell\" http://gallery.technet.microsoft.com/scriptcenter/1f08824a-c9db-415e-83b1-2c49ebda195c #\u003e Function Out-PDFCreator() { Param( [Parameter(Position=1,Mandatory=$true,ValueFromPipeline=$true,ValueFromPipelineByPropertyName=$true)] $Input_Html=\"\", [Parameter(Position=2,Mandatory=$true,ValueFromPipeline=$true,ValueFromPipelineByPropertyName=$true)] $OUTPUT_FOLDER=\"c:\\test\", [Parameter(Position=3,Mandatory=$true,ValueFromPipeline=$true,ValueFromPipelineByPropertyName=$true)] $OUTPUT_FILENAME=\"test\" ) Try { $PDFINFOPATH=\"HKCU:\\Software\\PDFCreator\\Program\" Get-itemproperty -path $PDFINFOPATH -name \"AutoSaveDirectory\" |out-null Set-itemproperty -path $PDFINFOPATH -name \"AutoSaveDirectory\" -value $OUTPUT_FOLDER |out-null Get-itemproperty -path $PDFINFOPATH -name \"UseAutoSave\" |out-null Set-itemproperty -path $PDFINFOPATH -name \"UseAutoSave\" -value \"1\" |out-null Get-itemproperty -path $PDFINFOPATH -name \"AutoSaveFilename\" |out-null Set-itemproperty -path $PDFINFOPATH -name \"AutoSaveFilename\" -value \"$OUTPUT_FILENAME.pdf\" |out-null $IE = new-object -comobject \"InternetExplorer.Application\" $IE.visible=$false $IE.navigate(\"$Input_html\") $IE.ExecWB(6,2) Start-Sleep -Seconds 5 #$ie.QueryStatusWB(6) #$ie.QueryStatusWB(2) $IE.quit set-itemproperty -path $PDFINFOPATH -name \"AutoSaveFilename\" -value \"\" |out-null set-itemproperty -path $PDFINFOPATH -name \"AutoSaveDirectory\" -value \"\" |out-null set-itemproperty -path $PDFINFOPATH -name \"UseAutoSave\" -value \"0\" |out-null } Catch [system.exception] { Write-Output $Error[0] } Finally { Write-Output \"created $output_filename.pdf\" } } ","date":"2019-12-01","objectID":"/printing/client-side-printing/export-to-pdf-file-d360e5cb/export-to-pdf-file-d360e5cb/:2:0","tags":["Active Directory","HTML"],"title":"Export to Pdf file powershell","uri":"/printing/client-side-printing/export-to-pdf-file-d360e5cb/export-to-pdf-file-d360e5cb/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Extract Project Online or Project Server 2013 / 2016 Timesheet data Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/extract-online-or-server-c1cba361/extract-online-or-server-c1cba361/:1:0","tags":["Active Directory","HTML"],"title":"Extract Project Online or Project Server 2013 / 2016 Timesheet data","uri":"/project-server/extract-online-or-server-c1cba361/extract-online-or-server-c1cba361/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This PowerShell script will use the Project Reporting OData API to extract the timesheet data between the given start and end dates. The user running the script specifies the source PWA instance URL, Username and password. They then enter the start and finish dates in yyyy-mm-dd format and run. The data will then be displayed in the console and output to a CSV file. A code snippet can be seen below: #add SharePoint Online DLL - update the location if required $programFiles = [environment]::getfolderpath(\"programfiles\") add-type -Path $programFiles'\\SharePoint Online Management Shell\\Microsoft.Online.SharePoint.PowerShell\\Microsoft.SharePoint.Client.dll' #get the environment details $PWAInstanceURL = Read-Host \"what is the pwa url?\" $PWAUserName = Read-Host \"what is the pwa username?\" $PWAUserPassword = Read-Host -AsSecureString \"what is the pwa password?\" $startDate = Read-Host \"enter the period start date in the following format yyyy-mm-dd\" For the script to work, the SharePoint Online client DLL is required for the SharePoint Online credentials class. This will work for both Project Online and Project Server 2013 / 2016. A supporting blog post can be seen here: https://pwmather.wordpress.com/2016/05/17/extract-projectonline-or-projectserver-2013-2016-timesheet-data-powershell-office365/ The script is provided “As is” with no warranties etc. ","date":"2019-12-01","objectID":"/project-server/extract-online-or-server-c1cba361/extract-online-or-server-c1cba361/:2:0","tags":["Active Directory","HTML"],"title":"Extract Project Online or Project Server 2013 / 2016 Timesheet data","uri":"/project-server/extract-online-or-server-c1cba361/extract-online-or-server-c1cba361/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Fast Get-PrinterInventory Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/fast-get-printerinventory-0749b395/fast-get-printerinventory-0749b395/:1:0","tags":["Active Directory","HTML"],"title":"Fast Get-PrinterInventory","uri":"/printing/print-servers-print-queues-and-print-jobs/fast-get-printerinventory-0749b395/fast-get-printerinventory-0749b395/"},{"categories":["Printing"],"content":"Output from Technet Gallery This is version 2 of the Fast Get-PrinterInventory command. This now outputs objects to the powershell session and not to Excel as that is not always the best solution. If you need to export this to Excel as well, pipe the command to export-csv This script is a modification of the all the current scripts which are floating around to get the printer inventory from print servers. The issue that I ran into with these is that for our larger client print servers, these took a LONG time to run. For those print servers with 1000+ ques, a script execution time of six hours or more was not uncommon. While working on some other scripts, my coworker and I found a way to greatly increase the speed of which print ques were enumerated and how fast the report was generated. To execute the script: To run Basic Example Get-Printerinventory -computername \"TestServer\" Basic Example with multiple servers Get-Printerinventory -computername \"testserver\",\"testserver2\" Basic Example with passing values through the pipeline \"testserver1\",\"testserver2\" | get-printerinventory Example with exporting to CSV file get-printerinventory \"testps01\" | Export-csv c:\\test.csv -notypeinformation ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/fast-get-printerinventory-0749b395/fast-get-printerinventory-0749b395/:2:0","tags":["Active Directory","HTML"],"title":"Fast Get-PrinterInventory","uri":"/printing/print-servers-print-queues-and-print-jobs/fast-get-printerinventory-0749b395/fast-get-printerinventory-0749b395/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Find Spooler status on remote print servers Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/a582798a-a07e-4ad4-af2a-5ddfd6f7e6c9/a582798a-a07e-4ad4-af2a-5ddfd6f7e6c9/:1:0","tags":["Active Directory","HTML"],"title":"Find Spooler status on remote print servers","uri":"/printing/print-servers-print-queues-and-print-jobs/a582798a-a07e-4ad4-af2a-5ddfd6f7e6c9/a582798a-a07e-4ad4-af2a-5ddfd6f7e6c9/"},{"categories":["Printing"],"content":"Output from Technet Gallery Find Spooler status on remote print servers $computers = \"Server1\", \"Server2\", \"Server3\" Get-WmiObject -computer $computers Win32_Service -Filter \"Name='Spooler'\" | ft systemname, name, state ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/a582798a-a07e-4ad4-af2a-5ddfd6f7e6c9/a582798a-a07e-4ad4-af2a-5ddfd6f7e6c9/:2:0","tags":["Active Directory","HTML"],"title":"Find Spooler status on remote print servers","uri":"/printing/print-servers-print-queues-and-print-jobs/a582798a-a07e-4ad4-af2a-5ddfd6f7e6c9/a582798a-a07e-4ad4-af2a-5ddfd6f7e6c9/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Generate report of all printers on print servers Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/generate-report-of-all-99a4155f/generate-report-of-all-99a4155f/:1:0","tags":["Active Directory","HTML"],"title":"Generate report of all printers on print servers","uri":"/printing/print-servers-print-queues-and-print-jobs/generate-report-of-all-99a4155f/generate-report-of-all-99a4155f/"},{"categories":["Printing"],"content":"Output from Technet Gallery PowerShell Workflow . .\\ListPrintServer.ps1 This script creates a report of all network-shared printers based off of providing a list of print servers as the input. Excel required. Lists pertinent info relating to printer share. Matches port to the printer IP for easy linking to web site–this feature works with standard TCP/IP ports but not proprietary ports such as HP propietary or Lexmark propietary, all other info will however populate. (Typically these port types are not needed, Standard TCP/IP often used instead). Provided as-is/no warranty. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/generate-report-of-all-99a4155f/generate-report-of-all-99a4155f/:2:0","tags":["Active Directory","HTML"],"title":"Generate report of all printers on print servers","uri":"/printing/print-servers-print-queues-and-print-jobs/generate-report-of-all-99a4155f/generate-report-of-all-99a4155f/"},{"categories":["Printing"],"content":"Original Links Original Technet URL get and set default printer for many users in a bulk Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/get-and-set-default-608a8d19/get-and-set-default-608a8d19/:1:0","tags":["Active Directory","HTML"],"title":"get and set default printer for many users in a bulk","uri":"/printing/printer-ports-and-printer-drivers/get-and-set-default-608a8d19/get-and-set-default-608a8d19/"},{"categories":["Printing"],"content":"Output from Technet Gallery This project was coded for the printer migration in a large environment and consist oft two scripts. The aim was to read out the default printer name of the User who is logged in and save it modified to a txt File. The modification is necessary, cause as part of the migration all printer got a new name and the Users required a valid default printer. After this, a second txt file will be created to save the old default Printername, just to have a backup. The second script checks out, if there is a printer installed with the new name and if this condition is true, the script will set this printer as the default one. Skript one: Bash/shell @echo off @REM ======================================================================================= @REM Param to set the working path @REM ======================================================================================= SET pfad=\"C:\\Users\\%Username%\\Desktop\\\" wmic printer where \"Default = 'True'\" get Name \u003e %pfad%old_defaultprinter.txt setlocal enabledelayedexpansion @REM ======================================================================================= @REM Enter here the String which should be replaced with a new one. @REM ======================================================================================= Set \"FindString=Canon\" @REM ======================================================================================= @REM Enter here the String which replace the old one. @REM ======================================================================================= Set \"ReplaceWith=Brother\" @REM ======================================================================================= @REM Replacing Process @REM ======================================================================================= For /f \"delims=\" %%a in ( 'find.exe /n /v \"\"^\u003c\"%pfad%old_defaultprinter.txt\"' ) Do ( (set Line=\"''%%a\") (Set Line=!Line:^\u003c=^^^\u003c!) \u0026 (Set Line=!Line:^\u003e=^^^\u003e!) call:replace (echo\\!Line!)\u003e\u003e\"%pfad%new.txt\" ) @REM ======================================================================================= @REM Creation of the File with the new name in it @REM ======================================================================================= type %pfad%new.txt|find /v \"Name\" \u003e %pfad%%Username%_new_defaultprinter.txt wmic printer where \"Default = 'True'\" get Name \u003e %pfad%old.txt @REM ======================================================================================= @REM Creation of the File with the old name in it @REM ======================================================================================= type %pfad%old.txt|find /v \"Name\" \u003e %pfad%%Username%_old_defaultprinter.txt @REM ======================================================================================= @REM deletion of the temporary Files @REM ======================================================================================= del %pfad%old_defaultprinter.txt del %pfad%new.txt del %pfad%old.txt @REM ======================================================================================= @REM Replacing algorithm @REM ======================================================================================= goto:eof ------------ :replace subroutine Set/a i = %i% + 1 (Set Line=!Line:''[%i%]=!) Set \"FindString2=\" Set \"FindString2=%FindString:\u003c=^^^\u003c%\" Set \"FindString2=%FindString2:\u003e=^^^\u003e%\" Set \"ReplaceWith2=\" Set \"ReplaceWith2=%ReplaceWith:\u003c=^^^\u003c%\" Set \"ReplaceWith2=%ReplaceWith2:\u003e=^^^\u003e%\" (Set Line=!Line:%FindString2%=%ReplaceWith2%!) (Set Line=%Line:~1,-1%) goto:eof ------------ Skript Two: Bash/shell @echo off @REM ======================================================================================= @REM Param to set the working path @REM ======================================================================================= SET pfad=\"C:\\Users\\%Username%\\Desktop\\\" @REM ======================================================================================= @REM Param to read out the name of t","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/get-and-set-default-608a8d19/get-and-set-default-608a8d19/:2:0","tags":["Active Directory","HTML"],"title":"get and set default printer for many users in a bulk","uri":"/printing/printer-ports-and-printer-drivers/get-and-set-default-608a8d19/get-and-set-default-608a8d19/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Get detailed information on all network printers. Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/get-detailed-information-8108cece/get-detailed-information-8108cece/:1:0","tags":["Active Directory","HTML"],"title":"Get detailed information on all network printers.","uri":"/printing/printer-ports-and-printer-drivers/get-detailed-information-8108cece/get-detailed-information-8108cece/"},{"categories":["Printing"],"content":"Output from Technet Gallery This is a little script that gathers only essential information on network printers. The specific fields are: SystemName (Server) Name (Printer Name) Location Portname (IP Address) DriverName Capabilities Comment If you download this script and find it useful, please come back and rate it or post something in the “Q and A”. All of my scripts also have my email address so you can drop me a line as well. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/get-detailed-information-8108cece/get-detailed-information-8108cece/:2:0","tags":["Active Directory","HTML"],"title":"Get detailed information on all network printers.","uri":"/printing/printer-ports-and-printer-drivers/get-detailed-information-8108cece/get-detailed-information-8108cece/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Get installed printers from local or remote computers Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/client-side-printing/get-installed-printers-8937f77b/get-installed-printers-8937f77b/:1:0","tags":["Active Directory","HTML"],"title":"Get installed printers from local or remote computers","uri":"/printing/client-side-printing/get-installed-printers-8937f77b/get-installed-printers-8937f77b/"},{"categories":["Printing"],"content":"Output from Technet Gallery This function uses the Get-WMIObject Win32_Printer class to get all installed printers on a local or remote computer. The input will accept a single or multiple computer names. If you like my PowerShell Tool please give it some stars under Ratings. If you have any tips for improvement or any general comments please feel free to leave them on the Q and A tab. Examples of usage: Example 1: Type the function name ‘Get-InstalledPrinter’ and hit enter. The function will prompt you for any required input. Example 2: Get-InstalledPrinter -ComputerName ‘computername1’ Example 3: ‘computername1’ | Get-InstalledPrinter function Get-InstalledPrinter { \u003c# .SYNOPSIS Uses Get-WMIObject Win32_Printer to list all printers installed. .DESCRIPTION Uses Get-WMIObject Win32_Printer to list all printers installed. .PARAMETER ComputerName Accepts input for one or more computer names. .EXAMPLE Get-InstalledPrinter -ComputerName computername1 .EXAMPLE \"computername1\" | Get-InstalledPrinter .EXAMPLE Run on a local computer Get-InstalledPrinter #\u003e [CmdletBinding()] Param( [Parameter(Mandatory=$True, ValueFromPipeline=$True, ValueFromPipelinebyPropertyName=$True)] [string[]]$ComputerName ) BEGIN { Write-Output \"`nGetting all installed printers ...`n\" } PROCESS { foreach ($Computer in $ComputerName) { if ( Test-Connection -ComputerName $computer -Count 1 -ErrorAction SilentlyContinue ) { Write-Output \"$Computer\" $printer = Get-WMIObject Win32_Printer -ComputerName $Computer | Select-Object Name,Location,PortName #Try Caption instead of Name $printer } else { Write-Warning \"$Computer is not pingable ...\" } } } END { Write-Output \"The script is complete! Check over output for any warnings.\" } } ","date":"2019-12-01","objectID":"/printing/client-side-printing/get-installed-printers-8937f77b/get-installed-printers-8937f77b/:2:0","tags":["Active Directory","HTML"],"title":"Get installed printers from local or remote computers","uri":"/printing/client-side-printing/get-installed-printers-8937f77b/get-installed-printers-8937f77b/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Get Printer Driver Information from local or remote Computers. Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/get-printer-driver-21b6ff23/get-printer-driver-21b6ff23/:1:0","tags":["Active Directory","HTML"],"title":"Get Printer Driver Information from local or remote Computers.","uri":"/printing/printer-ports-and-printer-drivers/get-printer-driver-21b6ff23/get-printer-driver-21b6ff23/"},{"categories":["Printing"],"content":"Output from Technet Gallery Get Information about Printer Drivers (Driver Version,language, plattform and dependent files). OUTPUTS Custom PSObjects containing the following properties:  ComputerName  DriverName  DriverVersion  SupportedPlatform  Language  ConfigFile  DataFile  DependentFiles  SupportedPlatform In this script you can see an Example on how to set default visible properties on return object ————————– EXAMPLE 1 ————————–  PS C:\u0026gt;Get-LHSPrinterDriver | Select *  Outputs all Printer driver infos from local Computer  Use Select * to see all properties.  ————————– EXAMPLE 2 ————————–  PS C:\u0026gt;Get-LHSPrinterDriver -ComputerName Server1 -DriverName “HP Universal Printing*”  ComputerName : Server1  DriverName : HP Universal Printing PS (v5.5.0)  DriverVersion : 6.1.7600.16385  SupportedPlatform : Windows x64  Language : Deutsch (Deutschland)  ComputerName : Server1  DriverName : HP Universal Printing PS (v5.4)  DriverVersion : 6.1.7600.16385  SupportedPlatform : Windows x64  Language : Deutsch (Deutschland)  ..  ————————– EXAMPLE 3 ————————–  PS C:\u0026gt;$p = Get-LHSPrinterDriver -ComputerName Server1 -DriverName “HP Universal Printing PCL 6 (v5.4)”  PS C:\u0026gt; $p.DependentFiles  PS C:\u0026gt; $p.DependentFiles  C:\\Windows\\system32\\spool\\DRIVERS\\x64\\3\\hpcui118.dll  C:\\Windows\\system32\\spool\\DRIVERS\\x64\\3\\hpcpe118.dll  C:\\Windows\\system32\\spool\\DRIVERS\\x64\\3\\hpcdmc64.dll  C:\\Windows\\system32\\spool\\DRIVERS\\x64\\3\\hpbcfgre.dll  C:\\Windows\\system32\\spool\\DRIVERS\\x64\\3\\hpcpu118.cfg  C:\\Windows\\system32\\spool\\DRIVERS\\x64\\3\\hpc6r118.dll  C:\\Windows\\system32\\spool\\DRIVERS\\x64\\3\\hpcsm118.gpd  .. Function Get-LHSPrinterDriver { \u003c# .SYNOPSIS Get Printer Driver Information from local or remote Computers. .DESCRIPTION Get Information about Printer Drivers (Driver Version,language, plattform and dependent files). .PARAMETER ComputerName The computer name(s) to retrieve the info from. Default to local Computer. .PARAMETER DriverName The driver name, support for wildcard '*'. .EXAMPLE PS C:\\\u003e Get-LHSPrinterDriver | Select * Outputs all Printer driver infos from local Computer Use Select * to see all properties. .EXAMPLE PS C:\\\u003e Get-LHSPrinterDriver -ComputerName Server1 -DriverName \"HP Universal Printing*\" ComputerName : Server1 DriverName : HP Universal Printing PS (v5.5.0) DriverVersion : 6.1.7600.16385 SupportedPlatform : Windows x64 Language : Deutsch (Deutschland) ComputerName : Server1 DriverName : HP Universal Printing PS (v5.4) DriverVersion : 6.1.7600.16385 SupportedPlatform : Windows x64 Language : Deutsch (Deutschland) .. .EXAMPLE PS C:\\\u003e $p = Get-LHSPrinterDriver -ComputerName Server1 -DriverName \"HP Universal Printing PCL 6 (v5.4)\" PS C:\\\u003e $p.DependentFiles PS C:\\\u003e $p.DependentFiles C:\\Windows\\system32\\spool\\DRIVERS\\x64\\3\\hpcui118.dll C:\\Windows\\system32\\spool\\DRIVERS\\x64\\3\\hpcpe118.dll C:\\Windows\\system32\\spool\\DRIVERS\\x64\\3\\hpcdmc64.dll C:\\Windows\\system32\\spool\\DRIVERS\\x64\\3\\hpbcfgre.dll C:\\Windows\\system32\\spool\\DRIVERS\\x64\\3\\hpcpu118.cfg C:\\Windows\\system32\\spool\\DRIVERS\\x64\\3\\hpc6r118.dll C:\\Windows\\system32\\spool\\DRIVERS\\x64\\3\\hpcsm118.gpd .. .INPUTS System.String, you can pipe ComputerNames to this Function .OUTPUTS Custom PSObjects containing the following properties: ComputerName : As String , default output DriverName : As String , default output DriverVersion : As String , default output SupportedPlatform : As String , default output Language : As String , default output ConfigFile : As String DataFile : As String DependentFiles : As String array SupportedPlatform : As String .NOTES AUTHOR: Pasquale Lantella LASTEDIT: KEYWORDS: .LINK win32_printerdriver #Requires -Version 2.0 #\u003e [cmdletbinding()] [OutputType('PSObject')] Param( [Parameter(Position=0,ValueFromPipeline=$True, HelpMessage='An array of computer names. The default is the local computer.')] [alias(\"CN\")] [string[]]$ComputerName = $Env:COMPUTERNAME, [Parameter(Position=1)] [string]$DriverName = \"*\" ) BEGIN { Set-StrictMode -Version Latest ${CmdletName} = $P","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/get-printer-driver-21b6ff23/get-printer-driver-21b6ff23/:2:0","tags":["Active Directory","HTML"],"title":"Get Printer Driver Information from local or remote Computers.","uri":"/printing/printer-ports-and-printer-drivers/get-printer-driver-21b6ff23/get-printer-driver-21b6ff23/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Get Printer Port IP’s and Open a Web Page to The Printer Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/get-printer-port-ips-and-32fe9e5f/get-printer-port-ips-and-32fe9e5f/:1:0","tags":["Active Directory","HTML"],"title":"Get Printer Port IP's and Open a Web Page to The Printer","uri":"/printing/printer-ports-and-printer-drivers/get-printer-port-ips-and-32fe9e5f/get-printer-port-ips-and-32fe9e5f/"},{"categories":["Printing"],"content":"Output from Technet Gallery This script find all port addresses that are on the print server that are alive, then opens that address in a web page. Beware, if you have a hundred printer ports, it will open 100 IE windows! Handy for opening a lot of print admin pages to change settings on the printers. This may save you time if you aren’t certain all the IP addresses of your printers on your network. I am not an expert scripter but this was fun and saved me a lot of time manually looking up port configurations and opening printer admin web pages… #set $printserver to be your print server host name $printserver= \"print-server-hostname\" #Get the port addresses using WMI commandlet, and loop through each one $Ports = Get-WmiObject Win32_TcpIpPrinterPort -computername $printserver foreach ($Port in $Ports) { # next line checks if the printer is actually up on the network and if so continues if (test-connection $port.hostaddress -count 1 -quiet) { #next line just lists the printer ip address on the screen $port.hostaddress #next three lines calls up IE, navigates to the web page, and makes it visible. $ie = New-Object -ComObject InternetExplorer.Application $ie.Navigate($port.hostaddress) $ie.Visible = $true } } ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/get-printer-port-ips-and-32fe9e5f/get-printer-port-ips-and-32fe9e5f/:2:0","tags":["Active Directory","HTML"],"title":"Get Printer Port IP's and Open a Web Page to The Printer","uri":"/printing/printer-ports-and-printer-drivers/get-printer-port-ips-and-32fe9e5f/get-printer-port-ips-and-32fe9e5f/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Get printer server users Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/get-printer-server-users-7bfc7b66/get-printer-server-users-7bfc7b66/:1:0","tags":["Active Directory","HTML"],"title":"Get printer server users","uri":"/printing/print-servers-print-queues-and-print-jobs/get-printer-server-users-7bfc7b66/get-printer-server-users-7bfc7b66/"},{"categories":["Printing"],"content":"Output from Technet Gallery The function creates a list of all users that have used specified printerservers. To be able to collect the events you need to log spooler information events. You can run it against multiple servers and use name or IP. Here´s an example how to use it: “Get-PrinterServerUsers -computername srv-print01, srv-print02 -days 90” This will collect all the users that have prited from a printer through the servers srv-print01 and srv-print02 the last 90 days, and export them to a textfile with the servername located at c:\\temp. http://powerhell.nu function Get-PrinterServerUsers { \u003c# .SYNOPSIS List all users that have printed from specified printerservers the last xxx days. .DESCRIPTION The function creates a list of all users that have used specified printerservers. To be able to collect the events you need to log spooler information events. .PARAMETER Computername A single computer name or an array of computer names. You may also provide IP addresses. .PARAMETER days The number of days from todays date you whant to list. .EXAMPLE Get-PrinterServerUsers -computername srv-print01, srv-print02 -days 90 Description ----------- This will collect all the users that have prited from a printer through the servers srv-print01 and srv-print02 the last 90 days, and export them to a textfile with the servername located at c:\\temp. .LINK http://Powerhell.nu .NOTES Function by Viktor Lindström v1.0 - 12/19/2014 #\u003e param( [parameter(mandatory=$true)] [array] $Computername, [parameter()] [int] $days ) $date = get-date $tempdir = \"c:\\temp\" #Check if directory c:\\temp exist, and if not create it. if ( -Not (Test-Path $tempdir)) { New-Item -Path $tempdir -ItemType Directory } foreach ($server in $computername) {Write-Host collecting users from $server $Duration = Measure-Command { $users = get-eventlog -ComputerName $server -LogName system -After $date.AddDays(-$days) | where {$_.eventID -eq 10} | select UserName $unique = $users | Sort-Object username | Get-Unique -AsString $unique | Export-Csv c:\\temp\\$server.txt -NoTypeInformation } Write-host \"$($Server) done in $($Duration.Minutes):$($Duration.Seconds) mm:ss\" } } ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/get-printer-server-users-7bfc7b66/get-printer-server-users-7bfc7b66/:2:0","tags":["Active Directory","HTML"],"title":"Get printer server users","uri":"/printing/print-servers-print-queues-and-print-jobs/get-printer-server-users-7bfc7b66/get-printer-server-users-7bfc7b66/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Get the Total Number of Printers Hosted on a Print Server (PowerShell) Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/get-the-total-number-of-f7fba679/get-the-total-number-of-f7fba679/:1:0","tags":["Active Directory","HTML"],"title":"Get the Total Number of Printers Hosted on a Print Server (PowerShell)","uri":"/printing/print-servers-print-queues-and-print-jobs/get-the-total-number-of-f7fba679/get-the-total-number-of-f7fba679/"},{"categories":["Printing"],"content":"Output from Technet Gallery Get the Total Number of Printers Hosted on a Print Server (PowerShell) ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/get-the-total-number-of-f7fba679/get-the-total-number-of-f7fba679/:2:0","tags":["Active Directory","HTML"],"title":"Get the Total Number of Printers Hosted on a Print Server (PowerShell)","uri":"/printing/print-servers-print-queues-and-print-jobs/get-the-total-number-of-f7fba679/get-the-total-number-of-f7fba679/"},{"categories":["Printing"],"content":"Introduction This sample can help you to get the total number of the printers hosted on your print Server by using PowerShell. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/get-the-total-number-of-f7fba679/get-the-total-number-of-f7fba679/:3:0","tags":["Active Directory","HTML"],"title":"Get the Total Number of Printers Hosted on a Print Server (PowerShell)","uri":"/printing/print-servers-print-queues-and-print-jobs/get-the-total-number-of-f7fba679/get-the-total-number-of-f7fba679/"},{"categories":["Printing"],"content":"**Scenario****s ** It is important to note that the primary limitation of the print server in this configuration is related to remote management and not the result of constraints imposed by the print server hardware or core spooler component. Specifically, when you are viewing and sorting columns in the Printers and Faxes folder, the Server may begin to experience delays if it is hosting more than 1,500 printers. You can run this script to get the total number of the printers hosted on your print Server. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/get-the-total-number-of-f7fba679/get-the-total-number-of-f7fba679/:4:0","tags":["Active Directory","HTML"],"title":"Get the Total Number of Printers Hosted on a Print Server (PowerShell)","uri":"/printing/print-servers-print-queues-and-print-jobs/get-the-total-number-of-f7fba679/get-the-total-number-of-f7fba679/"},{"categories":["Printing"],"content":"Script This script contains one advanced function: Measure-OSCPrinterCountTheServerHosted You can use this script in the following ways (You need run the script as administrator): Method 1: Download the script and copy it to your computer. Open the script file by using Notepad or any other script editors. Scroll down to the end of the script file, and then add the code to call the functions. Save the file and then run the script on the computer. Method 2: Rename scriptname.ps1 to scriptname.psm1 (PowerShell Module file) Run the Import-Module cmdlet to import this module file in PowerShell Console. Import-Module filepath*scriptname*.psm1 To obtain the detailed information about how to use the functions, run the following command to retrieve the help information: Get-Help functionName -detailed For example: Get-Help Measure- OSCPrinterCountTheServerHosted -detailed Here are some code snippets for your references. To get the complete script sample, please click the download button at the beginning of this page. $PrintSpoolerResources = Get-OSCAllPrintSpoolerResources If ($PrintSpoolerResources.Count -gt 0) { Foreach($Resourcein$PrintSpoolerResources){ $PrintsInCurrentResource = Get-Item-Path ` (-join(\"HKLM:\\Cluster\\Resources\\\", $Resource.ID,\"\\Printers\"))` -ErrorAction SilentlyContinue $PrinterCountTheServerHosted+= $PrintsInCurrentResource.SubKeyCount } } Else{ $PrintsInCurrentResource = Get-ChildItem-Path ` \"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Print\\Printers\"$PrinterCountTheServerHosted+= $PrintsInCurrentResource.Count } ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/get-the-total-number-of-f7fba679/get-the-total-number-of-f7fba679/:5:0","tags":["Active Directory","HTML"],"title":"Get the Total Number of Printers Hosted on a Print Server (PowerShell)","uri":"/printing/print-servers-print-queues-and-print-jobs/get-the-total-number-of-f7fba679/get-the-total-number-of-f7fba679/"},{"categories":["Printing"],"content":"Examples **Example 1: **Get the total number of the printers hosted on your print Server **Command: Measure-OSC****PrinterCountTheServerHosted Screenshot: ** ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/get-the-total-number-of-f7fba679/get-the-total-number-of-f7fba679/:6:0","tags":["Active Directory","HTML"],"title":"Get the Total Number of Printers Hosted on a Print Server (PowerShell)","uri":"/printing/print-servers-print-queues-and-print-jobs/get-the-total-number-of-f7fba679/get-the-total-number-of-f7fba679/"},{"categories":["Printing"],"content":"Prerequisites Windows PowerShell 2.0 Microsoft Windows Print Server ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/get-the-total-number-of-f7fba679/get-the-total-number-of-f7fba679/:7:0","tags":["Active Directory","HTML"],"title":"Get the Total Number of Printers Hosted on a Print Server (PowerShell)","uri":"/printing/print-servers-print-queues-and-print-jobs/get-the-total-number-of-f7fba679/get-the-total-number-of-f7fba679/"},{"categories":["Printing"],"content":"Additional Resources** ** Technical Resources: Windows Print Server Scalability and Sizing Reference System MSCluster_Resource class ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/get-the-total-number-of-f7fba679/get-the-total-number-of-f7fba679/:8:0","tags":["Active Directory","HTML"],"title":"Get the Total Number of Printers Hosted on a Print Server (PowerShell)","uri":"/printing/print-servers-print-queues-and-print-jobs/get-the-total-number-of-f7fba679/get-the-total-number-of-f7fba679/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Get the Total Number of Printers Hosted on a Print Server (VBScript) Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/get-the-total-number-of-62aaa322/get-the-total-number-of-62aaa322/:1:0","tags":["Active Directory","HTML"],"title":"Get the Total Number of Printers Hosted on a Print Server (VBScript)","uri":"/printing/print-servers-print-queues-and-print-jobs/get-the-total-number-of-62aaa322/get-the-total-number-of-62aaa322/"},{"categories":["Printing"],"content":"Output from Technet Gallery Get the Total Number of Printers Hosted on a Print Server (VBScript) ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/get-the-total-number-of-62aaa322/get-the-total-number-of-62aaa322/:2:0","tags":["Active Directory","HTML"],"title":"Get the Total Number of Printers Hosted on a Print Server (VBScript)","uri":"/printing/print-servers-print-queues-and-print-jobs/get-the-total-number-of-62aaa322/get-the-total-number-of-62aaa322/"},{"categories":["Printing"],"content":"Introduction This sample can help you to get the total number of the printers hosted on your print Server by using VBScript. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/get-the-total-number-of-62aaa322/get-the-total-number-of-62aaa322/:3:0","tags":["Active Directory","HTML"],"title":"Get the Total Number of Printers Hosted on a Print Server (VBScript)","uri":"/printing/print-servers-print-queues-and-print-jobs/get-the-total-number-of-62aaa322/get-the-total-number-of-62aaa322/"},{"categories":["Printing"],"content":"**Scenario****s ** It is important to note that the primary limitation of the print server in this configuration is related to remote management and not the result of constraints imposed by the print server hardware or core spooler component. Specifically, when you are viewing and sorting columns in the Printers and Faxes folder, the Server may begin to experience delays if it is hosting more than 1,500 printers. You can run this script to get the total number of the printers hosted on your print Server.** ** ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/get-the-total-number-of-62aaa322/get-the-total-number-of-62aaa322/:4:0","tags":["Active Directory","HTML"],"title":"Get the Total Number of Printers Hosted on a Print Server (VBScript)","uri":"/printing/print-servers-print-queues-and-print-jobs/get-the-total-number-of-62aaa322/get-the-total-number-of-62aaa322/"},{"categories":["Printing"],"content":"Script Step 1: Run “Command prompt” as Administrators. Step 2: Type the script path, and press “Enter”, it will show some message as following. Here are some code snippets for your references. To get the complete script sample, please click the download button at the beginning of this page. VB Script If ResourceType = \"Print Spooler\"ThenIf ResourceState = 2Then IsFailOverCluster = True oReg.EnumKey HKEY_LOCAL_MACHINE, \"Cluster\\Resources\\\" \u0026 subkey \u0026\"\\Printers\", arrSubKeys1 If arrSubKeys1 \u003c\u003e Null Then PinterCountTheServerHosted = PinterCountTheServerHosted + UBound(arrSubKeys1) + 1EndIfEndIfEndIf ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/get-the-total-number-of-62aaa322/get-the-total-number-of-62aaa322/:5:0","tags":["Active Directory","HTML"],"title":"Get the Total Number of Printers Hosted on a Print Server (VBScript)","uri":"/printing/print-servers-print-queues-and-print-jobs/get-the-total-number-of-62aaa322/get-the-total-number-of-62aaa322/"},{"categories":["Printing"],"content":"Prerequisites Microsoft Windows Print Server ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/get-the-total-number-of-62aaa322/get-the-total-number-of-62aaa322/:6:0","tags":["Active Directory","HTML"],"title":"Get the Total Number of Printers Hosted on a Print Server (VBScript)","uri":"/printing/print-servers-print-queues-and-print-jobs/get-the-total-number-of-62aaa322/get-the-total-number-of-62aaa322/"},{"categories":["Printing"],"content":"Additional Resources** ** Technical Resources: Windows Print Server Scalability and Sizing Reference System MSCluster_Resource class ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/get-the-total-number-of-62aaa322/get-the-total-number-of-62aaa322/:7:0","tags":["Active Directory","HTML"],"title":"Get the Total Number of Printers Hosted on a Print Server (VBScript)","uri":"/printing/print-servers-print-queues-and-print-jobs/get-the-total-number-of-62aaa322/get-the-total-number-of-62aaa322/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Get-PrinterDetails from Print Servers Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/get-printerdetails-from-94eec8c3/get-printerdetails-from-94eec8c3/:1:0","tags":["Active Directory","HTML"],"title":"Get-PrinterDetails from Print Servers","uri":"/printing/print-servers-print-queues-and-print-jobs/get-printerdetails-from-94eec8c3/get-printerdetails-from-94eec8c3/"},{"categories":["Printing"],"content":"Output from Technet Gallery Introduction In your server environments sometimes to get the details of printers on a print server people need to log-in to the print server, open MMC console, go to print management, add servers and then get to see the printer details. This is a Powershell script which is invoked by the batch file in the main folder does that all for you. Running the batch file would give a prompt asking for server name and credentials for the server. The output produced is a HTML file which opens right after the execution completes. How To Use Download the zip file Extract the contents. Run the .bat file “PrintServerDetails.bat” Enter Print Server name Enter Credentials (You must have administrative access) Wait for the script to do it’s magic. ScreenShots ____________________________________________________________________________________________________________________________________ Anupam Majhi ThePowershellKid majhi.anupam@hotmail.com ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/get-printerdetails-from-94eec8c3/get-printerdetails-from-94eec8c3/:2:0","tags":["Active Directory","HTML"],"title":"Get-PrinterDetails from Print Servers","uri":"/printing/print-servers-print-queues-and-print-jobs/get-printerdetails-from-94eec8c3/get-printerdetails-from-94eec8c3/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Get-PrinterDriverDetails Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/get-printerdriverdetails-c78d4e2b/get-printerdriverdetails-c78d4e2b/:1:0","tags":["Active Directory","HTML"],"title":"Get-PrinterDriverDetails","uri":"/printing/printer-ports-and-printer-drivers/get-printerdriverdetails-c78d4e2b/get-printerdriverdetails-c78d4e2b/"},{"categories":["Printing"],"content":"Output from Technet Gallery .SYNOPSIS  List printers, drivers by Architecture, driver mode available on print server, using gmi  .DESCRIPTION  Script is using 2 files  1. list of servers in FQDN or IP format - in script d:/servers.txt  2. Output CSV file - in script d:\\output.txt  .PARAMETER  No Parameters  .NOTES  Author : John Gakhokidze  Requires: PowerShell Version 2.0,  Version: 0.1 Alpha  DateUpdated: 01/24/2018  a. Itanium architecture is metioned as placeholder, I do not have access to Itanium to actually check, what is in driver name  .LINK  https://gallery.technet.microsoft.com/scriptcenter/Get-PrinterDriverDetails-c78d4e2b  .EXAMPLE  Get-PrinterDriverDetails  #\u003e function Get-PrinterDriverDetails{ \u003c# .SYNOPSIS List printers, drivers by Architecture, driver mode available on print server, using gmi .DESCRIPTION Script is using 2 files 1. list of servers in FQDN or IP format - in script d:/servers.txt 2. Output CSV file - in script d:\\output.txt .PARAMETER No Parameters .NOTES Author : John Gakhokidze Requires: PowerShell Version 2.0, Version: 0.1 Alpha DateUpdated: 01/24/2018 a. Itanium architecture is metioned as placeholder, I do not have access to Itanium to actually check, what is in driver name .LINK https://gallery.technet.microsoft.com/scriptcenter/Get-PrinterDriverDetails-c78d4e2b .EXAMPLE Get-PrinterDriverDetails #\u003e PARAM( ) BEGIN { $servers = get-content \"d:\\servers.txt\" $scanresult =\"d:\\output.txt\" Clear-Content -Path $scanresult $output=\"Server;Printer Name;Driver;Driver Mode;x64;x86;Itanium;\" Write-Output $output|Format-table |Out-file -FilePath $scanresult -Append $output='' $name = @{} # Driver name $mode = @{} # Driver mode $platform = @{} # Driver architecture } PROCESS { foreach ($Printserver in $servers){ $wmi_drivers=get-wmiobject Win32_PrinterDriver -Property Name -ComputerName $Printserver $Printers = Get-WmiObject Win32_Printer -ComputerName $Printserver $count=0 # Getting all printer drivers installed on server foreach ($driver in $wmi_drivers) { $name[$count],$mode[$count],$platform[$count] = $driver.Name -split ',' $count=$count+1 } $Scount=$name.Count # Getting printers and matching to drivers installed on server ForEach ($Printer in $Printers) { $count=0 $output='' $x64='' $x86='' $Itanium='' $GotDriver='' for ($count=0;$count -lt $Scount;$count++) { if ($Printer.DriverName -eq $name[$count]){ if (!$GotDriver){ $output=$Printserver+';'+$Printer.Name+\";\"+$name[$count]+\";\"+$mode[$count]+\";\" $GotDriver='TRUE' } switch ($platform[$count]){ {$platform[$count].Contains('x64')} {$x64=$platform[$count]} {$platform[$count].Contains('x86')} {$x86=$platform[$count]} {$platform[$count].Contains('Itanium')} {$Itanium=$platform[$count]} } } } $output=$output+$x64+';'+$x86+';'+$Itanium+';' Write-Output $output|Format-table |Out-file -FilePath $scanresult -Append } } } END { Write-Host \"Script completed\" } } ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/get-printerdriverdetails-c78d4e2b/get-printerdriverdetails-c78d4e2b/:2:0","tags":["Active Directory","HTML"],"title":"Get-PrinterDriverDetails","uri":"/printing/printer-ports-and-printer-drivers/get-printerdriverdetails-c78d4e2b/get-printerdriverdetails-c78d4e2b/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Get-PrintStatistics Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/get-printstatistics-a6bb8323/get-printstatistics-a6bb8323/:1:0","tags":["Active Directory","HTML"],"title":"Get-PrintStatistics","uri":"/printing/print-servers-print-queues-and-print-jobs/get-printstatistics-a6bb8323/get-printstatistics-a6bb8323/"},{"categories":["Printing"],"content":"Output from Technet Gallery Get-PrintStatistics queries a print server’s event log to gather information about all print jobs. This information includes what each workstation/user has printed, to which printer, how many pages, and how many copies. The reports are output in an easy to use CSV format. The PrintService Operational event log must be enabled on the print server to track printing events. This script will only be able to report on information gathered while that log is enabled. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/get-printstatistics-a6bb8323/get-printstatistics-a6bb8323/:2:0","tags":["Active Directory","HTML"],"title":"Get-PrintStatistics","uri":"/printing/print-servers-print-queues-and-print-jobs/get-printstatistics-a6bb8323/get-printstatistics-a6bb8323/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Heal The Project Calculation Service timeout problems Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/project-server/heal-the-calculation-782f6eee/heal-the-calculation-782f6eee/:1:0","tags":["Active Directory","HTML"],"title":"Heal The Project Calculation Service timeout problems","uri":"/project-server/heal-the-calculation-782f6eee/heal-the-calculation-782f6eee/"},{"categories":["Project Server"],"content":"Output from Technet Gallery One of the problems we encountered was timeout during an update of our projects from 2010 to 2016. Old cases need more time to be converted to the new format introduced in 2016. The Project Calculation Service does have a default timeout of five minutes. This means for the really long running processes, the timeout may occur before the action such as saving the project is finished. Here’s what you can do to both see the timeout setting and change it. 1. Open the SharePoint 2016 Management Shell (open as an administrator). 2. Type the following command: Get-SPProjectPCSSettings -ServiceApplication “\u003cthe name of your service application here\u003e” The results will appear similar to this: PS C:\\temp\u003e Get-SPProjectPCSSettings -ServiceApplication “project application service” MaximumIdleWorkersCount : 5 MaximumWorkersCount : 200 EditingSessionTimeout : 900000 MaximumSessionsPerUser : 25 CachePersistence : 604800000 MinimumMemoryRequired : 250000000 RequestTimeLimits : 300000 ResponseSizeLimits : 214748364 MaximumProjectSize : 2147483647 NetTcpPort : 16001 The number that we’re interested in is the RequestTimeLimits. In this example, it’s set to 300,000 milliseconds which is 300 seconds or five minutes. 3. To increase the limit, run: Set-SPProjectPCSSettings -ServiceApplication “\u003cthe name of your service application here\u003e” –RequestTimeLimits 600000 This will double the time limit. We still need to figure out the performance part, but this will prevent the random problems that are occurring because of the timeouts. ** ** ","date":"2019-12-01","objectID":"/project-server/heal-the-calculation-782f6eee/heal-the-calculation-782f6eee/:2:0","tags":["Active Directory","HTML"],"title":"Heal The Project Calculation Service timeout problems","uri":"/project-server/heal-the-calculation-782f6eee/heal-the-calculation-782f6eee/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL High Level Schedule Creation from top down estimates \u0026 plausible work contours Original Technet Description URL Description Download: [Download Link](Download\\High Level Schedule Creation.zip) ","date":"2019-12-01","objectID":"/project-server/high-level-schedule-39b7c280/high-level-schedule-39b7c280/:1:0","tags":["Active Directory","HTML"],"title":"High Level Schedule Creation from top down estimates \u0026 plausible work contours","uri":"/project-server/high-level-schedule-39b7c280/high-level-schedule-39b7c280/"},{"categories":["Project Server"],"content":"Output from Technet Gallery Picture this: You are handed a project charter, complete with a scope statement detailed enough to include top-down resource-level estimates of the work required to deliver the product. Your organization has also defined how much time any given resource can devote to projects to account for reserving time to “keeping the lights running”. You also know that there is some overhead associated with a long-running project such as some cross-functional working sessions, time it takes to get back to speed after being out of the office, and other incidental overages, so you would like to apply a standard overhead buffer. You also know that you will need to include some time for early life support. Your dilemma: how to schedule your project, based only on the above information, in ordnoteer to preserve your resource’s availability for your project. You know the general nature of how roles generally come onto and off the project, but figuring out durations is kind of an art… or is it? Enter Power Query. Using the below table and adjusting for the roles in your organization, % of time reserved for projects, and how the roles have their work contour… You hit refresh in Excel, and you end up with a table you can copy and paste directly into Project (fourth tab, “Scheduled) ","date":"2019-12-01","objectID":"/project-server/high-level-schedule-39b7c280/high-level-schedule-39b7c280/:2:0","tags":["Active Directory","HTML"],"title":"High Level Schedule Creation from top down estimates \u0026 plausible work contours","uri":"/project-server/high-level-schedule-39b7c280/high-level-schedule-39b7c280/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL How to Branding Project Server 2010(PWA) site with SharePoint Designer 2010 Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/project-server/how-to-branding-pwa-with-3f4c9a89/how-to-branding-pwa-with-3f4c9a89/:1:0","tags":["Active Directory","HTML"],"title":"How to Branding Project Server 2010(PWA) site  with SharePoint Designer 2010","uri":"/project-server/how-to-branding-pwa-with-3f4c9a89/how-to-branding-pwa-with-3f4c9a89/"},{"categories":["Project Server"],"content":"Output from Technet Gallery By default “PWA site has been configured to disallow editing with SharePoint Designer” required to do some configuration manualy. Removing the DisableWebDesignFeatures=\"wdfopensite” from ONET.xml of the PWA site which is at C:\\Program Files\\Common Files\\Microsoft Shared\\Web Server Extensions\\14\\TEMPLATE\\SiteTemplates\\PWA\\XML and do a iisreset. I guess if you can set the property of vti_disablewebdesignfeatures2 to null of the PWA web site using code or Powershell, that will work. During changeing master page you will get many problem with PWA site.Should be do some manulaly configuration with Web.config and Masterpage. Once I tried simply to change master page, just to change an image. First of all I found out the master page. Project Server 2010 uses v4.master master page for all application pages. When my changes were applied I uploaded back master page to the master page gallery. And I was surprised, now all PS pages showed me an error: “The base type ‘Microsoft.Office.Project.PWA.PJBaseWebPartPage’ is not allowed for this page. The type is not registered as safe”. I did rollback, but still got the same error. It was fixed by adding the following line to the web.config: \u003cSafeControl Assembly=\"Microsoft.Office.Project.Server.PWA, Version=14.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c” Namespace=\"Microsoft.Office.Project.PWA” TypeName=”*” Safe=\"True” /\u003e Atferwards, instead of getting the previous error I got the new one: “An error occurred during the processing of /PWA/default.aspx. Code blocks are not allowed in this file”. It happened because SharePoint disabled the ability to create the server-side scripts by default, so you had to turn it on. You are able to do that in the web.config file, in the configuration/SharePoint/PageParserPaths configuration section: \u003cPageParserPath VirtualPath=”/pwa/*” CompilationMode=\"Always” AllowServerSideScript=\"true” /\u003e But new error appeared: “The control type ‘Microsoft.Office.Project.PWA.CommonControls.PageProperty’ is not allowed on this page. The type is not registered as safe.” \u003cSafeControl Assembly=\"Microsoft.Office.Project.Server.PWA, Version=14.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c” Namespace=\"Microsoft.Office.Project.PWA.CommonControls” TypeName=”*” Safe=\"True” /\u003e ","date":"2019-12-01","objectID":"/project-server/how-to-branding-pwa-with-3f4c9a89/how-to-branding-pwa-with-3f4c9a89/:2:0","tags":["Active Directory","HTML"],"title":"How to Branding Project Server 2010(PWA) site  with SharePoint Designer 2010","uri":"/project-server/how-to-branding-pwa-with-3f4c9a89/how-to-branding-pwa-with-3f4c9a89/"},{"categories":["Printing"],"content":"Original Links Original Technet URL How to cancel and clear print jobs stuck in the print queu Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/client-side-printing/how-to-cancel-and-clear-d2966353/how-to-cancel-and-clear-d2966353/:1:0","tags":["Active Directory","HTML"],"title":"How to cancel and clear print jobs stuck in the print queu","uri":"/printing/client-side-printing/how-to-cancel-and-clear-d2966353/how-to-cancel-and-clear-d2966353/"},{"categories":["Printing"],"content":"Output from Technet Gallery How to cancel and clear print jobs stuck in the print queue using PowerShell** (PowerShell)** Introduction This PowerShell Script shows how to cancel print jobs stuck in the print queue. Scenarios Maybe you have ever run into the situation where you try to print something and nothing happens. There are a ton of reasons why a print job may not actually print, but one of the common causes is that the printer queue has a stuck print job. Sometimes you can manually go in and delete the print job, but sometimes you just can’t get rid of it. This script sample will show you how to clean up the legacy print jobs. Script Step1: To run the script in the Windows PowerShell Console**,** type the one command\u003c Script Path\u003e at the Windows PowerShell Console. For example, type C:\\Script\\CompactPSTInOutlook\\CompactPSTInOutlook.ps1 When the script finishes running, Windows PowerShell Console will display brief information about the script. Here are some code snippets for your references. If ($PSCmdlet.ShouldProcess(\"Cancel print job(s)\",\"Printer\")) { If($PrinterInfo) { Try { Write-Verbose \"Cancelling printer jobs.\" $PrinterInfo | Foreach{$_.CancelAllJobs()} Write-Host \"Successfully cancel print job(s).\" } Catch { Write-Host \"Failed to cancel print jobs stuck in the print queue.\" } } Else { Write-Host \"Cannot find any print jobs stuck in the print queue.\" } } ** ** Prerequisite Windows PowerShell 2.0 ","date":"2019-12-01","objectID":"/printing/client-side-printing/how-to-cancel-and-clear-d2966353/how-to-cancel-and-clear-d2966353/:2:0","tags":["Active Directory","HTML"],"title":"How to cancel and clear print jobs stuck in the print queu","uri":"/printing/client-side-printing/how-to-cancel-and-clear-d2966353/how-to-cancel-and-clear-d2966353/"},{"categories":["Printing"],"content":"Original Links Original Technet URL How to cancel and clear print jobs stuck in the print queu Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/how-to-cancel-and-clear-d6cc147d/how-to-cancel-and-clear-d6cc147d/:1:0","tags":["Active Directory","HTML"],"title":"How to cancel and clear print jobs stuck in the print queu","uri":"/printing/print-servers-print-queues-and-print-jobs/how-to-cancel-and-clear-d6cc147d/how-to-cancel-and-clear-d6cc147d/"},{"categories":["Printing"],"content":"Output from Technet Gallery How to cancel and clear print jobs stuck in the print queue using PowerShell** (VBScript)** Introduction This VBScript shows how to cancel print jobs stuck in the print queue. Scenarios Maybe you have ever run into the situation where you try to print something and nothing happens. There are a ton of reasons why a print job may not actually print, but one of the common causes is that the printer queue has a stuck print job. Sometimes you can manually go in and delete the print job, but sometimes you just can’t get rid of it. This script sample will show you how to clean up the legacy print jobs. Script Step1: Double-click CancelPrintJobs.vbs to run this VBScript sample. The step is shown in the following figure. The step is shown in the following figure. When the script finishes running, Windows PowerShell Console will display brief information about the script to let you know the execution result. Here are some code snippets for your references. VB Script Set objWMIService = GetObject(\"winmgmts:{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colPrintJobs = objWMIService.ExecQuery(\"select * from Win32_Printer where PrinterState=0 and PrinterStatus=6\") For Each objPrintJob in colPrintJobs ' cancel objPrintjob.CancelAllJobs() Next ** ** Prerequisite Windows 7 or higher version ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/how-to-cancel-and-clear-d6cc147d/how-to-cancel-and-clear-d6cc147d/:2:0","tags":["Active Directory","HTML"],"title":"How to cancel and clear print jobs stuck in the print queu","uri":"/printing/print-servers-print-queues-and-print-jobs/how-to-cancel-and-clear-d6cc147d/how-to-cancel-and-clear-d6cc147d/"},{"categories":["Printing"],"content":"Original Links Original Technet URL How to Clear Printing Subsystem (PowerShell) Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/client-side-printing/how-to-clear-printing-93eb5ebc/how-to-clear-printing-93eb5ebc/:1:0","tags":["Active Directory","HTML"],"title":"How to Clear Printing Subsystem (PowerShell)","uri":"/printing/client-side-printing/how-to-clear-printing-93eb5ebc/how-to-clear-printing-93eb5ebc/"},{"categories":["Printing"],"content":"Output from Technet Gallery How to Clear Printing Subsystem (PowerShell) ","date":"2019-12-01","objectID":"/printing/client-side-printing/how-to-clear-printing-93eb5ebc/how-to-clear-printing-93eb5ebc/:2:0","tags":["Active Directory","HTML"],"title":"How to Clear Printing Subsystem (PowerShell)","uri":"/printing/client-side-printing/how-to-clear-printing-93eb5ebc/how-to-clear-printing-93eb5ebc/"},{"categories":["Printing"],"content":"Introduction This script is used to clear Printing Subsystem. ","date":"2019-12-01","objectID":"/printing/client-side-printing/how-to-clear-printing-93eb5ebc/how-to-clear-printing-93eb5ebc/:3:0","tags":["Active Directory","HTML"],"title":"How to Clear Printing Subsystem (PowerShell)","uri":"/printing/client-side-printing/how-to-clear-printing-93eb5ebc/how-to-clear-printing-93eb5ebc/"},{"categories":["Printing"],"content":"Scenarios Generally, to clear existing printing related components, several steps are required. The steps can easily be followed on individual systems. However, if there are hundreds of computers in the domain and they have the same printing issue, it may be hard to resolve. The script can help domain administrators to clean the printing subsystem for multiple computers easily. ","date":"2019-12-01","objectID":"/printing/client-side-printing/how-to-clear-printing-93eb5ebc/how-to-clear-printing-93eb5ebc/:4:0","tags":["Active Directory","HTML"],"title":"How to Clear Printing Subsystem (PowerShell)","uri":"/printing/client-side-printing/how-to-clear-printing-93eb5ebc/how-to-clear-printing-93eb5ebc/"},{"categories":["Printing"],"content":"Script This script contains one advanced function, Repair-OSCPrinter, You can use this script in the following ways: Method 1: Download the script and open the script file with Notepad or any other script editors. Scroll down to the end of the script file, and then add the example command which you want to run. Save the file then run the script in PowerShell. Method 2: Rename scriptname.ps1 to scriptname.psm1 (PowerShell Module file) Run Import-Module cmdlet to import this module file.  Import-Module filepath*scriptname*.psm1 Here are some code snippets for your references. To get the complete script sample, please click the download button at the beginning of this page. #Stop spooler serviceif(Stop-Service-Name Spooler -Force -ErrorAction Stop ) { Write-Host \"Stoping the Spooler Service!\" } Write-Host \"Deleting old files and folders!\"#Delete files or foldersGet-ChildItem-Path \"C:\\Windows\\System32\\Spool\\Printers\"|Remove-ItemGet-ChildItem-Path \"C:\\Windows\\System32\\Spool\\Drivers\\w32x86\"|Remove-Item write-host \"Backup registry key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Print\\Environments\\Windows NT x86 as NTX86.REG\"#Back up registry key REG EXPORT \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Print\\Environments\\Windows NT x86\" NTX86.REG ","date":"2019-12-01","objectID":"/printing/client-side-printing/how-to-clear-printing-93eb5ebc/how-to-clear-printing-93eb5ebc/:5:0","tags":["Active Directory","HTML"],"title":"How to Clear Printing Subsystem (PowerShell)","uri":"/printing/client-side-printing/how-to-clear-printing-93eb5ebc/how-to-clear-printing-93eb5ebc/"},{"categories":["Printing"],"content":"Examples Example 1: Get help about Repair-OSCPrinter Command: Get-help Repair-OSCPrinter –Full Screenshot: Example 2: Clear the Printing Subsystem Command: Repair-OSCPrinter -FixPrinter Screenshot: Example 3: Restore the registry key Command: Repair-OSCPrinter -RestoreREG Screenshot: ","date":"2019-12-01","objectID":"/printing/client-side-printing/how-to-clear-printing-93eb5ebc/how-to-clear-printing-93eb5ebc/:6:0","tags":["Active Directory","HTML"],"title":"How to Clear Printing Subsystem (PowerShell)","uri":"/printing/client-side-printing/how-to-clear-printing-93eb5ebc/how-to-clear-printing-93eb5ebc/"},{"categories":["Printing"],"content":"Prerequisite Windows PowerShell 2.0 ","date":"2019-12-01","objectID":"/printing/client-side-printing/how-to-clear-printing-93eb5ebc/how-to-clear-printing-93eb5ebc/:7:0","tags":["Active Directory","HTML"],"title":"How to Clear Printing Subsystem (PowerShell)","uri":"/printing/client-side-printing/how-to-clear-printing-93eb5ebc/how-to-clear-printing-93eb5ebc/"},{"categories":["Printing"],"content":"Additional Resources **Technical Resource: **Problems adding network printers Can’t add printer. Print Spooler crashes. Error code 0x000006be ","date":"2019-12-01","objectID":"/printing/client-side-printing/how-to-clear-printing-93eb5ebc/how-to-clear-printing-93eb5ebc/:8:0","tags":["Active Directory","HTML"],"title":"How to Clear Printing Subsystem (PowerShell)","uri":"/printing/client-side-printing/how-to-clear-printing-93eb5ebc/how-to-clear-printing-93eb5ebc/"},{"categories":["Printing"],"content":"Original Links Original Technet URL How to Clear Printing Subsystem (VBScript) Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/client-side-printing/how-to-clear-printing-bf0a9fd0/how-to-clear-printing-bf0a9fd0/:1:0","tags":["Active Directory","HTML"],"title":"How to Clear Printing Subsystem (VBScript)","uri":"/printing/client-side-printing/how-to-clear-printing-bf0a9fd0/how-to-clear-printing-bf0a9fd0/"},{"categories":["Printing"],"content":"Output from Technet Gallery How to Clear Printing Subsystem (VBScript) ","date":"2019-12-01","objectID":"/printing/client-side-printing/how-to-clear-printing-bf0a9fd0/how-to-clear-printing-bf0a9fd0/:2:0","tags":["Active Directory","HTML"],"title":"How to Clear Printing Subsystem (VBScript)","uri":"/printing/client-side-printing/how-to-clear-printing-bf0a9fd0/how-to-clear-printing-bf0a9fd0/"},{"categories":["Printing"],"content":"Introduction This script is used to clear Printing Subsystem. ","date":"2019-12-01","objectID":"/printing/client-side-printing/how-to-clear-printing-bf0a9fd0/how-to-clear-printing-bf0a9fd0/:3:0","tags":["Active Directory","HTML"],"title":"How to Clear Printing Subsystem (VBScript)","uri":"/printing/client-side-printing/how-to-clear-printing-bf0a9fd0/how-to-clear-printing-bf0a9fd0/"},{"categories":["Printing"],"content":"Scenarios Generally, to clear existing printing related components, several steps are required. The steps can easily be followed on individual systems. However, if there are hundreds of computers in the domain and they have the same printing issue, it may be hard to resolve. The script can help domain administrators to clean the printing subsystem for multiple computers easily. ","date":"2019-12-01","objectID":"/printing/client-side-printing/how-to-clear-printing-bf0a9fd0/how-to-clear-printing-bf0a9fd0/:4:0","tags":["Active Directory","HTML"],"title":"How to Clear Printing Subsystem (VBScript)","uri":"/printing/client-side-printing/how-to-clear-printing-bf0a9fd0/how-to-clear-printing-bf0a9fd0/"},{"categories":["Printing"],"content":"Script **Step1: **Run “Command Prompt” as Administrator. **Step2: **Enter “Cscript.exe Scriptpath” in to the Prompt,and press Enter. For example: Cscript.exe “C: \\OneScript\\FixPrinter(VBScript)\\FixPrinter.vbs” It will show messages as the following. After the script executed, you can find two “.reg” files in the folder of the script. Those are the backup of the registry keys. Here are some code snippets for your references. To get the complete script sample, please click the download button at the beginning of this page. VB Script Sub main() Dim sExecutable sExecutable = LCase(Mid(Wscript.FullName, InstrRev(Wscript.FullName,\"\\\")+1)) If sExecutable \u003c\u003e \"cscript.exe\" Then wscript.echo \"Please run this script with cscript.exe\" Else Call FixPrinter End If End Sub ","date":"2019-12-01","objectID":"/printing/client-side-printing/how-to-clear-printing-bf0a9fd0/how-to-clear-printing-bf0a9fd0/:5:0","tags":["Active Directory","HTML"],"title":"How to Clear Printing Subsystem (VBScript)","uri":"/printing/client-side-printing/how-to-clear-printing-bf0a9fd0/how-to-clear-printing-bf0a9fd0/"},{"categories":["Printing"],"content":"Prerequisite Windows 7 or higher version ","date":"2019-12-01","objectID":"/printing/client-side-printing/how-to-clear-printing-bf0a9fd0/how-to-clear-printing-bf0a9fd0/:6:0","tags":["Active Directory","HTML"],"title":"How to Clear Printing Subsystem (VBScript)","uri":"/printing/client-side-printing/how-to-clear-printing-bf0a9fd0/how-to-clear-printing-bf0a9fd0/"},{"categories":["Printing"],"content":"Additional Resources **Technical Resource: **Problems adding network printers Can’t add printer. Print Spooler crashes. Error code 0x000006be ","date":"2019-12-01","objectID":"/printing/client-side-printing/how-to-clear-printing-bf0a9fd0/how-to-clear-printing-bf0a9fd0/:7:0","tags":["Active Directory","HTML"],"title":"How to Clear Printing Subsystem (VBScript)","uri":"/printing/client-side-printing/how-to-clear-printing-bf0a9fd0/how-to-clear-printing-bf0a9fd0/"},{"categories":["Printing"],"content":"Original Links Original Technet URL How to Fix HP Printer is Unable to Respond Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/how-to-fix-hp-printer-is-f6c0f5d0/how-to-fix-hp-printer-is-f6c0f5d0/:1:0","tags":["Active Directory","HTML"],"title":"How to Fix HP Printer is Unable to Respond","uri":"/printing/printer-ports-and-printer-drivers/how-to-fix-hp-printer-is-f6c0f5d0/how-to-fix-hp-printer-is-f6c0f5d0/"},{"categories":["Printing"],"content":"Output from Technet Gallery HP is one of the most preferred names in the world of printing devices. They are preferred because of their reliability, the quality of output it provides and is dependable when there is a large quantity of printing work. They have a variety of options to offer but this doesn’t prevent them from having technical errors. But there is a quick way to resolve all the HP printer’s issues by just calling on\rHp Customer Service Number. In such situations when your HP printer is not responding to your actions, you can follow the given troubleshooting tips: Firstly, restart all the devices such as a printer, computer, and the wireless router. Check the network connectivity of your device by printing a test page. Make sure the printer is properly connected to the computer through the USB cable. For wireless printers, it should be properly connected using a Wi-Fi network. If you don’t have access to a proper working connection, then it can also stop the printer from responding. Check your printer for paper jams as it can also bring the printer to a halt. Clear all the papers from the input tray and then try printing a test page. Clear all the pending jobs from the print queue and try completing them one at a time. Having so many pending printing tasks can also affect the working of the printer. It is also important to install the appropriate print driver for your device. The print driver should be compatible with your printing device as well as should be of the latest version. This will help in resolving the ‘unable to respond, issue with your printer. The printer you are using should be set as default printer otherwise it will not respond as per your actions. Check the ink cartridges for the ink level as it should not be very low which will result in no response from the printer. You can also try resetting the printer and then try connecting it and print a test page. Also, calling at HP Printer technical support number can also be useful for you as the technical executives can help you in resolving all the issues with your HP printer. all the technical complexities obstructing your work will be resolved after contacting our technical support team. They are experienced and well-trained in their job and are able to provide you unlimited solutions for a single HP issue. **visit here for more information: ** https://hphelpnumber.com ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/how-to-fix-hp-printer-is-f6c0f5d0/how-to-fix-hp-printer-is-f6c0f5d0/:2:0","tags":["Active Directory","HTML"],"title":"How to Fix HP Printer is Unable to Respond","uri":"/printing/printer-ports-and-printer-drivers/how-to-fix-hp-printer-is-f6c0f5d0/how-to-fix-hp-printer-is-f6c0f5d0/"},{"categories":["Printing"],"content":"Original Links Original Technet URL How to remove all network printers on a computer Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/how-to-remove-all-network-d3979e18/how-to-remove-all-network-d3979e18/:1:0","tags":["Active Directory","HTML"],"title":"How to remove all network printers on a computer","uri":"/printing/print-servers-print-queues-and-print-jobs/how-to-remove-all-network-d3979e18/how-to-remove-all-network-d3979e18/"},{"categories":["Printing"],"content":"Output from Technet Gallery ![](http://bit.ly/onescriptlogo) **Script to remove all network printers on a computer (VBScript)\r** **Introduction\r** This VBScript shows how to remove all network printers on a computer. **Scenarios\r** Remove all network printers is a frequently asked question in many public forums. **Script\r** **Step 1: **Double-click SetDesktopIE.vbs to run this VBScript sample.The step is shown in the following figure: When script finishes running, you will see something as shown in the following figure. However, if there is no network printer in your currently environment, it will not be shown. Here are some code snippets for your references: VB Script Set networkPrinters = objWMI.ExecQuery(\"Select * From Win32_Printer Where Network = true\") For Each networkPrinter in networkPrinters networkPrinter.Delete_ Next WScript.Echo \"Successfully deleted all network printers\" Prerequisite Windows 7 Microsoft All-In-One Script Framework is an automation script sample library for IT Professionals. The key value that All-In-One Script Framework is trying to deliver is Scenario-Focused Script Samples driven by IT Pros’ real-world pains and needs. The team is monitoring all TechNet forums, IT Pros’ support calls to Microsoft, and script requests submitted to TechNet Script Repository. We collect frequently asked IT scenarios, and create script samples to automate the tasks and save some time for IT Pros. The team of All-In-One Script Framework sincerely hope that these customer-driven automation script samples can help our IT community in this script-centric move. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/how-to-remove-all-network-d3979e18/how-to-remove-all-network-d3979e18/:2:0","tags":["Active Directory","HTML"],"title":"How to remove all network printers on a computer","uri":"/printing/print-servers-print-queues-and-print-jobs/how-to-remove-all-network-d3979e18/how-to-remove-all-network-d3979e18/"},{"categories":["Printing"],"content":"Original Links Original Technet URL How to remove all network printers on a computer Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/how-to-remove-all-network-f3816c96/how-to-remove-all-network-f3816c96/:1:0","tags":["Active Directory","HTML"],"title":"How to remove all network printers on a computer","uri":"/printing/print-servers-print-queues-and-print-jobs/how-to-remove-all-network-f3816c96/how-to-remove-all-network-f3816c96/"},{"categories":["Printing"],"content":"Output from Technet Gallery ![](http://bit.ly/onescriptlogo) **Script to remove all network printers on a computer (PowerShell)\r** **Introduction\r** This PowerShell script shows how to remove all network printers on a computer. **Scenarios\r** Remove all network printers is a frequently asked question in many public forums. Script Step1: Start the PowerShell Console with administrator. To run the script in the Windows PowerShell Console**,** type the one command\u003c Script Path\u003e at the Windows PowerShell Console. For example, type **C:\\Scripts\\RemoveAllNetworkPrinters.ps1\r** The step is shown in the following figure. Here are some code snippets for your references. Foreach($NetworkPrinter in $NetworkPrinters) { $NetworkPrinter.Delete() Write-Host \"Successfully deleted the network printer:\" + $NetworkPrinter.Name -ForegroundColor Green } Prerequisite Windows PowerShell 2.0 Windows 7 Microsoft All-In-One Script Framework is an automation script sample library for IT Professionals. The key value that All-In-One Script Framework is trying to deliver is Scenario-Focused Script Samples driven by IT Pros’ real-world pains and needs. The team is monitoring all TechNet forums, IT Pros’ support calls to Microsoft, and script requests submitted to TechNet Script Repository. We collect frequently asked IT scenarios, and create script samples to automate the tasks and save some time for IT Pros. The team of All-In-One Script Framework sincerely hope that these customer-driven automation script samples can help our IT community in this script-centric move. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/how-to-remove-all-network-f3816c96/how-to-remove-all-network-f3816c96/:2:0","tags":["Active Directory","HTML"],"title":"How to remove all network printers on a computer","uri":"/printing/print-servers-print-queues-and-print-jobs/how-to-remove-all-network-f3816c96/how-to-remove-all-network-f3816c96/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL How to track task progress based on the change (mutation) moment. Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/project-server/track-task-dates-based-on-2dedfe7c/track-task-dates-based-on-2dedfe7c/:1:0","tags":["Active Directory","HTML"],"title":"How to track task progress based on the change (mutation) moment.","uri":"/project-server/track-task-dates-based-on-2dedfe7c/track-task-dates-based-on-2dedfe7c/"},{"categories":["Project Server"],"content":"Output from Technet Gallery MS Project is one of the most advanced project planning systems. Nevertheless, consider this situation: a project manager asks you - how many tasks where completed today? you cannot answer this basis question out of the reporting database. Too crazy ? I know. Any task in MS Project has start and end dates. These are planning dates. In our application we needed to report actual finish date as the moment when the task ready % is set on 100%. To our surprise Microsoft haven even though about it. It is not possible to get datetime of the moment a task is actually finished out of the reporting database. I know you might say , there two other fields - actual start date and actual finish date. Because the resource can put there whatever , we find it is not actual but reported. We just want to know when the resource pushed the button ready for all task without any further questions or interactions from the user. I can think of many applications where this is very valuable information. For this purpose I designed a SQL server table and a query. You can run this query at any frequency you need. I just made sure that it is fast and does not impact performance. It is in production on a very large project server installation with \u003e 1 million tasks per year. In three staps we can implement this fantastic functionality. ","date":"2019-12-01","objectID":"/project-server/track-task-dates-based-on-2dedfe7c/track-task-dates-based-on-2dedfe7c/:2:0","tags":["Active Directory","HTML"],"title":"How to track task progress based on the change (mutation) moment.","uri":"/project-server/track-task-dates-based-on-2dedfe7c/track-task-dates-based-on-2dedfe7c/"},{"categories":["Project Server"],"content":"Step 1 First of all, you need to create a table where you will keep task selection. In this example we like to keep TaskStartDate, TaskFinishDate, TaskPercentWorkComplete. In fact the dates you can extend by something like Submitted because they are different. The table can be created in Reporting database for project \u003c2013 or in reporting schema for projects \u003e2010. SQL CREATE TABLE [dbo].[EPM_TaskStat]( [TaskUID] [uniqueidentifier] NOT NULL, [ResourceUID] [uniqueidentifier] NULL, [TaskStartDate] [datetime] NULL, [TaskFinishDate] [datetime] NULL, [TaskPercentWorkCompleted] [smallint] NULL, [CountStarted] [int] NULL, [CountFinished] [int] NULL, [DateCreated] [datetime] NULL, CONSTRAINT [PK_TaskStatus] PRIMARY KEY CLUSTERED ( [TaskUID] ASC )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 70) ON [PRIMARY] ) ON [PRIMARY] ","date":"2019-12-01","objectID":"/project-server/track-task-dates-based-on-2dedfe7c/track-task-dates-based-on-2dedfe7c/:3:0","tags":["Active Directory","HTML"],"title":"How to track task progress based on the change (mutation) moment.","uri":"/project-server/track-task-dates-based-on-2dedfe7c/track-task-dates-based-on-2dedfe7c/"},{"categories":["Project Server"],"content":"Step 2 Second, we need a query that will insert and upate tasks. SQL MERGE [dbo].[EPM_TaskStat] AS T USING [dbo].[EPM_TaskResourceView] AS S ON (T.TaskUID = S.TaskUID) WHEN NOT MATCHED BY TARGET AND S.[TaskPercentWorkCompleted]\u003e0 THEN INSERT([TaskUID], [TaskStartDate], [TaskFinishDate], [TaskPercentWorkCompleted],[CountStarted],[CountFinished],[ResourceUID]) VALUES(S.[TaskUID], getdate(),CASE WHEN S.TaskPercentWorkCompleted\u003c100 then null else getdate() END,S.TaskPercentWorkCompleted,1,CASE WHEN S.TaskPercentWorkCompleted=100 then 1 else 0 END,S.ResourceUID) WHEN MATCHED and T.TaskPercentWorkCompleted \u003c\u003e S.TaskPercentWorkCompleted THEN UPDATE SET T.TaskPercentWorkCompleted = S.TaskPercentWorkCompleted , T.TaskFinishDate = CASE WHEN T.TaskPercentWorkCompleted\u003c100 and S.TaskPercentWorkCompleted=100 THEN getdate() ELSE null END , T.CountFinished=CASE WHEN S.TaskPercentWorkCompleted=100 and T.TaskPercentWorkCompleted\u003c100 THEN 1 ELSE 0 END , T.TaskStartDate=CASE WHEN S.TaskPercentWorkCompleted=0 THEN '' END , T.CountStarted=CASE WHEN S.TaskPercentWorkCompleted=0 THEN 0 ELSE 1 END , T.ResourceUID=S.ResourceUID ; Notice that we insert new tasks only if something happend to them e.g. TaskPercentWorkCompleted is not 0. In this case we insert actual date() into TaskStartDate. TaskFinishDate is updated based on the percentage value. ","date":"2019-12-01","objectID":"/project-server/track-task-dates-based-on-2dedfe7c/track-task-dates-based-on-2dedfe7c/:4:0","tags":["Active Directory","HTML"],"title":"How to track task progress based on the change (mutation) moment.","uri":"/project-server/track-task-dates-based-on-2dedfe7c/track-task-dates-based-on-2dedfe7c/"},{"categories":["Project Server"],"content":"Step 3 The last step is to schedule an agent job that will call the merge query and you are good to go! Hope you like it, If you could rate the article it would be awesome. ","date":"2019-12-01","objectID":"/project-server/track-task-dates-based-on-2dedfe7c/track-task-dates-based-on-2dedfe7c/:5:0","tags":["Active Directory","HTML"],"title":"How to track task progress based on the change (mutation) moment.","uri":"/project-server/track-task-dates-based-on-2dedfe7c/track-task-dates-based-on-2dedfe7c/"},{"categories":["Printing"],"content":"Original Links Original Technet URL HP Laserjet 1020 – Excellent For Home And Business Us Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/hp-laserjet-1020-excellent-26d905ec/hp-laserjet-1020-excellent-26d905ec/:1:0","tags":["Active Directory","HTML"],"title":"HP Laserjet 1020 – Excellent For Home And Business Us","uri":"/printing/print-servers-print-queues-and-print-jobs/hp-laserjet-1020-excellent-26d905ec/hp-laserjet-1020-excellent-26d905ec/"},{"categories":["Printing"],"content":"Output from Technet Gallery The market for laserjet printers has grown rapidly in recent years, and the HP laserjet 1020 printer is a popular competitor in this market. Until recently, most businesses went for the cheaper color inkjet printers. It has become increasingly clear that the low up front price of these printers was more than offset by the high cost of refills, making their cost per sheet quite high. In addition, their slow printing speed compared unfavorably with laser printers. The price of laser printers has fallen considerably in the last few years, and they are now seen as a much better proposition for businesses. There are several reasons for this. Laser printers are quieter and more efficient than inkjets, and they print pages far faster. They also produce fewer problems when printing. Inkjets can keep throwing up unnecessary error messages when there is actually no problem, or the machine seems to go haywire suddenly and starts printing gibberish. However, the most impressive advantage of laser printers, including the Laserjet HP 1020; is they are more economic. Adding up the price of most printers, plus the price of the toner cartridge gives a printing cost of about 2-3 cents per page, at least six times less than that of an inkjet printer. Another advantage of laser printers is that it is much easier to obtain cheaper remanufactured or replacement toner cartridges, which brings the printing cost down even further. Many companies provide refill kits and compatible cartridges for laser printers, most of them being comparable in quality to the original. Replacement cartridges for inkjet printers do not work nearly as well, and are often awkward and messy to change. HP Laserjet printers are a leading brand of laser printer, and come in a wide variety of models, some of which are suitable for large business use. The monochrome HP Laserjet 1020 is not in fact a machine that would be considered adequate for the printing requirements of a larger business. It is really designed as a printer for a home office or a small business, and as such it is generally considered to do an excellent job. Its output of 15 sheets per minute is quite sufficient for such jobs as student dissertations, office reports and brochures, as well as letters and memos which are likely to be what it is most commonly used for. One feature that makes the HP Laserjet 1020 printer excellent for home or small office use is its compact design. At just over a foot long, and weighing just 11 pounds, the Laserjet 1020 HP will fit on most people’s desks, however cluttered they may be. It can even sit on a shelf or a bookcase, as the input and output trays are both at the front. The paper feeders can be folded in when not in use, making it even more compact. In addition, it is attractive to look at with its white sides and light gray top panel. The HP Laserjet 1020 is extremely simple to use, with just two status LEDs at the top as the only controls. It comes with a hard copy getting started guide. It also has a very user friendly CD-ROM with animated cartoon sequences. The printing capacity of the 1020 makes it perfectly adequate for use in a home office or small business according to http://www.bestqualityprinter.com. It has a 234 MHz processor, a 600 x 600 dpi resolution, and a 2MB memory capacity. There is also a FastRes mode, offering 1200 dpi, though some users say they cannot see any difference. The maximum monthly duty cycle of 5,000 sheets is not enough for large users, but makes it quite robust for its size. A useful feature of the HP Laserjet 1020 is its priority sheet tray for a single sheet of paper, in addition to its standard paper tray. The second paper feed also means you can feed in labels and envelopes, one at a time, without having to take the paper out of the paper tray. A drawback to some, however, is that there is no straight paper path for thicker media such as photo paper. The main paper tray holds 150 sheets, which is not enough","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/hp-laserjet-1020-excellent-26d905ec/hp-laserjet-1020-excellent-26d905ec/:2:0","tags":["Active Directory","HTML"],"title":"HP Laserjet 1020 – Excellent For Home And Business Us","uri":"/printing/print-servers-print-queues-and-print-jobs/hp-laserjet-1020-excellent-26d905ec/hp-laserjet-1020-excellent-26d905ec/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL imesheet Status Report: Table form including Not Yet Created status Original Technet Description URL Description Download: [Download Link](Download\\Timesheet Status Report.docx) ","date":"2019-12-01","objectID":"/project-server/timesheet-status-report-37b95da2/timesheet-status-report-37b95da2/:1:0","tags":["Active Directory","HTML"],"title":"imesheet Status Report: Table form including Not Yet Created status","uri":"/project-server/timesheet-status-report-37b95da2/timesheet-status-report-37b95da2/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This document will describe to you how to create a Timesheet Status Report in a filterable and sortable table format which include timesheets in a status of Not Yet Created… something Project Online reporting does not deliver. The report gathers the Not Yet Created criteria from the base capacity a resource have in a given week. Where they’re capacity is greater than 0, a timesheet would be required. Update: The original download included an auto-correct mistake in the “advanced editor code”. Case matters very much, but I didn’t catch that Word auto capitalized the “in” in the let…. in… statement. This is corrected in this version. ","date":"2019-12-01","objectID":"/project-server/timesheet-status-report-37b95da2/timesheet-status-report-37b95da2/:2:0","tags":["Active Directory","HTML"],"title":"imesheet Status Report: Table form including Not Yet Created status","uri":"/project-server/timesheet-status-report-37b95da2/timesheet-status-report-37b95da2/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Importance of a Logo for a Business Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/project-server/importance-of-a-logo-for-a-26889556/importance-of-a-logo-for-a-26889556/:1:0","tags":["Active Directory","HTML"],"title":"Importance of a Logo for a Business","uri":"/project-server/importance-of-a-logo-for-a-26889556/importance-of-a-logo-for-a-26889556/"},{"categories":["Project Server"],"content":"Output from Technet Gallery If you own a successful business and do not have a logo yet, your business must be in doubts for the future. A logo adds worth to your product or service. The old school strategies might have worked for your business for all these years but in the coming few years, they will not do any good to your business. The time is revolutionized and so do we humans need to. We need to adapt to the changes and become advanced in the race of technology and success. To make you understand the importance of a logo, these are a few points to ponder upon: Good logo means great first expression Have you ever heard that saying, “First impression is the last impression?” This is the same with your logo, the first impression is the last impression and you can never change the perception people had about you in the first place. Having an appealing logo would create a sophisticated and unique image of your company or firm. Your product can only be sold if your logo implies all the marketing strategies. A logo becomes your identity Do you imagine a person without a name? Or a painting without colors? None of us does! We need perfection in everything and that is okay because it is human nature to look for perfection. A logo adds perfection to your brand, it adds worth to your company. It is the color of your product/service and finally, it is the identity to your business. A logo creates the Brand Image Brand image is the most important thing for establishing customer loyalty and for developing sales of the company. Having a pleasing and distinctive logo brings both of these for you by adding brand value to your product. Once the brand value is developed, you will have a sustainable share of the market and you will have an increasing number of customers every day. A unique and distinctive logo makes you stand out from the crowd. Your logo makes you rank the highest among all of your rivals and establishes an impressive brand image for your product/services. You can always create a logo by using online logo creation tool. These tools are free, convenient and most of all, unique, just as your business. It is time to change your strategies and do something more appealing for your customers to provide with the most amazing experience ever. ","date":"2019-12-01","objectID":"/project-server/importance-of-a-logo-for-a-26889556/importance-of-a-logo-for-a-26889556/:2:0","tags":["Active Directory","HTML"],"title":"Importance of a Logo for a Business","uri":"/project-server/importance-of-a-logo-for-a-26889556/importance-of-a-logo-for-a-26889556/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Install a Network Printer Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/ce4b3b6d-046e-44eb-a5a0-319eb0c6a935/ce4b3b6d-046e-44eb-a5a0-319eb0c6a935/:1:0","tags":["Active Directory","HTML"],"title":"Install a Network Printer","uri":"/printing/printer-ports-and-printer-drivers/ce4b3b6d-046e-44eb-a5a0-319eb0c6a935/ce4b3b6d-046e-44eb-a5a0-319eb0c6a935/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **NeoCatalyst Installs a network printer. Use the /y parameter (rather than /n) to set the new printer as the default printer. Visual Basic rundll32 printui.dll,PrintUIEntry /ga /n\\\\servername\\printersharename net stop spooler net start spooler ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/ce4b3b6d-046e-44eb-a5a0-319eb0c6a935/ce4b3b6d-046e-44eb-a5a0-319eb0c6a935/:2:0","tags":["Active Directory","HTML"],"title":"Install a Network Printer","uri":"/printing/printer-ports-and-printer-drivers/ce4b3b6d-046e-44eb-a5a0-319eb0c6a935/ce4b3b6d-046e-44eb-a5a0-319eb0c6a935/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Install a New Default Printer Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/ea4bcf97-1ada-4f76-9f77-fc8ae0435bda/ea4bcf97-1ada-4f76-9f77-fc8ae0435bda/:1:0","tags":["Active Directory","HTML"],"title":"Install a New Default Printer","uri":"/printing/printer-ports-and-printer-drivers/ea4bcf97-1ada-4f76-9f77-fc8ae0435bda/ea4bcf97-1ada-4f76-9f77-fc8ae0435bda/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **Eric Hanson Installs a network printer on a workstation and makes that printer the default printer. Visual Basic on error resume next Const HKEY_CURRENT_USER = \u0026H80000001 strComputer = \".\" strPrinter = \"printerName\" strServer = \"serverName\" Set netPrinter = CreateObject(\"WScript.Network\") UNCpath = \"\\\\\" \u0026 strServer \u0026 \"\\\" \u0026 strPrinter netPrinter.AddWindowsPrinterConnection UNCpath wscript.sleep 2000 Set objReg = GetObject(\"winmgmts:{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 _ \"\\root\\default:StdRegProv\") strKeyPath = \"Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\" strEntryName = \"Device\" strValue = \"\\\\\" \u0026 strServer \u0026 \"\\\" \u0026 strPrinter \u0026 \",winspool,Ne04\" objReg.SetStringValue HKEY_CURRENT_USER, strKeyPath, strEntryName, strValue ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/ea4bcf97-1ada-4f76-9f77-fc8ae0435bda/ea4bcf97-1ada-4f76-9f77-fc8ae0435bda/:2:0","tags":["Active Directory","HTML"],"title":"Install a New Default Printer","uri":"/printing/printer-ports-and-printer-drivers/ea4bcf97-1ada-4f76-9f77-fc8ae0435bda/ea4bcf97-1ada-4f76-9f77-fc8ae0435bda/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Install a Printer Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/02ee2662-2f8c-4f86-9b77-e0cc6b2d231e/02ee2662-2f8c-4f86-9b77-e0cc6b2d231e/:1:0","tags":["Active Directory","HTML"],"title":"Install a Printer","uri":"/printing/print-servers-print-queues-and-print-jobs/02ee2662-2f8c-4f86-9b77-e0cc6b2d231e/02ee2662-2f8c-4f86-9b77-e0cc6b2d231e/"},{"categories":["Printing"],"content":"Output from Technet Gallery Installs a logical network printer on a print server. Visual Basic strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set objPrinter = objWMIService.Get(\"Win32_Printer\").SpawnInstance_ objPrinter.DriverName = \"HP LaserJet 4000 Series PS\" objPrinter.PortName = \"IP_169.254.110.160\" objPrinter.DeviceID = \"ScriptedPrinter\" objPrinter.Location = \"USA/Redmond/Building 37/Room 114\" objPrinter.Network = True objPrinter.Shared = True objPrinter.ShareName = \"ScriptedPrinter\" objPrinter.Put_ ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/02ee2662-2f8c-4f86-9b77-e0cc6b2d231e/02ee2662-2f8c-4f86-9b77-e0cc6b2d231e/:2:0","tags":["Active Directory","HTML"],"title":"Install a Printer","uri":"/printing/print-servers-print-queues-and-print-jobs/02ee2662-2f8c-4f86-9b77-e0cc6b2d231e/02ee2662-2f8c-4f86-9b77-e0cc6b2d231e/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Install a Printer Driver not Found in Drivers Cab Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/1aac6333-a794-48d3-b7da-46d87df56ee1/1aac6333-a794-48d3-b7da-46d87df56ee1/:1:0","tags":["Active Directory","HTML"],"title":"Install a Printer Driver not Found in Drivers Cab","uri":"/printing/printer-ports-and-printer-drivers/1aac6333-a794-48d3-b7da-46d87df56ee1/1aac6333-a794-48d3-b7da-46d87df56ee1/"},{"categories":["Printing"],"content":"Output from Technet Gallery Installs a hypothetical printer using a print driver not found in Drivers.cab. Visual Basic strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") objWMIService.Security_.Privileges.AddAsString \"SeLoadDriverPrivilege\", True Set objDriver = objWMIService.Get(\"Win32_PrinterDriver\") objDriver.Name = \"NewPrinter Model 2900\" objDriver.SupportedPlatform = \"Windows NT x86\" objDriver.Version = \"3\" objDriver.DriverPath = \"C:\\Scripts\\NewPrinter.dll\" objDriver.Infname = \"C:\\Scripts\\NewPrinter.inf\" intResult = objDriver.AddPrinterDriver(objDriver) ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/1aac6333-a794-48d3-b7da-46d87df56ee1/1aac6333-a794-48d3-b7da-46d87df56ee1/:2:0","tags":["Active Directory","HTML"],"title":"Install a Printer Driver not Found in Drivers Cab","uri":"/printing/printer-ports-and-printer-drivers/1aac6333-a794-48d3-b7da-46d87df56ee1/1aac6333-a794-48d3-b7da-46d87df56ee1/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Install a TCP/IP Printer Port and Printer Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/41a4c996-b7f7-4d58-808d-2acac20ddbf7/41a4c996-b7f7-4d58-808d-2acac20ddbf7/:1:0","tags":["Active Directory","HTML"],"title":"Install a TCP/IP Printer Port and Printer","uri":"/printing/printer-ports-and-printer-drivers/41a4c996-b7f7-4d58-808d-2acac20ddbf7/41a4c996-b7f7-4d58-808d-2acac20ddbf7/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **Gamer Installs a TCP/IP printer port, installs a printer, and then sets the printer to be default. As written the script installs a Brother printer, but you can substitute any printer driver as long as it’s in the driver cache. Visual Basic On Error Resume Next 'SETS 'LOAD DRIVER' PRIVILEGE. Set objWMIService = GetObject(\"Winmgmts:\") objWMIService.Security_.Privileges.AddAsString \"SeLoadDriverPrivilege\", True 'SETS PRINTER PORT. Set objNewPort = objWMIService.Get _ (\"Win32_TCPIPPrinterPort\").SpawnInstance_ objNewPort.Name = \"Brother\" objNewPort.Protocol = 1 objNewPort.HostAddress = \"192.168.100.7\" objNewPort.PortNumber = \"9100\" objNewPort.SNMPEnabled = False objNewPort.Put_ 'SETS PRINTER TO PORT. Set objPrinter = objWMIService.Get _ (\"Win32_Printer\").SpawnInstance_ objPrinter.DriverName = \"Brother HL-1270N\" objPrinter.PortName = \"Brother\" objPrinter.DeviceID = \"Brother HL-1270N\" objPrinter.Location = \"Front Office\" objPrinter.Network = True objPrinter.Shared = False 'objPrinter.ShareName = objPrinter.Put_ 'SETS PRINTER AS DEFAULT. Set colInstalledPrinters = objWMIService.ExecQuery _ (\"Select * from Win32_Printer Where Name = 'Brother HL-1270N'\") For Each objPrinter in colInstalledPrinters objPrinter.SetDefaultPrinter() next ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/41a4c996-b7f7-4d58-808d-2acac20ddbf7/41a4c996-b7f7-4d58-808d-2acac20ddbf7/:2:0","tags":["Active Directory","HTML"],"title":"Install a TCP/IP Printer Port and Printer","uri":"/printing/printer-ports-and-printer-drivers/41a4c996-b7f7-4d58-808d-2acac20ddbf7/41a4c996-b7f7-4d58-808d-2acac20ddbf7/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Install Multiple Printers for One Print Devi Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/440aa108-81e8-4673-a97c-d3322c97b6a6/440aa108-81e8-4673-a97c-d3322c97b6a6/:1:0","tags":["Active Directory","HTML"],"title":"Install Multiple Printers for One Print Devi","uri":"/printing/print-servers-print-queues-and-print-jobs/440aa108-81e8-4673-a97c-d3322c97b6a6/440aa108-81e8-4673-a97c-d3322c97b6a6/"},{"categories":["Printing"],"content":"Output from Technet Gallery Installs two logical network printers (with different printer priorities) for the same physical print device. Visual Basic strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set objPrinter = objWMIService.Get(\"Win32_Printer\").SpawnInstance_ objPrinter.DriverName = \"HP LaserJet 4000 Series PS\" objPrinter.PortName = \"IP_169.254.110.160\" objPrinter.DeviceID = \"PublicPrinter\" objPrinter.Location = \"USA/Redmond/Building 37/Room 114\" objPrinter.Network = True objPrinter.Shared = True objPrinter.ShareName = \"PublicPrinter\" objPrinter.Put_ objPrinter.DriverName = \"HP LaserJet 4000 Series PS\" objPrinter.PortName = \"IP_169.254.110.160\" objPrinter.DeviceID = \"PrivatePrinter\" objPrinter.Location = \"USA/Redmond/Building 37/Room 114\" objPrinter.Priority = 2 objPrinter.Network = True objPrinter.Shared = True objPrinter.Hidden = True objPrinter.ShareName = \"PrivatePrinter\" objPrinter.Put_ ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/440aa108-81e8-4673-a97c-d3322c97b6a6/440aa108-81e8-4673-a97c-d3322c97b6a6/:2:0","tags":["Active Directory","HTML"],"title":"Install Multiple Printers for One Print Devi","uri":"/printing/print-servers-print-queues-and-print-jobs/440aa108-81e8-4673-a97c-d3322c97b6a6/440aa108-81e8-4673-a97c-d3322c97b6a6/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Install Printer Drivers Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/61790f64-e98b-4f73-9518-2978979ccb49/61790f64-e98b-4f73-9518-2978979ccb49/:1:0","tags":["Active Directory","HTML"],"title":"Install Printer Drivers","uri":"/printing/printer-ports-and-printer-drivers/61790f64-e98b-4f73-9518-2978979ccb49/61790f64-e98b-4f73-9518-2978979ccb49/"},{"categories":["Printing"],"content":"Output from Technet Gallery Installs the printer driver for an Apple LaserWriter 8500 printer. Visual Basic strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set objDriver = objWMIService.Get(\"Win32_PrinterDriver\") objWMIService.Security_.Privileges.AddAsString \"SeLoadDriverPrivilege\", True objDriver.Name = \"Apple LaserWriter 8500\" objDriver.SupportedPlatform = \"Windows NT x86\" objDriver.Version = \"3\" errResult = objDriver.AddPrinterDriver(objDriver) ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/61790f64-e98b-4f73-9518-2978979ccb49/61790f64-e98b-4f73-9518-2978979ccb49/:2:0","tags":["Active Directory","HTML"],"title":"Install Printer Drivers","uri":"/printing/printer-ports-and-printer-drivers/61790f64-e98b-4f73-9518-2978979ccb49/61790f64-e98b-4f73-9518-2978979ccb49/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Install Printer Ports Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/5777dc6a-9783-43d7-ac8e-fd3bd739690c/5777dc6a-9783-43d7-ac8e-fd3bd739690c/:1:0","tags":["Active Directory","HTML"],"title":"Install Printer Ports","uri":"/printing/printer-ports-and-printer-drivers/5777dc6a-9783-43d7-ac8e-fd3bd739690c/5777dc6a-9783-43d7-ac8e-fd3bd739690c/"},{"categories":["Printing"],"content":"Output from Technet Gallery Installs a TCP/IP printer port on a computer. Visual Basic strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set objNewPort = objWMIService.Get _ (\"Win32_TCPIPPrinterPort\").SpawnInstance_ objNewPort.Name = \"IP_169.254.110.14\" objNewPort.Protocol = 1 objNewPort.HostAddress = \"169.254.110.14\" objNewPort.PortNumber = \"9999\" objNewPort.SNMPEnabled = False objNewPort.Put_ ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/5777dc6a-9783-43d7-ac8e-fd3bd739690c/5777dc6a-9783-43d7-ac8e-fd3bd739690c/:2:0","tags":["Active Directory","HTML"],"title":"Install Printer Ports","uri":"/printing/printer-ports-and-printer-drivers/5777dc6a-9783-43d7-ac8e-fd3bd739690c/5777dc6a-9783-43d7-ac8e-fd3bd739690c/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Interactive PS script adds TCP/IP port based, shared printer on 2012 R2 Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/interactive-ps-script-adds-fc250e9a/interactive-ps-script-adds-fc250e9a/:1:0","tags":["Active Directory","HTML"],"title":"Interactive PS script adds TCP/IP port based, shared printer on 2012 R2","uri":"/printing/print-servers-print-queues-and-print-jobs/interactive-ps-script-adds-fc250e9a/interactive-ps-script-adds-fc250e9a/"},{"categories":["Printing"],"content":"Output from Technet Gallery PrinterInstall.ps1 Interactive script to add a TCP/IP port based printer as a shared printer on Server 2012R2. Menu will ask user to pick Printer manufacturer and then a driver. Required Info: Printer Queue/Port name IP Address for printer ( Script will ping to verify IP is alive) Driver i.e Model Queries drivers and returns a distinct list of Manufacturers, based on that selection, then matching drivers for that manufacturer are displayed. Sample: Enter Printer Queue/Port Name: TEST9 Enter Printer IP Address: 10.108.14.161 Adding Queue: TEST9 with IP: 10.108.14.161 – Press Any key to continue or Ctrl-C to quit… Press Enter to continue…: VERBOSE: Adding new port TEST9 Select a Printer MFG to see drivers available: 1 - Brother 2 - Canon 3 - Gestetner 4 - HP 5 - KONICA MINOLTA 6 - LANIER 7 - Microsoft 8 - NRG 9 - RICOH 10 - SHARP 11 - ThinPrint Enter the number of the desired option: 9 Selected: RICOH 1 - RICOH Class Driver 2 - LAN-Fax M16 3 - RICOH LAN-Fax M16 4 - RICOH Aficio SP C820DN PCL 6 5 - RICOH Aficio MP C5000 PCL 6 6 - RICOH Aficio MP C4501 PCL 6 7 - RICOH Aficio MP C2550 PCL 6 8 - RICOH Aficio MP C2050 PCL 6 9 - RICOH Aficio MP 301 PCL 6 10 - RICOH Aficio MP 171 PCL 6 11 - RICOH Aficio 1075 PCL 6 Enter the number of the desired option: 10 Selected: RICOH Aficio MP 171 PCL 6 VERBOSE: Adding new printer TEST9 \u003c# PrinterInstall.ps1 Lien Mock 6/6/2016 Interactive script to add a TCP/IP port based printer as a shared printer on Server 2012R2. Menu will ask user to pick Printer manufacturer and then a driver Required Info: 1. Printer Queue/Port name 2. IP Address for printer ( Script will ping to verify IP is alive) 3. Driver i.e Model #\u003e function Get-MenuInput { param ( [Parameter (Mandatory = $true)] [array]$Array ) #Note how many objects are in the array. #Number of menu options $ArrayLength = $Array.Length # Write-Host \"Array LENGTH : $($ArrayLength)\" #Loop validates the users input #Print each option in the array with a numbered choice index Do { #Reset index $i = 1 #Write a line to the host for each item foreach ($item in $Array) { Write-host \"$i - $item\" $i++ #Increment the Choice Index } #Save choice as a variable $MenuChoice = Read-Host -Prompt 'Enter the number of the desired option' $MenuChoice = [convert]::ToInt32($MenuChoice, 10) } While ($MenuChoice -lt 1 -or $MenuChoice -gt $ArrayLength) #Decrease by 1 to match zero-based array $MenuChoice = $MenuChoice - 1 #Display the choice Write-Host \"Selected: $($Array[$MenuChoice])\" -ForegroundColor Green #Return the chosen option as a string $Array[$MenuChoice] } #END FUNCTION ### BEGIN # Get Printer Manufacturer into Array $MFGArray = Get-PrinterDriver | Select-Object -ExpandProperty Manufacturer | Sort -Unique # Get Name and IP interactively $PQ = Read-Host -Prompt \"Enter Printer Queue/Port Name\" $IPADDR = Read-Host -Prompt \"Enter Printer IP Address\" # [system.net.IPAddress]::TryParse($IPADDR,[ref]$null) #Test IP is \"LIVE\" IF (Test-Connection $IPADDR -Count 1 -Quiet) { Write-Host \" Adding Queue: $($PQ) with IP: $($IPADDR) -- \" -ForegroundColor Green Write-Host \"Press Any key to continue or Ctrl-C to quit...\" -ForegroundColor Yellow pause Try { $Qexist = Get-PrinterPort -Name $PQ -ErrorAction SilentlyContinue} # check if port Name exists Catch { $Qexist = $null} # If port does not exist, create it, else continue If($Qexist -eq $null) { Add-PrinterPort -Name $PQ -PrinterHostAddress $IPADDR -Verbose #-WHATIf #Write-Host \"Adding Port $($PQ)\" } Else { Write-Host \"Existing Queue found for $($PQ)\" } } #If IP is not live then script will EXIT Else { Write-Host \"Cannot PING IP: $($IPADDR)\" EXIT 1 } # Verify Port was created Try { $Qexist = Get-PrinterPort -Name $PQ -ErrorAction Stop} Catch { EXIT } #Add Printer Try { $Pexist = Get-Printer -Name $PQ -ErrorAction SilentlyContinue} # TEST if printer name exists Catch { $Pexist = $null } # If printer does not exist, create it, else continue If($Pexist -eq $null) { Write-Host \"Select a Printer MFG to se","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/interactive-ps-script-adds-fc250e9a/interactive-ps-script-adds-fc250e9a/:2:0","tags":["Active Directory","HTML"],"title":"Interactive PS script adds TCP/IP port based, shared printer on 2012 R2","uri":"/printing/print-servers-print-queues-and-print-jobs/interactive-ps-script-adds-fc250e9a/interactive-ps-script-adds-fc250e9a/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Keep Project Online data in sync with SharePoint lis Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/keep-online-data-in-sync-06a1bf8d/keep-online-data-in-sync-06a1bf8d/:1:0","tags":["Active Directory","HTML"],"title":"Keep Project Online data in sync with SharePoint lis","uri":"/project-server/keep-online-data-in-sync-06a1bf8d/keep-online-data-in-sync-06a1bf8d/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This PowerShell script will use the Project Reporting OData API to get all of the published projects in the Project Online PWA Site Collection, then for each project it will create / update a list item on the specified SharePoint list. The user setting up the script will need to update the source PWA instance URL, username, password and list name. The example script will need updating to meet the requirements for your PWA instance, see the blog post for details. The account will need access to the OData API in PWA and edit access to the target SharePoint list. The SharePoint list will also need to be created beforehand with the required columns. A code snippet can be seen below - full code in the download: #add SharePoint Online DLL - update the location if required $programFiles = [environment]::getfolderpath(\"programfiles\") add-type -Path $programFiles'\\SharePoint Online Management Shell\\Microsoft.Online.SharePoint.PowerShell\\Microsoft.SharePoint.Client.dll' #set the environment details $PWAInstanceURL = \"https://tenant.sharepoint.com/sites/pwa\" $username = \"admin@tenant.onmicrosoft.com\" $password = \"password\" $securePass = ConvertTo-SecureString $password -AsPlainText -Force #create the SharePoint list on the PWA site and add the correct columns based on the data required $listname = \"ProjectData\" $results1 = @() #set the Odata URL with the correct project fields needed, $url = $PWAInstanceURL + \"/_api/ProjectData/Projects()?`$Filter=ProjectType ne 7\u0026`$Select=ProjectId,ProjectName,ProjectPercentCompleted,ProjectOwnerName,ProjectDescription,ProjectStartDate,ProjectFinishDate,ProjectWorkspaceInternalUrl\u0026`$orderby=ProjectName\" #get all of the data from the OData URL while ($url){ For the script to work, the SharePoint Online client DLL is required for the SharePoint Online credentials class. A supporting blog post can be seen here: https://pwmather.wordpress.com/2018/03/01/projectonline-powershell-to-keep-ppm-data-in-sync-on-sharepoint-list-pmot-o365/ The script is provided “As is” with no warranties etc. ","date":"2019-12-01","objectID":"/project-server/keep-online-data-in-sync-06a1bf8d/keep-online-data-in-sync-06a1bf8d/:2:0","tags":["Active Directory","HTML"],"title":"Keep Project Online data in sync with SharePoint lis","uri":"/project-server/keep-online-data-in-sync-06a1bf8d/keep-online-data-in-sync-06a1bf8d/"},{"categories":["Printing"],"content":"Original Links Original Technet URL List All Published Printers Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/80a75a64-980f-414d-b084-01c83f6ce261/80a75a64-980f-414d-b084-01c83f6ce261/:1:0","tags":["Active Directory","HTML"],"title":"List All Published Printers","uri":"/printing/print-servers-print-queues-and-print-jobs/80a75a64-980f-414d-b084-01c83f6ce261/80a75a64-980f-414d-b084-01c83f6ce261/"},{"categories":["Printing"],"content":"Output from Technet Gallery Returns a list of all the printers published in Active Directory. Visual Basic Const ADS_SCOPE_SUBTREE = 2 Set objConnection = CreateObject(\"ADODB.Connection\") Set objCommand = CreateObject(\"ADODB.Command\") objConnection.Provider = \"ADsDSOObject\" objConnection.Open \"Active Directory Provider\" Set objCommand.ActiveConnection = objConnection objCommand.CommandText = \"Select printerName, serverName from \" _ \u0026 \" 'LDAP://DC=fabrikam,DC=com' where objectClass='printQueue'\" objCommand.Properties(\"Page Size\") = 1000 objCommand.Properties(\"Searchscope\") = ADS_SCOPE_SUBTREE Set objRecordSet = objCommand.Execute objRecordSet.MoveFirst Do Until objRecordSet.EOF Wscript.Echo \"Printer Name: \" \u0026 objRecordSet.Fields(\"printerName\").Value Wscript.Echo \"Server Name: \" \u0026 objRecordSet.Fields(\"serverName\").Value objRecordSet.MoveNext Loop ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/80a75a64-980f-414d-b084-01c83f6ce261/80a75a64-980f-414d-b084-01c83f6ce261/:2:0","tags":["Active Directory","HTML"],"title":"List All Published Printers","uri":"/printing/print-servers-print-queues-and-print-jobs/80a75a64-980f-414d-b084-01c83f6ce261/80a75a64-980f-414d-b084-01c83f6ce261/"},{"categories":["Printing"],"content":"Original Links Original Technet URL List Print Job Information Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/209b4bb5-e9e1-4f55-b104-fb541f90759a/209b4bb5-e9e1-4f55-b104-fb541f90759a/:1:0","tags":["Active Directory","HTML"],"title":"List Print Job Information","uri":"/printing/print-servers-print-queues-and-print-jobs/209b4bb5-e9e1-4f55-b104-fb541f90759a/209b4bb5-e9e1-4f55-b104-fb541f90759a/"},{"categories":["Printing"],"content":"Output from Technet Gallery Returns information for each print job on a computer. This script was tested using Python 2.2.2-224 for Microsoft Windows, available from ActiveState. Python import win32com.client strComputer = \".\" objWMIService = win32com.client.Dispatch(\"WbemScripting.SWbemLocator\") objSWbemServices = objWMIService.ConnectServer(strComputer,\"root\\cimv2\") colItems = objSWbemServices.ExecQuery(\"Select * from Win32_PrintJob\") for objItem in colItems: print \"Caption: \", objItem.Caption print \"Data Type: \", objItem.DataType print \"Description: \", objItem.Description print \"Document: \", objItem.Document print \"Driver Name: \", objItem.DriverName print \"Elapsed Time: \", objItem.ElapsedTime print \"Host Print Queue: \", objItem.HostPrintQueue print \"Install Date: \", objItem.InstallDate print \"Job Id: \", objItem.JobId print \"Job Status: \", objItem.JobStatus print \"Name: \", objItem.Name print \"Notify: \", objItem.Notify print \"Owner: \", objItem.Owner print \"Pages Printed: \", objItem.PagesPrinted print \"Parameters: \", objItem.Parameters print \"Print Processor: \", objItem.PrintProcessor print \"Priority: \", objItem.Priority print \"Size: \", objItem.Size print \"Start Time: \", objItem.StartTime print \"Status: \", objItem.Status print \"Status Mask: \", objItem.StatusMask print \"Time Submitted: \", objItem.TimeSubmitted print \"Total Pages: \", objItem.TotalPages print \"Until Time: \", objItem.UntilTime ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/209b4bb5-e9e1-4f55-b104-fb541f90759a/209b4bb5-e9e1-4f55-b104-fb541f90759a/:2:0","tags":["Active Directory","HTML"],"title":"List Print Job Information","uri":"/printing/print-servers-print-queues-and-print-jobs/209b4bb5-e9e1-4f55-b104-fb541f90759a/209b4bb5-e9e1-4f55-b104-fb541f90759a/"},{"categories":["Printing"],"content":"Original Links Original Technet URL List Print Job Information Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/21c354e5-c52a-45f5-99c7-12199ad52443/21c354e5-c52a-45f5-99c7-12199ad52443/:1:0","tags":["Active Directory","HTML"],"title":"List Print Job Information","uri":"/printing/print-servers-print-queues-and-print-jobs/21c354e5-c52a-45f5-99c7-12199ad52443/21c354e5-c52a-45f5-99c7-12199ad52443/"},{"categories":["Printing"],"content":"Output from Technet Gallery Returns information for each print job on a computer. This script requires both Windows PowerShell and the corresponding version of the .NET Framework. For more information on downloading these items see the Windows PowerShell download page (right). $strComputer = \".\" $colItems = get-wmiobject -class \"Win32_PrintJob\" -namespace \"root\\CIMV2\" ` -computername $strComputer foreach ($objItem in $colItems) { write-host \"Caption: \" $objItem.Caption write-host \"Data Type: \" $objItem.DataType write-host \"Description: \" $objItem.Description write-host \"Document: \" $objItem.Document write-host \"Driver Name: \" $objItem.DriverName write-host \"Elapsed Time: \" $objItem.ElapsedTime write-host \"Host Print Queue: \" $objItem.HostPrintQueue write-host \"Installation Date: \" $objItem.InstallDate write-host \"Job ID: \" $objItem.JobId write-host \"Job Status: \" $objItem.JobStatus write-host \"Name: \" $objItem.Name write-host \"Notify: \" $objItem.Notify write-host \"Owner: \" $objItem.Owner write-host \"Pages Printed: \" $objItem.PagesPrinted write-host \"Parameters: \" $objItem.Parameters write-host \"Print Processor: \" $objItem.PrintProcessor write-host \"Priority: \" $objItem.Priority write-host \"Size: \" $objItem.Size write-host \"Start Time: \" $objItem.StartTime write-host \"Status: \" $objItem.Status write-host \"Status Mask: \" $objItem.StatusMask write-host \"Time Submitted: \" $objItem.TimeSubmitted write-host \"Total Pages: \" $objItem.TotalPages write-host \"Until Time: \" $objItem.UntilTime write-host } ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/21c354e5-c52a-45f5-99c7-12199ad52443/21c354e5-c52a-45f5-99c7-12199ad52443/:2:0","tags":["Active Directory","HTML"],"title":"List Print Job Information","uri":"/printing/print-servers-print-queues-and-print-jobs/21c354e5-c52a-45f5-99c7-12199ad52443/21c354e5-c52a-45f5-99c7-12199ad52443/"},{"categories":["Printing"],"content":"Original Links Original Technet URL List Print Job Information Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/3d913b42-dfa1-4e25-9f24-a5efe5a9778b/3d913b42-dfa1-4e25-9f24-a5efe5a9778b/:1:0","tags":["Active Directory","HTML"],"title":"List Print Job Information","uri":"/printing/print-servers-print-queues-and-print-jobs/3d913b42-dfa1-4e25-9f24-a5efe5a9778b/3d913b42-dfa1-4e25-9f24-a5efe5a9778b/"},{"categories":["Printing"],"content":"Output from Technet Gallery Returns information for each print job on a computer. This script was tested using Perl 5.8.0.804 for Microsoft Windows, available from ActiveState. Perl use Win32::OLE('in'); use constant wbemFlagReturnImmediately =\u003e 0x10; use constant wbemFlagForwardOnly =\u003e 0x20; $computer = \".\"; $objWMIService = Win32::OLE-\u003eGetObject (\"winmgmts:\\\\\\\\$computer\\\\root\\\\CIMV2\") or die \"WMI connection failed.\\n\"; $colItems = $objWMIService-\u003eExecQuery (\"SELECT * FROM Win32_PrintJob\",\"WQL\",wbemFlagReturnImmediately | wbemFlagForwardOnly); foreach my $objItem (in $colItems) { print \"Caption: $objItem-\u003e{Caption}\\n\"; print \"Data Type: $objItem-\u003e{DataType}\\n\"; print \"Description: $objItem-\u003e{Description}\\n\"; print \"Document: $objItem-\u003e{Document}\\n\"; print \"Driver Name: $objItem-\u003e{DriverName}\\n\"; print \"Elapsed Time: $objItem-\u003e{ElapsedTime}\\n\"; print \"Host Print Queue: $objItem-\u003e{HostPrintQueue}\\n\"; print \"Install Date: $objItem-\u003e{InstallDate}\\n\"; print \"Job Id: $objItem-\u003e{JobId}\\n\"; print \"Job Status: $objItem-\u003e{JobStatus}\\n\"; print \"Name: $objItem-\u003e{Name}\\n\"; print \"Notify: $objItem-\u003e{Notify}\\n\"; print \"Owner: $objItem-\u003e{Owner}\\n\"; print \"Pages Printed: $objItem-\u003e{PagesPrinted}\\n\"; print \"Parameters: $objItem-\u003e{Parameters}\\n\"; print \"Print Processor: $objItem-\u003e{PrintProcessor}\\n\"; print \"Priority: $objItem-\u003e{Priority}\\n\"; print \"Size: $objItem-\u003e{Size}\\n\"; print \"Start Time: $objItem-\u003e{StartTime}\\n\"; print \"Status: $objItem-\u003e{Status}\\n\"; print \"Status Mask: $objItem-\u003e{StatusMask}\\n\"; print \"Time Submitted: $objItem-\u003e{TimeSubmitted}\\n\"; print \"Total Pages: $objItem-\u003e{TotalPages}\\n\"; print \"Until Time: $objItem-\u003e{UntilTime}\\n\"; print \"\\n\"; } ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/3d913b42-dfa1-4e25-9f24-a5efe5a9778b/3d913b42-dfa1-4e25-9f24-a5efe5a9778b/:2:0","tags":["Active Directory","HTML"],"title":"List Print Job Information","uri":"/printing/print-servers-print-queues-and-print-jobs/3d913b42-dfa1-4e25-9f24-a5efe5a9778b/3d913b42-dfa1-4e25-9f24-a5efe5a9778b/"},{"categories":["Printing"],"content":"Original Links Original Technet URL List Print Job Information Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/5cb483ba-1ca5-4b5f-835d-a972f361b004/5cb483ba-1ca5-4b5f-835d-a972f361b004/:1:0","tags":["Active Directory","HTML"],"title":"List Print Job Information","uri":"/printing/print-servers-print-queues-and-print-jobs/5cb483ba-1ca5-4b5f-835d-a972f361b004/5cb483ba-1ca5-4b5f-835d-a972f361b004/"},{"categories":["Printing"],"content":"Output from Technet Gallery Returns information for each print job on a computer. This script was tested using Object REXX 2.1.0 for Microsoft Windows, available from IBM. Object REXX strComputer = \".\" objWMIService = .OLEObject~GetObject(\"winmgmts:\\\\\"||strComputer||\"\\root\\CIMV2\") do objItem over objWMIService~ExecQuery(\"Select * from Win32_PrintJob\") say \"Caption:\" objItem~Caption say \"Data Type:\" objItem~DataType say \"Description:\" objItem~Description say \"Document:\" objItem~Document say \"Driver Name:\" objItem~DriverName say \"Elapsed Time:\" objItem~ElapsedTime say \"Host Print Queue:\" objItem~HostPrintQueue say \"Install Date:\" objItem~InstallDate say \"Job Id:\" objItem~JobId say \"Job Status:\" objItem~JobStatus say \"Name:\" objItem~Name say \"Notify:\" objItem~Notify say \"Owner:\" objItem~Owner say \"Pages Printed:\" objItem~PagesPrinted say \"Parameters:\" objItem~Parameters say \"Print Processor:\" objItem~PrintProcessor say \"Priority:\" objItem~Priority say \"Size:\" objItem~Size say \"Start Time:\" objItem~StartTime say \"Status:\" objItem~Status say \"Status Mask:\" objItem~StatusMask say \"Time Submitted:\" objItem~TimeSubmitted say \"Total Pages:\" objItem~TotalPages say \"Until Time:\" objItem~UntilTime end ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/5cb483ba-1ca5-4b5f-835d-a972f361b004/5cb483ba-1ca5-4b5f-835d-a972f361b004/:2:0","tags":["Active Directory","HTML"],"title":"List Print Job Information","uri":"/printing/print-servers-print-queues-and-print-jobs/5cb483ba-1ca5-4b5f-835d-a972f361b004/5cb483ba-1ca5-4b5f-835d-a972f361b004/"},{"categories":["Printing"],"content":"Original Links Original Technet URL List Print Job Information Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/e7d821f4-b817-4dc1-88ef-673370096ce6/e7d821f4-b817-4dc1-88ef-673370096ce6/:1:0","tags":["Active Directory","HTML"],"title":"List Print Job Information","uri":"/printing/print-servers-print-queues-and-print-jobs/e7d821f4-b817-4dc1-88ef-673370096ce6/e7d821f4-b817-4dc1-88ef-673370096ce6/"},{"categories":["Printing"],"content":"Output from Technet Gallery Returns information for each print job on a computer. This script was tested using Kixtart 2001 (412) for Microsoft Windows, available from Kixtart.org. Kixtart $strComputer = \".\" $objWMIService = GetObject(\"winmgmts:\\\\\"+ $strComputer + \"\\root\\cimv2\") $colItems = $objWMIService.ExecQuery(\"Select * from Win32_PrintJob\") For Each $objItem in $colItems ? \"Caption:\" + $objItem.Caption ? \"Data Type:\" + $objItem.DataType ? \"Description:\" + $objItem.Description ? \"Document:\" + $objItem.Document ? \"Driver Name:\" + $objItem.DriverName ? \"Elapsed Time:\" + $objItem.ElapsedTime ? \"Host Print Queue:\" + $objItem.HostPrintQueue ? \"Install Date:\" + $objItem.InstallDate ? \"Job Id:\" + $objItem.JobId ? \"Job Status:\" + $objItem.JobStatus ? \"Name:\" + $objItem.Name ? \"Notify:\" + $objItem.Notify ? \"Owner:\" + $objItem.Owner ? \"Pages Printed:\" + $objItem.PagesPrinted ? \"Parameters:\" + $objItem.Parameters ? \"Print Processor:\" + $objItem.PrintProcessor ? \"Priority:\" + $objItem.Priority ? \"Size:\" + $objItem.Size ? \"Start Time:\" + $objItem.StartTime ? \"Status:\" + $objItem.Status ? \"Status Mask:\" + $objItem.StatusMask ? \"Time Submitted:\" + $objItem.TimeSubmitted ? \"Total Pages:\" + $objItem.TotalPages ? \"Until Time:\" + $objItem.UntilTime Next ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/e7d821f4-b817-4dc1-88ef-673370096ce6/e7d821f4-b817-4dc1-88ef-673370096ce6/:2:0","tags":["Active Directory","HTML"],"title":"List Print Job Information","uri":"/printing/print-servers-print-queues-and-print-jobs/e7d821f4-b817-4dc1-88ef-673370096ce6/e7d821f4-b817-4dc1-88ef-673370096ce6/"},{"categories":["Printing"],"content":"Original Links Original Technet URL List Print Job Information Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/efc75ee2-8f24-468b-8c9f-36ac8d8ef98e/efc75ee2-8f24-468b-8c9f-36ac8d8ef98e/:1:0","tags":["Active Directory","HTML"],"title":"List Print Job Information","uri":"/printing/print-servers-print-queues-and-print-jobs/efc75ee2-8f24-468b-8c9f-36ac8d8ef98e/efc75ee2-8f24-468b-8c9f-36ac8d8ef98e/"},{"categories":["Printing"],"content":"Output from Technet Gallery Returns information for each print job on a computer. JavaScript var wbemFlagReturnImmediately = 0x10; var wbemFlagForwardOnly = 0x20; var objWMIService = GetObject(\"winmgmts:\\\\\\\\.\\\\root\\\\CIMV2\"); var colItems = objWMIService.ExecQuery(\"SELECT * FROM Win32_PrintJob\", \"WQL\", wbemFlagReturnImmediately | wbemFlagForwardOnly); var enumItems = new Enumerator(colItems); for (; !enumItems.atEnd(); enumItems.moveNext()) { var objItem = enumItems.item(); WScript.Echo(\"Caption: \" + objItem.Caption); WScript.Echo(\"Data Type: \" + objItem.DataType); WScript.Echo(\"Description: \" + objItem.Description); WScript.Echo(\"Document: \" + objItem.Document); WScript.Echo(\"Driver Name: \" + objItem.DriverName); WScript.Echo(\"Elapsed Time: \" + objItem.ElapsedTime); WScript.Echo(\"Host Print Queue: \" + objItem.HostPrintQueue); WScript.Echo(\"Install Date: \" + objItem.InstallDate); WScript.Echo(\"Job Id: \" + objItem.JobId); WScript.Echo(\"Job Status: \" + objItem.JobStatus); WScript.Echo(\"Name: \" + objItem.Name); WScript.Echo(\"Notify: \" + objItem.Notify); WScript.Echo(\"Owner: \" + objItem.Owner); WScript.Echo(\"Pages Printed: \" + objItem.PagesPrinted); WScript.Echo(\"Parameters: \" + objItem.Parameters); WScript.Echo(\"Print Processor: \" + objItem.PrintProcessor); WScript.Echo(\"Priority: \" + objItem.Priority); WScript.Echo(\"Size: \" + objItem.Size); WScript.Echo(\"Start Time: \" + objItem.StartTime); WScript.Echo(\"Status: \" + objItem.Status); WScript.Echo(\"Status Mask: \" + objItem.StatusMask); WScript.Echo(\"Time Submitted: \" + objItem.TimeSubmitted); WScript.Echo(\"Total Pages: \" + objItem.TotalPages); WScript.Echo(\"Until Time: \" + objItem.UntilTime); WScript.Echo(); } ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/efc75ee2-8f24-468b-8c9f-36ac8d8ef98e/efc75ee2-8f24-468b-8c9f-36ac8d8ef98e/:2:0","tags":["Active Directory","HTML"],"title":"List Print Job Information","uri":"/printing/print-servers-print-queues-and-print-jobs/efc75ee2-8f24-468b-8c9f-36ac8d8ef98e/efc75ee2-8f24-468b-8c9f-36ac8d8ef98e/"},{"categories":["Printing"],"content":"Original Links Original Technet URL List Print Queue Statistics Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/2f2ea17e-3f1b-4753-bfd1-d0400819a555/2f2ea17e-3f1b-4753-bfd1-d0400819a555/:1:0","tags":["Active Directory","HTML"],"title":"List Print Queue Statistics","uri":"/printing/print-servers-print-queues-and-print-jobs/2f2ea17e-3f1b-4753-bfd1-d0400819a555/2f2ea17e-3f1b-4753-bfd1-d0400819a555/"},{"categories":["Printing"],"content":"Output from Technet Gallery Returns total number of jobs, total number of pages, and largest job for all print queues on a computer. Visual Basic strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colPrintJobs = objWMIService.ExecQuery _ (\"Select * from Win32_PrintJob\") For Each objPrintJob in colPrintJobs intTotalJobs = intTotalJobs + 1 intTotalPages = intTotalPages + objPrintJob.TotalPages If objPrintJob.TotalPages \u003e intMaxPrintJob Then intMaxPrintJob = objPrintJob.TotalPages End If Next Wscript.Echo \"Total print jobs in queue: \" \u0026 intTotalJobs Wscript.Echo \"Total pages in queue: \" \u0026 intTotalPages Wscript.Echo \"Largest print job in queue: \" \u0026 intMaxPrintJob ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/2f2ea17e-3f1b-4753-bfd1-d0400819a555/2f2ea17e-3f1b-4753-bfd1-d0400819a555/:2:0","tags":["Active Directory","HTML"],"title":"List Print Queue Statistics","uri":"/printing/print-servers-print-queues-and-print-jobs/2f2ea17e-3f1b-4753-bfd1-d0400819a555/2f2ea17e-3f1b-4753-bfd1-d0400819a555/"},{"categories":["Printing"],"content":"Original Links Original Technet URL List Print Queue Statistics Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/5588f58e-891e-4f77-8c49-c6c4ff7fdd59/5588f58e-891e-4f77-8c49-c6c4ff7fdd59/:1:0","tags":["Active Directory","HTML"],"title":"List Print Queue Statistics","uri":"/printing/print-servers-print-queues-and-print-jobs/5588f58e-891e-4f77-8c49-c6c4ff7fdd59/5588f58e-891e-4f77-8c49-c6c4ff7fdd59/"},{"categories":["Printing"],"content":"Output from Technet Gallery Uses cooked performance counters to retrieve data such as total number of jobs printed and total number of printing errors for each print queue on a computer. Visual Basic strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colPrintQueues = objWMIService.ExecQuery _ (\"Select * from Win32_PerfFormattedData_Spooler_PrintQueue Where \" \u0026 _ \"Name \u003c\u003e '_Total'\") For Each objPrintQueue in colPrintQueues Wscript.Echo \"Name: \" \u0026 objPrintQueue.Name Wscript.Echo \"Jobs: \" \u0026 objPrintQueue.Jobs Wscript.Echo \"Current jobs spooling: \" \u0026 objPrintQueue.JobsSpooling Wscript.Echo \"Maximum jobs spooling: \" \u0026 objPrintQueue.MaxJobsSpooling Wscript.Echo \"Total jobs printed: \" \u0026 objPrintQueue.TotalJobsPrinted Wscript.Echo \"Job errors: \" \u0026 objPrintQueue.JobErrors Wscript.Echo \"Not ready errors: \" \u0026 objPrintQueue.NotReadyErrors Wscript.Echo \"Out of paper errors: \" \u0026 objPrintQueue.OutOfPaperErrors Next ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/5588f58e-891e-4f77-8c49-c6c4ff7fdd59/5588f58e-891e-4f77-8c49-c6c4ff7fdd59/:2:0","tags":["Active Directory","HTML"],"title":"List Print Queue Statistics","uri":"/printing/print-servers-print-queues-and-print-jobs/5588f58e-891e-4f77-8c49-c6c4ff7fdd59/5588f58e-891e-4f77-8c49-c6c4ff7fdd59/"},{"categories":["Printing"],"content":"Original Links Original Technet URL List Printer Capabilities Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/0328a52e-f461-4cb9-a2bc-af1d1072461f/0328a52e-f461-4cb9-a2bc-af1d1072461f/:1:0","tags":["Active Directory","HTML"],"title":"List Printer Capabilities","uri":"/printing/print-servers-print-queues-and-print-jobs/0328a52e-f461-4cb9-a2bc-af1d1072461f/0328a52e-f461-4cb9-a2bc-af1d1072461f/"},{"categories":["Printing"],"content":"Output from Technet Gallery Lists properties and capabilities for all the printers installed on a computer. This script was tested using Kixtart 2001 (412) for Microsoft Windows, available from Kixtart.org. Kixtart $strComputer = \".\" $objWMIService = GetObject(\"winmgmts:\\\\\"+ $strComputer + \"\\root\\cimv2\") $colItems = $objWMIService.ExecQuery(\"Select * from Win32_PrinterConfiguration\") For Each $objItem in $colItems ? \"Bits Per Pel:\" + $objItem.BitsPerPel ? \"Caption:\" + $objItem.Caption ? \"Collate:\" + $objItem.Collate ? \"Color:\" + $objItem.Color ? \"Copies:\" + $objItem.Copies ? \"Description:\" + $objItem.Description ? \"Device Name:\" + $objItem.DeviceName ? \"Display Flags:\" + $objItem.DisplayFlags ? \"Display Frequency:\" + $objItem.DisplayFrequency ? \"Dither Type:\" + $objItem.DitherType ? \"Driver Version:\" + $objItem.DriverVersion ? \"Duplex:\" + $objItem.Duplex ? \"Form Name:\" + $objItem.FormName ? \"Horizontal Resolution:\" + $objItem.HorizontalResolution ? \"ICM Intent:\" + $objItem.ICMIntent ? \"ICM Method:\" + $objItem.ICMMethod ? \"Log Pixels:\" + $objItem.LogPixels ? \"Media Type:\" + $objItem.MediaType ? \"Name:\" + $objItem.Name ? \"Orientation:\" + $objItem.Orientation ? \"Paper Length:\" + $objItem.PaperLength ? \"Paper Size:\" + $objItem.PaperSize ? \"Paper Width:\" + $objItem.PaperWidth ? \"Pels Height:\" + $objItem.PelsHeight ? \"Pels Width:\" + $objItem.PelsWidth ? \"Print Quality:\" + $objItem.PrintQuality ? \"Scale:\" + $objItem.Scale ? \"Setting ID:\" + $objItem.SettingID ? \"Specification Version:\" + $objItem.SpecificationVersion ? \"TT Option:\" + $objItem.TTOption ? \"Vertical Resolution:\" + $objItem.VerticalResolution ? \"X Resolution:\" + $objItem.XResolution ? \"Y Resolution:\" + $objItem.YResolution Next ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/0328a52e-f461-4cb9-a2bc-af1d1072461f/0328a52e-f461-4cb9-a2bc-af1d1072461f/:2:0","tags":["Active Directory","HTML"],"title":"List Printer Capabilities","uri":"/printing/print-servers-print-queues-and-print-jobs/0328a52e-f461-4cb9-a2bc-af1d1072461f/0328a52e-f461-4cb9-a2bc-af1d1072461f/"},{"categories":["Printing"],"content":"Original Links Original Technet URL List Printer Capabilities Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/213caa49-cbe2-44ed-919c-c101222beb00/213caa49-cbe2-44ed-919c-c101222beb00/:1:0","tags":["Active Directory","HTML"],"title":"List Printer Capabilities","uri":"/printing/print-servers-print-queues-and-print-jobs/213caa49-cbe2-44ed-919c-c101222beb00/213caa49-cbe2-44ed-919c-c101222beb00/"},{"categories":["Printing"],"content":"Output from Technet Gallery Lists properties and capabilities for all the printers installed on a computer. This script was tested using Object REXX 2.1.0 for Microsoft Windows, available from IBM. Object REXX strComputer = \".\" objWMIService = .OLEObject~GetObject(\"winmgmts:\\\\\"||strComputer||\"\\root\\CIMV2\") do objItem over objWMIService~ExecQuery(\"Select * from Win32_PrinterConfiguration\") say \"Bits Per Pel:\" objItem~BitsPerPel say \"Caption:\" objItem~Caption say \"Collate:\" objItem~Collate say \"Color:\" objItem~Color say \"Copies:\" objItem~Copies say \"Description:\" objItem~Description say \"Device Name:\" objItem~DeviceName say \"Display Flags:\" objItem~DisplayFlags say \"Display Frequency:\" objItem~DisplayFrequency say \"Dither Type:\" objItem~DitherType say \"Driver Version:\" objItem~DriverVersion say \"Duplex:\" objItem~Duplex say \"Form Name:\" objItem~FormName say \"Horizontal Resolution:\" objItem~HorizontalResolution say \"ICM Intent:\" objItem~ICMIntent say \"ICM Method:\" objItem~ICMMethod say \"Log Pixels:\" objItem~LogPixels say \"Media Type:\" objItem~MediaType say \"Name:\" objItem~Name say \"Orientation:\" objItem~Orientation say \"Paper Length:\" objItem~PaperLength say \"Paper Size:\" objItem~PaperSize say \"Paper Width:\" objItem~PaperWidth say \"Pels Height:\" objItem~PelsHeight say \"Pels Width:\" objItem~PelsWidth say \"Print Quality:\" objItem~PrintQuality say \"Scale:\" objItem~Scale say \"Setting ID:\" objItem~SettingID say \"Specification Version:\" objItem~SpecificationVersion say \"TT Option:\" objItem~TTOption say \"Vertical Resolution:\" objItem~VerticalResolution say \"X Resolution:\" objItem~XResolution say \"Y Resolution:\" objItem~YResolution end ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/213caa49-cbe2-44ed-919c-c101222beb00/213caa49-cbe2-44ed-919c-c101222beb00/:2:0","tags":["Active Directory","HTML"],"title":"List Printer Capabilities","uri":"/printing/print-servers-print-queues-and-print-jobs/213caa49-cbe2-44ed-919c-c101222beb00/213caa49-cbe2-44ed-919c-c101222beb00/"},{"categories":["Printing"],"content":"Original Links Original Technet URL List Printer Capabilities Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/7761fbca-8d74-4b5e-8cd5-4ca9c83d1408/7761fbca-8d74-4b5e-8cd5-4ca9c83d1408/:1:0","tags":["Active Directory","HTML"],"title":"List Printer Capabilities","uri":"/printing/print-servers-print-queues-and-print-jobs/7761fbca-8d74-4b5e-8cd5-4ca9c83d1408/7761fbca-8d74-4b5e-8cd5-4ca9c83d1408/"},{"categories":["Printing"],"content":"Output from Technet Gallery Lists properties and capabilities for all the printers installed on a computer. This script was tested using Perl 5.8.0.804 for Microsoft Windows, available from ActiveState. Perl use Win32::OLE('in'); use constant wbemFlagReturnImmediately =\u003e 0x10; use constant wbemFlagForwardOnly =\u003e 0x20; $computer = \".\"; $objWMIService = Win32::OLE-\u003eGetObject (\"winmgmts:\\\\\\\\$computer\\\\root\\\\CIMV2\") or die \"WMI connection failed.\\n\"; $colItems = $objWMIService-\u003eExecQuery (\"SELECT * FROM Win32_PrinterConfiguration\",\"WQL\",wbemFlagReturnImmediately | wbemFlagForwardOnly); foreach my $objItem (in $colItems) { print \"Bits Per Pel: $objItem-\u003e{BitsPerPel}\\n\"; print \"Caption: $objItem-\u003e{Caption}\\n\"; print \"Collate: $objItem-\u003e{Collate}\\n\"; print \"Color: $objItem-\u003e{Color}\\n\"; print \"Copies: $objItem-\u003e{Copies}\\n\"; print \"Description: $objItem-\u003e{Description}\\n\"; print \"Device Name: $objItem-\u003e{DeviceName}\\n\"; print \"Display Flags: $objItem-\u003e{DisplayFlags}\\n\"; print \"Display Frequency: $objItem-\u003e{DisplayFrequency}\\n\"; print \"Dither Type: $objItem-\u003e{DitherType}\\n\"; print \"Driver Version: $objItem-\u003e{DriverVersion}\\n\"; print \"Duplex: $objItem-\u003e{Duplex}\\n\"; print \"Form Name: $objItem-\u003e{FormName}\\n\"; print \"Horizontal Resolution: $objItem-\u003e{HorizontalResolution}\\n\"; print \"ICM Intent: $objItem-\u003e{ICMIntent}\\n\"; print \"ICM Method: $objItem-\u003e{ICMMethod}\\n\"; print \"Log Pixels: $objItem-\u003e{LogPixels}\\n\"; print \"Media Type: $objItem-\u003e{MediaType}\\n\"; print \"Name: $objItem-\u003e{Name}\\n\"; print \"Orientation: $objItem-\u003e{Orientation}\\n\"; print \"Paper Length: $objItem-\u003e{PaperLength}\\n\"; print \"Paper Size: $objItem-\u003e{PaperSize}\\n\"; print \"Paper Width: $objItem-\u003e{PaperWidth}\\n\"; print \"Pels Height: $objItem-\u003e{PelsHeight}\\n\"; print \"Pels Width: $objItem-\u003e{PelsWidth}\\n\"; print \"Print Quality: $objItem-\u003e{PrintQuality}\\n\"; print \"Scale: $objItem-\u003e{Scale}\\n\"; print \"Setting ID: $objItem-\u003e{SettingID}\\n\"; print \"Specification Version: $objItem-\u003e{SpecificationVersion}\\n\"; print \"TT Option: $objItem-\u003e{TTOption}\\n\"; print \"Vertical Resolution: $objItem-\u003e{VerticalResolution}\\n\"; print \"X Resolution: $objItem-\u003e{XResolution}\\n\"; print \"Y Resolution: $objItem-\u003e{YResolution}\\n\"; print \"\\n\"; } ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/7761fbca-8d74-4b5e-8cd5-4ca9c83d1408/7761fbca-8d74-4b5e-8cd5-4ca9c83d1408/:2:0","tags":["Active Directory","HTML"],"title":"List Printer Capabilities","uri":"/printing/print-servers-print-queues-and-print-jobs/7761fbca-8d74-4b5e-8cd5-4ca9c83d1408/7761fbca-8d74-4b5e-8cd5-4ca9c83d1408/"},{"categories":["Printing"],"content":"Original Links Original Technet URL List Printer Capabilities Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/7d6f7a40-1612-4e53-9c5d-7d7b3c36062d/7d6f7a40-1612-4e53-9c5d-7d7b3c36062d/:1:0","tags":["Active Directory","HTML"],"title":"List Printer Capabilities","uri":"/printing/print-servers-print-queues-and-print-jobs/7d6f7a40-1612-4e53-9c5d-7d7b3c36062d/7d6f7a40-1612-4e53-9c5d-7d7b3c36062d/"},{"categories":["Printing"],"content":"Output from Technet Gallery Lists properties and capabilities for all the printers installed on a computer. This script was tested using Python 2.2.2-224 for Microsoft Windows, available from ActiveState. Python import win32com.client strComputer = \".\" objWMIService = win32com.client.Dispatch(\"WbemScripting.SWbemLocator\") objSWbemServices = objWMIService.ConnectServer(strComputer,\"root\\cimv2\") colItems = objSWbemServices.ExecQuery(\"Select * from Win32_PrinterConfiguration\") for objItem in colItems: print \"Bits Per Pel: \", objItem.BitsPerPel print \"Caption: \", objItem.Caption print \"Collate: \", objItem.Collate print \"Color: \", objItem.Color print \"Copies: \", objItem.Copies print \"Description: \", objItem.Description print \"Device Name: \", objItem.DeviceName print \"Display Flags: \", objItem.DisplayFlags print \"Display Frequency: \", objItem.DisplayFrequency print \"Dither Type: \", objItem.DitherType print \"Driver Version: \", objItem.DriverVersion print \"Duplex: \", objItem.Duplex print \"Form Name: \", objItem.FormName print \"Horizontal Resolution: \", objItem.HorizontalResolution print \"ICM Intent: \", objItem.ICMIntent print \"ICM Method: \", objItem.ICMMethod print \"Log Pixels: \", objItem.LogPixels print \"Media Type: \", objItem.MediaType print \"Name: \", objItem.Name print \"Orientation: \", objItem.Orientation print \"Paper Length: \", objItem.PaperLength print \"Paper Size: \", objItem.PaperSize print \"Paper Width: \", objItem.PaperWidth print \"Pels Height: \", objItem.PelsHeight print \"Pels Width: \", objItem.PelsWidth print \"Print Quality: \", objItem.PrintQuality print \"Scale: \", objItem.Scale print \"Setting ID: \", objItem.SettingID print \"Specification Version: \", objItem.SpecificationVersion print \"TT Option: \", objItem.TTOption print \"Vertical Resolution: \", objItem.VerticalResolution print \"X Resolution: \", objItem.XResolution print \"Y Resolution: \", objItem.YResolution ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/7d6f7a40-1612-4e53-9c5d-7d7b3c36062d/7d6f7a40-1612-4e53-9c5d-7d7b3c36062d/:2:0","tags":["Active Directory","HTML"],"title":"List Printer Capabilities","uri":"/printing/print-servers-print-queues-and-print-jobs/7d6f7a40-1612-4e53-9c5d-7d7b3c36062d/7d6f7a40-1612-4e53-9c5d-7d7b3c36062d/"},{"categories":["Printing"],"content":"Original Links Original Technet URL List Printer Capabilities Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/83421975-55ee-453e-8834-d2540a1ae35f/83421975-55ee-453e-8834-d2540a1ae35f/:1:0","tags":["Active Directory","HTML"],"title":"List Printer Capabilities","uri":"/printing/print-servers-print-queues-and-print-jobs/83421975-55ee-453e-8834-d2540a1ae35f/83421975-55ee-453e-8834-d2540a1ae35f/"},{"categories":["Printing"],"content":"Output from Technet Gallery Lists properties and capabilities for all the printers installed on a computer. Visual Basic strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colInstalledPrinters = objWMIService.ExecQuery _ (\"Select * from Win32_PrinterConfiguration\") For Each objPrinter in colInstalledPrinters Wscript.Echo \"Name: \" \u0026 objPrinter.Name Wscript.Echo \"Collate: \" \u0026 objPrinter.Collate Wscript.Echo \"Copies: \" \u0026 objPrinter.Copies Wscript.Echo \"Driver Version: \" \u0026 objPrinter.DriverVersion Wscript.Echo \"Duplex: \" \u0026 objPrinter.Duplex Wscript.Echo \"Horizontal Resolution: \" \u0026 _ objPrinter.HorizontalResolution If objPrinter.Orientation = 1 Then strOrientation = \"Portrait\" Else strOrientation = \"Landscape\" End If Wscript.Echo \"Orientation : \" \u0026 strOrientation Wscript.Echo \"Paper Length: \" \u0026 objPrinter.PaperLength / 254 Wscript.Echo \"Paper Width: \" \u0026 objPrinter.PaperWidth / 254 Wscript.Echo \"Print Quality: \" \u0026 objPrinter.PrintQuality Wscript.Echo \"Scale: \" \u0026 objPrinter.Scale Wscript.Echo \"Specification Version: \" \u0026 _ objPrinter.SpecificationVersion If objPrinter.TTOption = 1 Then strTTOption = \"Print TrueType fonts as graphics.\" Elseif objPrinter.TTOption = 2 Then strTTOption = \"Download TrueType fonts as soft fonts.\" Else strTTOption = \"Substitute device fonts for TrueType fonts.\" End If Wscript.Echo \"True Type Option: \" \u0026 strTTOption Wscript.Echo \"Vertical Resolution: \" \u0026 objPrinter.VerticalResolution Next ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/83421975-55ee-453e-8834-d2540a1ae35f/83421975-55ee-453e-8834-d2540a1ae35f/:2:0","tags":["Active Directory","HTML"],"title":"List Printer Capabilities","uri":"/printing/print-servers-print-queues-and-print-jobs/83421975-55ee-453e-8834-d2540a1ae35f/83421975-55ee-453e-8834-d2540a1ae35f/"},{"categories":["Printing"],"content":"Original Links Original Technet URL List Printer Capabilities Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/a9140ead-403f-4ca3-8ed3-6cf4ca7d8322/a9140ead-403f-4ca3-8ed3-6cf4ca7d8322/:1:0","tags":["Active Directory","HTML"],"title":"List Printer Capabilities","uri":"/printing/print-servers-print-queues-and-print-jobs/a9140ead-403f-4ca3-8ed3-6cf4ca7d8322/a9140ead-403f-4ca3-8ed3-6cf4ca7d8322/"},{"categories":["Printing"],"content":"Output from Technet Gallery Lists properties and capabilities for all the printers installed on a computer. This script requires both Windows PowerShell and the corresponding version of the .NET Framework. For more information on downloading these items see the Windows PowerShell download page (right). $strComputer = \".\" $colItems = get-wmiobject -class \"Win32_PrinterConfiguration\" -namespace \"root\\CIMV2\" ` -computername $strComputer foreach ($objItem in $colItems) { write-host \"Bits Per Pel: \" $objItem.BitsPerPel write-host \"Caption: \" $objItem.Caption write-host \"Collate: \" $objItem.Collate write-host \"Color: \" $objItem.Color write-host \"Copies: \" $objItem.Copies write-host \"Description: \" $objItem.Description write-host \"Device Name: \" $objItem.DeviceName write-host \"Display Flags: \" $objItem.DisplayFlags write-host \"Display Frequency: \" $objItem.DisplayFrequency write-host \"Dither Type: \" $objItem.DitherType write-host \"Driver Version: \" $objItem.DriverVersion write-host \"Duplex: \" $objItem.Duplex write-host \"Form Name: \" $objItem.FormName write-host \"Horizontal Resolution: \" $objItem.HorizontalResolution write-host \"ICM Intent: \" $objItem.ICMIntent write-host \"ICM Method: \" $objItem.ICMMethod write-host \"Log Pixels: \" $objItem.LogPixels write-host \"Media Type: \" $objItem.MediaType write-host \"Name: \" $objItem.Name write-host \"Orientation: \" $objItem.Orientation write-host \"Paper Length: \" $objItem.PaperLength write-host \"Paper Size: \" $objItem.PaperSize write-host \"Paper Width: \" $objItem.PaperWidth write-host \"Pels Height: \" $objItem.PelsHeight write-host \"Pels Width: \" $objItem.PelsWidth write-host \"Print Quality: \" $objItem.PrintQuality write-host \"Scale: \" $objItem.Scale write-host \"Setting ID: \" $objItem.SettingID write-host \"Specification Version: \" $objItem.SpecificationVersion write-host \"TT Option: \" $objItem.TTOption write-host \"Vertical Resolution: \" $objItem.VerticalResolution write-host \"X Resolution: \" $objItem.XResolution write-host \"Y Resolution: \" $objItem.YResolution write-host } ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/a9140ead-403f-4ca3-8ed3-6cf4ca7d8322/a9140ead-403f-4ca3-8ed3-6cf4ca7d8322/:2:0","tags":["Active Directory","HTML"],"title":"List Printer Capabilities","uri":"/printing/print-servers-print-queues-and-print-jobs/a9140ead-403f-4ca3-8ed3-6cf4ca7d8322/a9140ead-403f-4ca3-8ed3-6cf4ca7d8322/"},{"categories":["Printing"],"content":"Original Links Original Technet URL List Printer Capabilities Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/f12eb87b-413e-4d11-8c5a-17f73ae2ae89/f12eb87b-413e-4d11-8c5a-17f73ae2ae89/:1:0","tags":["Active Directory","HTML"],"title":"List Printer Capabilities","uri":"/printing/print-servers-print-queues-and-print-jobs/f12eb87b-413e-4d11-8c5a-17f73ae2ae89/f12eb87b-413e-4d11-8c5a-17f73ae2ae89/"},{"categories":["Printing"],"content":"Output from Technet Gallery Lists properties and capabilities for all the printers installed on a computer. JavaScript var wbemFlagReturnImmediately = 0x10; var wbemFlagForwardOnly = 0x20; var objWMIService = GetObject(\"winmgmts:\\\\\\\\.\\\\root\\\\CIMV2\"); var colItems = objWMIService.ExecQuery(\"SELECT * FROM Win32_PrinterConfiguration\", \"WQL\", wbemFlagReturnImmediately | wbemFlagForwardOnly); var enumItems = new Enumerator(colItems); for (; !enumItems.atEnd(); enumItems.moveNext()) { var objItem = enumItems.item(); WScript.Echo(\"Bits Per Pel: \" + objItem.BitsPerPel); WScript.Echo(\"Caption: \" + objItem.Caption); WScript.Echo(\"Collate: \" + objItem.Collate); WScript.Echo(\"Color: \" + objItem.Color); WScript.Echo(\"Copies: \" + objItem.Copies); WScript.Echo(\"Description: \" + objItem.Description); WScript.Echo(\"Device Name: \" + objItem.DeviceName); WScript.Echo(\"Display Flags: \" + objItem.DisplayFlags); WScript.Echo(\"Display Frequency: \" + objItem.DisplayFrequency); WScript.Echo(\"Dither Type: \" + objItem.DitherType); WScript.Echo(\"Driver Version: \" + objItem.DriverVersion); WScript.Echo(\"Duplex: \" + objItem.Duplex); WScript.Echo(\"Form Name: \" + objItem.FormName); WScript.Echo(\"Horizontal Resolution: \" + objItem.HorizontalResolution); WScript.Echo(\"ICM Intent: \" + objItem.ICMIntent); WScript.Echo(\"ICM Method: \" + objItem.ICMMethod); WScript.Echo(\"Log Pixels: \" + objItem.LogPixels); WScript.Echo(\"Media Type: \" + objItem.MediaType); WScript.Echo(\"Name: \" + objItem.Name); WScript.Echo(\"Orientation: \" + objItem.Orientation); WScript.Echo(\"Paper Length: \" + objItem.PaperLength); WScript.Echo(\"Paper Size: \" + objItem.PaperSize); WScript.Echo(\"Paper Width: \" + objItem.PaperWidth); WScript.Echo(\"Pels Height: \" + objItem.PelsHeight); WScript.Echo(\"Pels Width: \" + objItem.PelsWidth); WScript.Echo(\"Print Quality: \" + objItem.PrintQuality); WScript.Echo(\"Scale: \" + objItem.Scale); WScript.Echo(\"Setting ID: \" + objItem.SettingID); WScript.Echo(\"Specification Version: \" + objItem.SpecificationVersion); WScript.Echo(\"TT Option: \" + objItem.TTOption); WScript.Echo(\"Vertical Resolution: \" + objItem.VerticalResolution); WScript.Echo(\"X Resolution: \" + objItem.XResolution); WScript.Echo(\"Y Resolution: \" + objItem.YResolution); WScript.Echo(); } ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/f12eb87b-413e-4d11-8c5a-17f73ae2ae89/f12eb87b-413e-4d11-8c5a-17f73ae2ae89/:2:0","tags":["Active Directory","HTML"],"title":"List Printer Capabilities","uri":"/printing/print-servers-print-queues-and-print-jobs/f12eb87b-413e-4d11-8c5a-17f73ae2ae89/f12eb87b-413e-4d11-8c5a-17f73ae2ae89/"},{"categories":["Printing"],"content":"Original Links Original Technet URL List Printer Connections Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/client-side-printing/45ce3543-b951-44da-9315-49d0e741ba1d/45ce3543-b951-44da-9315-49d0e741ba1d/:1:0","tags":["Active Directory","HTML"],"title":"List Printer Connections","uri":"/printing/client-side-printing/45ce3543-b951-44da-9315-49d0e741ba1d/45ce3543-b951-44da-9315-49d0e741ba1d/"},{"categories":["Printing"],"content":"Output from Technet Gallery Lists all the printer connections on a computer. Visual Basic strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colInstalledPrinters = objWMIService.ExecQuery _ (\"Select * from Win32_Printer\") For Each objPrinter in colInstalledPrinters Wscript.Echo \"Name: \" \u0026 objPrinter.Name Wscript.Echo \"Location: \" \u0026 objPrinter.Location Wscript.Echo \"Default: \" \u0026 objPrinter.Default Next ","date":"2019-12-01","objectID":"/printing/client-side-printing/45ce3543-b951-44da-9315-49d0e741ba1d/45ce3543-b951-44da-9315-49d0e741ba1d/:2:0","tags":["Active Directory","HTML"],"title":"List Printer Connections","uri":"/printing/client-side-printing/45ce3543-b951-44da-9315-49d0e741ba1d/45ce3543-b951-44da-9315-49d0e741ba1d/"},{"categories":["Printing"],"content":"Original Links Original Technet URL List Printer Drivers Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/03e292b8-2bc9-42f8-8106-ed7392227af0/03e292b8-2bc9-42f8-8106-ed7392227af0/:1:0","tags":["Active Directory","HTML"],"title":"List Printer Drivers","uri":"/printing/printer-ports-and-printer-drivers/03e292b8-2bc9-42f8-8106-ed7392227af0/03e292b8-2bc9-42f8-8106-ed7392227af0/"},{"categories":["Printing"],"content":"Output from Technet Gallery Lists all the printer drivers that have been installed on a computer. JavaScript var wbemFlagReturnImmediately = 0x10; var wbemFlagForwardOnly = 0x20; var objWMIService = GetObject(\"winmgmts:\\\\\\\\.\\\\root\\\\CIMV2\"); var colItems = objWMIService.ExecQuery(\"SELECT * FROM Win32_PrinterDriver\", \"WQL\", wbemFlagReturnImmediately | wbemFlagForwardOnly); var enumItems = new Enumerator(colItems); for (; !enumItems.atEnd(); enumItems.moveNext()) { var objItem = enumItems.item(); WScript.Echo(\"Caption: \" + objItem.Caption); WScript.Echo(\"Config File: \" + objItem.ConfigFile); WScript.Echo(\"Creation Class Name: \" + objItem.CreationClassName); WScript.Echo(\"Data File: \" + objItem.DataFile); WScript.Echo(\"Default Data Type: \" + objItem.DefaultDataType); try { WScript.Echo(\"DependentFiles: \" + (objItem.DependentFiles.toArray()).join(\",\")); } catch(e) { WScript.Echo(\"DependentFiles: null\"); } WScript.Echo(\"Description: \" + objItem.Description); WScript.Echo(\"Driver Path: \" + objItem.DriverPath); WScript.Echo(\"File Path: \" + objItem.FilePath); WScript.Echo(\"Help File: \" + objItem.HelpFile); WScript.Echo(\"Inf Name: \" + objItem.InfName); WScript.Echo(\"Install Date: \" + objItem.InstallDate); WScript.Echo(\"Monitor Name: \" + objItem.MonitorName); WScript.Echo(\"Name: \" + objItem.Name); WScript.Echo(\"OEM Url: \" + objItem.OEMUrl); WScript.Echo(\"Started: \" + objItem.Started); WScript.Echo(\"Start Mode: \" + objItem.StartMode); WScript.Echo(\"Status: \" + objItem.Status); WScript.Echo(\"Supported Platform: \" + objItem.SupportedPlatform); WScript.Echo(\"System Creation Class Name: \" + objItem.SystemCreationClassName); WScript.Echo(\"System Name: \" + objItem.SystemName); WScript.Echo(\"Version: \" + objItem.Version); WScript.Echo(); } ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/03e292b8-2bc9-42f8-8106-ed7392227af0/03e292b8-2bc9-42f8-8106-ed7392227af0/:2:0","tags":["Active Directory","HTML"],"title":"List Printer Drivers","uri":"/printing/printer-ports-and-printer-drivers/03e292b8-2bc9-42f8-8106-ed7392227af0/03e292b8-2bc9-42f8-8106-ed7392227af0/"},{"categories":["Printing"],"content":"Original Links Original Technet URL List Printer Drivers Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/62c1dc9b-3ad8-45a2-8955-83622b7ac3be/62c1dc9b-3ad8-45a2-8955-83622b7ac3be/:1:0","tags":["Active Directory","HTML"],"title":"List Printer Drivers","uri":"/printing/printer-ports-and-printer-drivers/62c1dc9b-3ad8-45a2-8955-83622b7ac3be/62c1dc9b-3ad8-45a2-8955-83622b7ac3be/"},{"categories":["Printing"],"content":"Output from Technet Gallery Lists all the printer drivers that have been installed on a computer. This script was tested using Object REXX 2.1.0 for Microsoft Windows, available from IBM. Object REXX strComputer = \".\" objWMIService = .OLEObject~GetObject(\"winmgmts:\\\\\"||strComputer||\"\\root\\CIMV2\") do objItem over objWMIService~ExecQuery(\"Select * from Win32_PrinterDriver\") say \"Caption:\" objItem~Caption say \"Config File:\" objItem~ConfigFile say \"Creation Class Name:\" objItem~CreationClassName say \"Data File:\" objItem~DataFile say \"Default Data Type:\" objItem~DefaultDataType z = objItem~DependentFiles if .NIL \u003c\u003e z then do x over z say objProperty.Name \": \" x end say \"Description:\" objItem~Description say \"Driver Path:\" objItem~DriverPath say \"File Path:\" objItem~FilePath say \"Help File:\" objItem~HelpFile say \"Inf Name:\" objItem~InfName say \"Install Date:\" objItem~InstallDate say \"Monitor Name:\" objItem~MonitorName say \"Name:\" objItem~Name say \"OEM Url:\" objItem~OEMUrl say \"Started:\" objItem~Started say \"Start Mode:\" objItem~StartMode say \"Status:\" objItem~Status say \"Supported Platform:\" objItem~SupportedPlatform say \"System Creation Class Name:\" objItem~SystemCreationClassName say \"System Name:\" objItem~SystemName say \"Version:\" objItem~Version end ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/62c1dc9b-3ad8-45a2-8955-83622b7ac3be/62c1dc9b-3ad8-45a2-8955-83622b7ac3be/:2:0","tags":["Active Directory","HTML"],"title":"List Printer Drivers","uri":"/printing/printer-ports-and-printer-drivers/62c1dc9b-3ad8-45a2-8955-83622b7ac3be/62c1dc9b-3ad8-45a2-8955-83622b7ac3be/"},{"categories":["Printing"],"content":"Original Links Original Technet URL List Printer Drivers Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/800a3027-cf10-456c-bb27-afd23531b815/800a3027-cf10-456c-bb27-afd23531b815/:1:0","tags":["Active Directory","HTML"],"title":"List Printer Drivers","uri":"/printing/printer-ports-and-printer-drivers/800a3027-cf10-456c-bb27-afd23531b815/800a3027-cf10-456c-bb27-afd23531b815/"},{"categories":["Printing"],"content":"Output from Technet Gallery Lists all the printer drivers that have been installed on a computer. This script was tested using Kixtart 2001 (412) for Microsoft Windows, available from Kixtart.org. Kixtart $strComputer = \".\" $objWMIService = GetObject(\"winmgmts:\\\\\"+ $strComputer + \"\\root\\cimv2\") $colItems = $objWMIService.ExecQuery(\"Select * from Win32_PrinterDriver\") For Each $objItem in $colItems ? \"Caption:\" + $objItem.Caption ? \"Config File:\" + $objItem.ConfigFile ? \"Creation Class Name:\" + $objItem.CreationClassName ? \"DataFile:\" + $objItem.DataFile ? \"Default Data Type:\" + $objItem.DefaultDataType For Each $x in $objItem.DependentFiles ? \"Dependent Files:\" + $x Next ? \"Description:\" + $objItem.Description ? \"Driver Path:\" + $objItem.DriverPath ? \"File Path:\" + $objItem.FilePath ? \"Help File:\" + $objItem.HelpFile ? \"Inf Name:\" + $objItem.InfName ? \"Install Date:\" + $objItem.InstallDate ? \"Monitor Name:\" + $objItem.MonitorName ? \"Name:\" + $objItem.Name ? \"OEM Url:\" + $objItem.OEMUrl ? \"Started:\" + $objItem.Started ? \"Start Mode:\" + $objItem.StartMode ? \"Status:\" + $objItem.Status ? \"Supported Platform:\" + $objItem.SupportedPlatform ? \"System Creation Class Name:\" + $objItem.SystemCreationClassName ? \"System Name:\" + $objItem.SystemName ? \"Version:\" + $objItem.Version Next ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/800a3027-cf10-456c-bb27-afd23531b815/800a3027-cf10-456c-bb27-afd23531b815/:2:0","tags":["Active Directory","HTML"],"title":"List Printer Drivers","uri":"/printing/printer-ports-and-printer-drivers/800a3027-cf10-456c-bb27-afd23531b815/800a3027-cf10-456c-bb27-afd23531b815/"},{"categories":["Printing"],"content":"Original Links Original Technet URL List Printer Drivers Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/86eb8a54-a403-4e41-82d0-df9364564178/86eb8a54-a403-4e41-82d0-df9364564178/:1:0","tags":["Active Directory","HTML"],"title":"List Printer Drivers","uri":"/printing/printer-ports-and-printer-drivers/86eb8a54-a403-4e41-82d0-df9364564178/86eb8a54-a403-4e41-82d0-df9364564178/"},{"categories":["Printing"],"content":"Output from Technet Gallery Lists all the printer drivers that have been installed on a computer. This script was tested using Python 2.2.2-224 for Microsoft Windows, available from ActiveState. Python import win32com.client strComputer = \".\" objWMIService = win32com.client.Dispatch(\"WbemScripting.SWbemLocator\") objSWbemServices = objWMIService.ConnectServer(strComputer,\"root\\cimv2\") colItems = objSWbemServices.ExecQuery(\"Select * from Win32_PrinterDriver\") for objItem in colItems: print \"Caption: \", objItem.Caption print \"Config File: \", objItem.ConfigFile print \"Creation Class Name: \", objItem.CreationClassName print \"Data File: \", objItem.DataFile print \"Default Data Type: \", objItem.DefaultDataType z = objItem.DependentFiles if z is None: a = 1 else: for x in z: print \"Dependent Files: \", x print \"Description: \", objItem.Description print \"Driver Path: \", objItem.DriverPath print \"File Path: \", objItem.FilePath print \"Help File: \", objItem.HelpFile print \"Inf Name: \", objItem.InfName print \"Install Date: \", objItem.InstallDate print \"Monitor Name: \", objItem.MonitorName print \"Name: \", objItem.Name print \"OEM Url: \", objItem.OEMUrl print \"Started: \", objItem.Started print \"Start Mode: \", objItem.StartMode print \"Status: \", objItem.Status print \"Supported Platform: \", objItem.SupportedPlatform print \"System Creation Class Name: \", objItem.SystemCreationClassName print \"System Name: \", objItem.SystemName print \"Version: \", objItem.Version ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/86eb8a54-a403-4e41-82d0-df9364564178/86eb8a54-a403-4e41-82d0-df9364564178/:2:0","tags":["Active Directory","HTML"],"title":"List Printer Drivers","uri":"/printing/printer-ports-and-printer-drivers/86eb8a54-a403-4e41-82d0-df9364564178/86eb8a54-a403-4e41-82d0-df9364564178/"},{"categories":["Printing"],"content":"Original Links Original Technet URL List Printer Drivers Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/95df24d9-7313-4c46-b976-89274931096c/95df24d9-7313-4c46-b976-89274931096c/:1:0","tags":["Active Directory","HTML"],"title":"List Printer Drivers","uri":"/printing/printer-ports-and-printer-drivers/95df24d9-7313-4c46-b976-89274931096c/95df24d9-7313-4c46-b976-89274931096c/"},{"categories":["Printing"],"content":"Output from Technet Gallery Lists all the printer drivers that have been installed on a computer. This script requires both Windows PowerShell and the corresponding version of the .NET Framework. For more information on downloading these items see the Windows PowerShell download page (right). $strComputer = \".\" $colItems = get-wmiobject -class \"Win32_PrinterDriver\" -namespace \"root\\CIMV2\" ` -computername $strComputer foreach ($objItem in $colItems) { write-host \"Caption: \" $objItem.Caption write-host \"Configuration File: \" $objItem.ConfigFile write-host \"Creation Class Name: \" $objItem.CreationClassName write-host \"Data File: \" $objItem.DataFile write-host \"Default Data Type: \" $objItem.DefaultDataType write-host \"Dependent Files: \" $objItem.DependentFiles write-host \"Description: \" $objItem.Description write-host \"Driver Path: \" $objItem.DriverPath write-host \"File Path: \" $objItem.FilePath write-host \"Help File: \" $objItem.HelpFile write-host \"Inf Name: \" $objItem.InfName write-host \"Installation Date: \" $objItem.InstallDate write-host \"Monitor Name: \" $objItem.MonitorName write-host \"Name: \" $objItem.Name write-host \"OEM Url: \" $objItem.OEMUrl write-host \"Started: \" $objItem.Started write-host \"Start Mode: \" $objItem.StartMode write-host \"Status: \" $objItem.Status write-host \"Supported Platform: \" $objItem.SupportedPlatform write-host \"System Creation Class Name: \" $objItem.SystemCreationClassName write-host \"System Name: \" $objItem.SystemName write-host \"Version: \" $objItem.Version write-host } ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/95df24d9-7313-4c46-b976-89274931096c/95df24d9-7313-4c46-b976-89274931096c/:2:0","tags":["Active Directory","HTML"],"title":"List Printer Drivers","uri":"/printing/printer-ports-and-printer-drivers/95df24d9-7313-4c46-b976-89274931096c/95df24d9-7313-4c46-b976-89274931096c/"},{"categories":["Printing"],"content":"Original Links Original Technet URL List Printer Drivers Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/f79f2fe5-1528-46ec-944a-df9c76cd1b6e/f79f2fe5-1528-46ec-944a-df9c76cd1b6e/:1:0","tags":["Active Directory","HTML"],"title":"List Printer Drivers","uri":"/printing/printer-ports-and-printer-drivers/f79f2fe5-1528-46ec-944a-df9c76cd1b6e/f79f2fe5-1528-46ec-944a-df9c76cd1b6e/"},{"categories":["Printing"],"content":"Output from Technet Gallery Lists all the printer drivers that have been installed on a computer. Visual Basic strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colInstalledPrinters = objWMIService.ExecQuery _ (\"Select * from Win32_PrinterDriver\") For each objPrinter in colInstalledPrinters Wscript.Echo \"Configuration File: \" \u0026 objPrinter.ConfigFile Wscript.Echo \"Data File: \" \u0026 objPrinter.DataFile Wscript.Echo \"Description: \" \u0026 objPrinter.Description Wscript.Echo \"Driver Path: \" \u0026 objPrinter.DriverPath Wscript.Echo \"File Path: \" \u0026 objPrinter.FilePath Wscript.Echo \"Help File: \" \u0026 objPrinter.HelpFile Wscript.Echo \"INF Name: \" \u0026 objPrinter.InfName Wscript.Echo \"Monitor Name: \" \u0026 objPrinter.MonitorName Wscript.Echo \"Name: \" \u0026 objPrinter.Name Wscript.Echo \"OEM Url: \" \u0026 objPrinter.OEMUrl Wscript.Echo \"Supported Platform: \" \u0026 objPrinter.SupportedPlatform Wscript.Echo \"Version: \" \u0026 objPrinter.Version Next ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/f79f2fe5-1528-46ec-944a-df9c76cd1b6e/f79f2fe5-1528-46ec-944a-df9c76cd1b6e/:2:0","tags":["Active Directory","HTML"],"title":"List Printer Drivers","uri":"/printing/printer-ports-and-printer-drivers/f79f2fe5-1528-46ec-944a-df9c76cd1b6e/f79f2fe5-1528-46ec-944a-df9c76cd1b6e/"},{"categories":["Printing"],"content":"Original Links Original Technet URL List Printer Drivers Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/ff607ef9-3385-47d4-bb64-0fe9b3a4153c/ff607ef9-3385-47d4-bb64-0fe9b3a4153c/:1:0","tags":["Active Directory","HTML"],"title":"List Printer Drivers","uri":"/printing/printer-ports-and-printer-drivers/ff607ef9-3385-47d4-bb64-0fe9b3a4153c/ff607ef9-3385-47d4-bb64-0fe9b3a4153c/"},{"categories":["Printing"],"content":"Output from Technet Gallery Lists all the printer drivers that have been installed on a computer. This script was tested using Perl 5.8.0.804 for Microsoft Windows, available from ActiveState. Perl use Win32::OLE('in'); use constant wbemFlagReturnImmediately =\u003e 0x10; use constant wbemFlagForwardOnly =\u003e 0x20; $computer = \".\"; $objWMIService = Win32::OLE-\u003eGetObject (\"winmgmts:\\\\\\\\$computer\\\\root\\\\CIMV2\") or die \"WMI connection failed.\\n\"; $colItems = $objWMIService-\u003eExecQuery (\"SELECT * FROM Win32_PrinterDriver\",\"WQL\",wbemFlagReturnImmediately | wbemFlagForwardOnly); foreach my $objItem (in $colItems) { print \"Caption: $objItem-\u003e{Caption}\\n\"; print \"Config File: $objItem-\u003e{ConfigFile}\\n\"; print \"Creation Class Name: $objItem-\u003e{CreationClassName}\\n\"; print \"Data File: $objItem-\u003e{DataFile}\\n\"; print \"Default Data Type: $objItem-\u003e{DefaultDataType}\\n\"; print \"Dependent Files: \" . join(\",\", (in $objItem-\u003e{DependentFiles})) . \"\\n\"; print \"Description: $objItem-\u003e{Description}\\n\"; print \"Driver Path: $objItem-\u003e{DriverPath}\\n\"; print \"File Path: $objItem-\u003e{FilePath}\\n\"; print \"Help File: $objItem-\u003e{HelpFile}\\n\"; print \"Inf Name: $objItem-\u003e{InfName}\\n\"; print \"Install Date: $objItem-\u003e{InstallDate}\\n\"; print \"Monitor Name: $objItem-\u003e{MonitorName}\\n\"; print \"Name: $objItem-\u003e{Name}\\n\"; print \"OEM Url: $objItem-\u003e{OEMUrl}\\n\"; print \"Started: $objItem-\u003e{Started}\\n\"; print \"Start Mode: $objItem-\u003e{StartMode}\\n\"; print \"Status: $objItem-\u003e{Status}\\n\"; print \"Supported Platform: $objItem-\u003e{SupportedPlatform}\\n\"; print \"System Creation Class Name: $objItem-\u003e{SystemCreationClassName}\\n\"; print \"System Name: $objItem-\u003e{SystemName}\\n\"; print \"Version: $objItem-\u003e{Version}\\n\"; print \"\\n\"; } ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/ff607ef9-3385-47d4-bb64-0fe9b3a4153c/ff607ef9-3385-47d4-bb64-0fe9b3a4153c/:2:0","tags":["Active Directory","HTML"],"title":"List Printer Drivers","uri":"/printing/printer-ports-and-printer-drivers/ff607ef9-3385-47d4-bb64-0fe9b3a4153c/ff607ef9-3385-47d4-bb64-0fe9b3a4153c/"},{"categories":["Printing"],"content":"Original Links Original Technet URL List Printer Information Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/012dca6b-946a-4a68-bb2f-3704dc80b618/012dca6b-946a-4a68-bb2f-3704dc80b618/:1:0","tags":["Active Directory","HTML"],"title":"List Printer Information","uri":"/printing/print-servers-print-queues-and-print-jobs/012dca6b-946a-4a68-bb2f-3704dc80b618/012dca6b-946a-4a68-bb2f-3704dc80b618/"},{"categories":["Printing"],"content":"Output from Technet Gallery Lists information about all the printers connected to a print server. This script requires both Windows PowerShell and the corresponding version of the .NET Framework. For more information on downloading these items see the Windows PowerShell download page (right). $strComputer = \".\" $colItems = get-wmiobject -class \"Win32_Printer\" -namespace \"root\\CIMV2\" ` -computername $strComputer foreach ($objItem in $colItems) { write-host \"Attributes: \" $objItem.Attributes write-host \"Availability: \" $objItem.Availability write-host \"Available Job Sheets: \" $objItem.AvailableJobSheets write-host \"Average Pages Per Minute: \" $objItem.AveragePagesPerMinute write-host \"Capabilities: \" $objItem.Capabilities write-host \"Capability Descriptions: \" $objItem.CapabilityDescriptions write-host \"Caption: \" $objItem.Caption write-host \"Character Sets Supported: \" $objItem.CharSetsSupported write-host \"Comment: \" $objItem.Comment write-host \"Configuration Manager Error Code: \" $objItem.ConfigManagerErrorCode write-host \"Configuration Manager User Configuration: \" $objItem.ConfigManagerUserConfig write-host \"Creation Class Name: \" $objItem.CreationClassName write-host \"Current Capabilities: \" $objItem.CurrentCapabilities write-host \"Current Character Set: \" $objItem.CurrentCharSet write-host \"Current Language: \" $objItem.CurrentLanguage write-host \"Current MIME Type: \" $objItem.CurrentMimeType write-host \"Current Natural Language: \" $objItem.CurrentNaturalLanguage write-host \"Current Paper Type: \" $objItem.CurrentPaperType write-host \"Default: \" $objItem.Default write-host \"Default Capabilities: \" $objItem.DefaultCapabilities write-host \"Default Copies: \" $objItem.DefaultCopies write-host \"Default Language: \" $objItem.DefaultLanguage write-host \"Default MIME Type: \" $objItem.DefaultMimeType write-host \"Default Number Up: \" $objItem.DefaultNumberUp write-host \"Default Paper Type: \" $objItem.DefaultPaperType write-host \"Default Priority: \" $objItem.DefaultPriority write-host \"Description: \" $objItem.Description write-host \"Detected Error State: \" $objItem.DetectedErrorState write-host \"Device ID: \" $objItem.DeviceID write-host \"Direct: \" $objItem.Direct write-host \"Do Complete First: \" $objItem.DoCompleteFirst write-host \"Driver Name: \" $objItem.DriverName write-host \"Enable BIDI: \" $objItem.EnableBIDI write-host \"Enable Device Query Print: \" $objItem.EnableDevQueryPrint write-host \"Error Cleared: \" $objItem.ErrorCleared write-host \"Error Description: \" $objItem.ErrorDescription write-host \"Error Information: \" $objItem.ErrorInformation write-host \"Extended Detected Error State: \" $objItem.ExtendedDetectedErrorState write-host \"Extended Printer Status: \" $objItem.ExtendedPrinterStatus write-host \"Hidden: \" $objItem.Hidden write-host \"Horizontal Resolution: \" $objItem.HorizontalResolution write-host \"Installation Date: \" $objItem.InstallDate write-host \"Job Count Since Last Reset: \" $objItem.JobCountSinceLastReset write-host \"Keep Printed Jobs: \" $objItem.KeepPrintedJobs write-host \"Languages Supported: \" $objItem.LanguagesSupported write-host \"Last Error Code: \" $objItem.LastErrorCode write-host \"Local: \" $objItem.Local write-host \"Location: \" $objItem.Location write-host \"Marking Technology: \" $objItem.MarkingTechnology write-host \"Maximum Copies: \" $objItem.MaxCopies write-host \"Maximum Number Up: \" $objItem.MaxNumberUp write-host \"Maximum Size Supported: \" $objItem.MaxSizeSupported write-host \"MIME Types Supported: \" $objItem.MimeTypesSupported write-host \"Name: \" $objItem.Name write-host \"Natural Languages Supported: \" $objItem.NaturalLanguagesSupported write-host \"Network: \" $objItem.Network write-host \"Paper Sizes Supported: \" $objItem.PaperSizesSupported write-host \"Paper Types Available: \" $objItem.PaperTypesAvailable write-host \"Parameters: \" $objItem.Parameters write-host \"PNP Device ID: \" $objItem.PNPDeviceID write-host \"Port Name: \" $objItem.PortName write-host \"Power Management Capabilities: \" $objItem.PowerManag","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/012dca6b-946a-4a68-bb2f-3704dc80b618/012dca6b-946a-4a68-bb2f-3704dc80b618/:2:0","tags":["Active Directory","HTML"],"title":"List Printer Information","uri":"/printing/print-servers-print-queues-and-print-jobs/012dca6b-946a-4a68-bb2f-3704dc80b618/012dca6b-946a-4a68-bb2f-3704dc80b618/"},{"categories":["Printing"],"content":"Original Links Original Technet URL List Printer Information Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/4c6560bd-917f-4090-9d8c-052378ea7e6c/4c6560bd-917f-4090-9d8c-052378ea7e6c/:1:0","tags":["Active Directory","HTML"],"title":"List Printer Information","uri":"/printing/print-servers-print-queues-and-print-jobs/4c6560bd-917f-4090-9d8c-052378ea7e6c/4c6560bd-917f-4090-9d8c-052378ea7e6c/"},{"categories":["Printing"],"content":"Output from Technet Gallery Lists information about all the printers connected to a print server. This script was tested using Kixtart 2001 (412) for Microsoft Windows, available from Kixtart.org. Kixtart $strComputer = \".\" $objWMIService = GetObject(\"winmgmts:\\\\\"+ $strComputer + \"\\root\\cimv2\") $colItems = $objWMIService.ExecQuery(\"Select * from Win32_Printer\") For Each $objItem in $colItems ? \"Attributes:\" + $objItem.Attributes ? \"Availability:\" + $objItem.Availability For Each $x in $objItem.AvailableJobSheets ? \"Available Job Sheets:\" + $x Next ? \"AveragePagesPerMinute:\" + $objItem.AveragePagesPerMinute For Each $x in $objItem.Capabilities ? \"Capabilities:\" + $x Next For Each $x in $objItem.CapabilityDescriptions ? \"Capability Descriptions:\" + $x Next ? \"Caption:\" + $objItem.Caption For Each $x in $objItem.CharSetsSupported ? \"Char Sets Supported:\" + $x Next ? \"Comment:\" + $objItem.Comment ? \"Config Manager Error Code:\" + $objItem.ConfigManagerErrorCode ? \"Config Manager User Config:\" + $objItem.ConfigManagerUserConfig ? \"Creation Class Name:\" + $objItem.CreationClassName For Each $x in $objItem.CurrentCapabilities ? \"Current Capabilities:\" + $x Next ? \"Current Char Set:\" + $objItem.CurrentCharSet ? \"Current Language:\" + $objItem.CurrentLanguage ? \"Current Mime Type:\" + $objItem.CurrentMimeType ? \"Current Natural Language:\" + $objItem.CurrentNaturalLanguage ? \"Current Paper Type:\" + $objItem.CurrentPaperType ? \"Default:\" + $objItem.Default For Each $x in $objItem.DefaultCapabilities ? \"Default Capabilities:\" + $x Next ? \"Default Copies:\" + $objItem.DefaultCopies ? \"Default Language:\" + $objItem.DefaultLanguage ? \"Default Mime Type:\" + $objItem.DefaultMimeType ? \"Default Number Up:\" + $objItem.DefaultNumberUp ? \"Default Paper Type:\" + $objItem.DefaultPaperType ? \"Default Priority:\" + $objItem.DefaultPriority ? \"Description:\" + $objItem.Description ? \"Detected Error State:\" + $objItem.DetectedErrorState ? \"Device ID:\" + $objItem.DeviceID ? \"Direct:\" + $objItem.Direct ? \"Do Complete First:\" + $objItem.DoCompleteFirst ? \"Driver Name:\" + $objItem.DriverName ? \"Enable BIDI:\" + $objItem.EnableBIDI ? \"Enable Dev Query Print:\" + $objItem.EnableDevQueryPrint ? \"Error Cleared:\" + $objItem.ErrorCleared ? \"Error Description:\" + $objItem.ErrorDescription For Each $x in $objItem.ErrorInformation ? \"Error Information:\" + $x Next ? \"Extended Detected Error State:\" + $objItem.ExtendedDetectedErrorState ? \"Extended Printer Status:\" + $objItem.ExtendedPrinterStatus ? \"Hidden:\" + $objItem.Hidden ? \"Horizontal Resolution:\" + $objItem.HorizontalResolution ? \"Install Date:\" + $objItem.InstallDate ? \"Job Count Since Last Reset:\" + $objItem.JobCountSinceLastReset ? \"Keep Printed Jobs:\" + $objItem.KeepPrintedJobs For Each $x in $objItem.LanguagesSupported ? \"Languages Supported:\" + $x Next ? \"Last Error Code:\" + $objItem.LastErrorCode ? \"Local:\" + $objItem.Local ? \"Location:\" + $objItem.Location ? \"Marking Technology:\" + $objItem.MarkingTechnology ? \"Max Copies:\" + $objItem.MaxCopies ? \"Max Number Up:\" + $objItem.MaxNumberUp ? \"Max Size Supported:\" + $objItem.MaxSizeSupported For Each $x in $objItem.MimeTypesSupported ? \"Mime Types Supported:\" + $x Next ? \"Name:\" + $objItem.Name For Each $x in $objItem.NaturalLanguagesSupported ? \"Natural Languages Supported:\" + $x Next ? \"Network:\" + $objItem.Network For Each $x in $objItem.PaperSizesSupported ? \"Paper Sizes Supported:\" + $x Next For Each $x in $objItem.PaperTypesAvailable ? \"Paper Types Available:\" + $x Next ? \"Parameters:\" + $objItem.Parameters ? \"PNP Device ID:\" + $objItem.PNPDeviceID ? \"Port Name:\" + $objItem.PortName For Each $x in $objItem.PowerManagementCapabilities ? \"Power Management Capabilities:\" + $x Next ? \"Power Management Supported:\" + $objItem.PowerManagementSupported For Each $x in $objItem.PrinterPaperNames ? \"Printer Paper Names:\" + $x Next ? \"Printer State:\" + $objItem.PrinterState ? \"Printer Status:\" + $objItem.PrinterStatus ? \"Print Job Data Type:\" + $objItem.PrintJobDataType ?","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/4c6560bd-917f-4090-9d8c-052378ea7e6c/4c6560bd-917f-4090-9d8c-052378ea7e6c/:2:0","tags":["Active Directory","HTML"],"title":"List Printer Information","uri":"/printing/print-servers-print-queues-and-print-jobs/4c6560bd-917f-4090-9d8c-052378ea7e6c/4c6560bd-917f-4090-9d8c-052378ea7e6c/"},{"categories":["Printing"],"content":"Original Links Original Technet URL List Printer Information Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/5a27d5fb-db1c-4d19-b6a4-4474be5e3774/5a27d5fb-db1c-4d19-b6a4-4474be5e3774/:1:0","tags":["Active Directory","HTML"],"title":"List Printer Information","uri":"/printing/print-servers-print-queues-and-print-jobs/5a27d5fb-db1c-4d19-b6a4-4474be5e3774/5a27d5fb-db1c-4d19-b6a4-4474be5e3774/"},{"categories":["Printing"],"content":"Output from Technet Gallery Lists information about all the printers connected to a print server. This script was tested using Perl 5.8.0.804 for Microsoft Windows, available from ActiveState. Perl use Win32::OLE('in'); use constant wbemFlagReturnImmediately =\u003e 0x10; use constant wbemFlagForwardOnly =\u003e 0x20; $computer = \".\"; $objWMIService = Win32::OLE-\u003eGetObject (\"winmgmts:\\\\\\\\$computer\\\\root\\\\CIMV2\") or die \"WMI connection failed.\\n\"; $colItems = $objWMIService-\u003eExecQuery (\"SELECT * FROM Win32_Printer\",\"WQL\",wbemFlagReturnImmediately | wbemFlagForwardOnly); foreach my $objItem (in $colItems) { print \"Attributes: $objItem-\u003e{Attributes}\\n\"; print \"Availability: $objItem-\u003e{Availability}\\n\"; print \"Available JobS heets: \" . join(\",\", (in $objItem-\u003e{AvailableJobSheets})) . \"\\n\"; print \"Average Pages Per Minute: $objItem-\u003e{AveragePagesPerMinute}\\n\"; print \"Capabilities: \" . join(\",\", (in $objItem-\u003e{Capabilities})) . \"\\n\"; print \"Capability Descriptions: \" . join(\",\", (in $objItem-\u003e{CapabilityDescriptions})) . \"\\n\"; print \"Caption: $objItem-\u003e{Caption}\\n\"; print \"Char Sets Supported: \" . join(\",\", (in $objItem-\u003e{CharSetsSupported})) . \"\\n\"; print \"Comment: $objItem-\u003e{Comment}\\n\"; print \"Config Manager Error Code: $objItem-\u003e{ConfigManagerErrorCode}\\n\"; print \"Config Manager User Config: $objItem-\u003e{ConfigManagerUserConfig}\\n\"; print \"Creation Class Name: $objItem-\u003e{CreationClassName}\\n\"; print \"Current Capabilities: \" . join(\",\", (in $objItem-\u003e{CurrentCapabilities})) . \"\\n\"; print \"Current Char Set: $objItem-\u003e{CurrentCharSet}\\n\"; print \"Current Language: $objItem-\u003e{CurrentLanguage}\\n\"; print \"Current Mime Type: $objItem-\u003e{CurrentMimeType}\\n\"; print \"Current Natural Language: $objItem-\u003e{CurrentNaturalLanguage}\\n\"; print \"Current Paper Type: $objItem-\u003e{CurrentPaperType}\\n\"; print \"Default: $objItem-\u003e{Default}\\n\"; print \"Default Capabilities: \" . join(\",\", (in $objItem-\u003e{DefaultCapabilities})) . \"\\n\"; print \"Default Copies: $objItem-\u003e{DefaultCopies}\\n\"; print \"Default Language: $objItem-\u003e{DefaultLanguage}\\n\"; print \"Default Mime Type: $objItem-\u003e{DefaultMimeType}\\n\"; print \"Default Number Up: $objItem-\u003e{DefaultNumberUp}\\n\"; print \"Default Paper Type: $objItem-\u003e{DefaultPaperType}\\n\"; print \"Default Priority: $objItem-\u003e{DefaultPriority}\\n\"; print \"Description: $objItem-\u003e{Description}\\n\"; print \"Detected Error State: $objItem-\u003e{DetectedErrorState}\\n\"; print \"Device ID: $objItem-\u003e{DeviceID}\\n\"; print \"Direct: $objItem-\u003e{Direct}\\n\"; print \"Do Complete First: $objItem-\u003e{DoCompleteFirst}\\n\"; print \"Driver Name: $objItem-\u003e{DriverName}\\n\"; print \"Enable BIDI: $objItem-\u003e{EnableBIDI}\\n\"; print \"Enable Dev Query Print: $objItem-\u003e{EnableDevQueryPrint}\\n\"; print \"Error Cleared: $objItem-\u003e{ErrorCleared}\\n\"; print \"Error Description: $objItem-\u003e{ErrorDescription}\\n\"; print \"Error Information: \" . join(\",\", (in $objItem-\u003e{ErrorInformation})) . \"\\n\"; print \"Extended Detected Error State: $objItem-\u003e{ExtendedDetectedErrorState}\\n\"; print \"Extended Printer Status: $objItem-\u003e{ExtendedPrinterStatus}\\n\"; print \"Hidden: $objItem-\u003e{Hidden}\\n\"; print \"Horizontal Resolution: $objItem-\u003e{HorizontalResolution}\\n\"; print \"Install Date: $objItem-\u003e{InstallDate}\\n\"; print \"Job Count Since Last Reset: $objItem-\u003e{JobCountSinceLastReset}\\n\"; print \"Keep Printed Jobs: $objItem-\u003e{KeepPrintedJobs}\\n\"; print \"Languages Supported: \" . join(\",\", (in $objItem-\u003e{LanguagesSupported})) . \"\\n\"; print \"Last Error Code: $objItem-\u003e{LastErrorCode}\\n\"; print \"Local: $objItem-\u003e{Local}\\n\"; print \"Location: $objItem-\u003e{Location}\\n\"; print \"Marking Technology: $objItem-\u003e{MarkingTechnology}\\n\"; print \"Max Copies: $objItem-\u003e{MaxCopies}\\n\"; print \"Max Number Up: $objItem-\u003e{MaxNumberUp}\\n\"; print \"Max Size Supported: $objItem-\u003e{MaxSizeSupported}\\n\"; print \"Mime Types Supported: \" . join(\",\", (in $objItem-\u003e{MimeTypesSupported})) . \"\\n\"; print \"Name: $objItem-\u003e{Name}\\n\"; print \"Natural Languages Supported: \" . join(\",\", (in $objItem-\u003e{NaturalLanguagesSupported})) . \"\\n\"; print \"Network: $objItem-\u003e{Netwo","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/5a27d5fb-db1c-4d19-b6a4-4474be5e3774/5a27d5fb-db1c-4d19-b6a4-4474be5e3774/:2:0","tags":["Active Directory","HTML"],"title":"List Printer Information","uri":"/printing/print-servers-print-queues-and-print-jobs/5a27d5fb-db1c-4d19-b6a4-4474be5e3774/5a27d5fb-db1c-4d19-b6a4-4474be5e3774/"},{"categories":["Printing"],"content":"Original Links Original Technet URL List Printer Information Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/5bf528c2-367e-4b39-84bf-3d22e7310931/5bf528c2-367e-4b39-84bf-3d22e7310931/:1:0","tags":["Active Directory","HTML"],"title":"List Printer Information","uri":"/printing/print-servers-print-queues-and-print-jobs/5bf528c2-367e-4b39-84bf-3d22e7310931/5bf528c2-367e-4b39-84bf-3d22e7310931/"},{"categories":["Printing"],"content":"Output from Technet Gallery Lists information about all the printers connected to a print server. This script was tested using Python 2.2.2-224 for Microsoft Windows, available from ActiveState. Python import win32com.client strComputer = \".\" objWMIService = win32com.client.Dispatch(\"WbemScripting.SWbemLocator\") objSWbemServices = objWMIService.ConnectServer(strComputer,\"root\\cimv2\") colItems = objSWbemServices.ExecQuery(\"Select * from Win32_Printer\") for objItem in colItems: print \"Attributes: \", objItem.Attributes print \"Availability: \", objItem.Availability z = objItem.AvailableJobSheets if z is None: a = 1 else: for x in z: print \"Available Job Sheets: \", x print \"Average Pages Per Minute: \", objItem.AveragePagesPerMinute z = objItem.Capabilities if z is None: a = 1 else: for x in z: print \"Capabilities: \", x z = objItem.CapabilityDescriptions if z is None: a = 1 else: for x in z: print \"Capability Descriptions: \", x print \"Caption: \", objItem.Caption z = objItem.CharSetsSupported if z is None: a = 1 else: for x in z: print \"Char Sets Supported: \", x print \"Comment: \", objItem.Comment print \"Config Manager Error Code: \", objItem.ConfigManagerErrorCode print \"Config Manager User Config: \", objItem.ConfigManagerUserConfig print \"Creation Class Name: \", objItem.CreationClassName z = objItem.CurrentCapabilities if z is None: a = 1 else: for x in z: print \"Current Capabilities: \", x print \"Current Char Set: \", objItem.CurrentCharSet print \"Current Language: \", objItem.CurrentLanguage print \"Current Mime Type: \", objItem.CurrentMimeType print \"Current Natural Language: \", objItem.CurrentNaturalLanguage print \"Current Paper Type: \", objItem.CurrentPaperType print \"Default: \", objItem.Default z = objItem.DefaultCapabilities if z is None: a = 1 else: for x in z: print \"Default Capabilities: \", x print \"Default Copies: \", objItem.DefaultCopies print \"Default Language: \", objItem.DefaultLanguage print \"Default Mime Type: \", objItem.DefaultMimeType print \"Default Number Up: \", objItem.DefaultNumberUp print \"Default Paper Type: \", objItem.DefaultPaperType print \"Default Priority: \", objItem.DefaultPriority print \"Description: \", objItem.Description print \"Detected Error State: \", objItem.DetectedErrorState print \"Device ID: \", objItem.DeviceID print \"Direct: \", objItem.Direct print \"Do Complete First: \", objItem.DoCompleteFirst print \"Driver Name: \", objItem.DriverName print \"Enable BIDI: \", objItem.EnableBIDI print \"Enable Dev Query Print: \", objItem.EnableDevQueryPrint print \"Error Cleared: \", objItem.ErrorCleared print \"Error Description: \", objItem.ErrorDescription z = objItem.ErrorInformation if z is None: a = 1 else: for x in z: print \"Error Information: \", x print \"Extended Detected Error State: \", objItem.ExtendedDetectedErrorState print \"Extended Printer Status: \", objItem.ExtendedPrinterStatus print \"Hidden: \", objItem.Hidden print \"Horizontal Resolution: \", objItem.HorizontalResolution print \"Install Date: \", objItem.InstallDate print \"Job Count Since Last Reset: \", objItem.JobCountSinceLastReset print \"Keep Printed Jobs: \", objItem.KeepPrintedJobs z = objItem.LanguagesSupported if z is None: a = 1 else: for x in z: print \"Languages Supported: \", x print \"Last Error Code: \", objItem.LastErrorCode print \"Local: \", objItem.Local print \"Location: \", objItem.Location print \"Marking Technology: \", objItem.MarkingTechnology print \"Max Copies: \", objItem.MaxCopies print \"Max Number Up: \", objItem.MaxNumberUp print \"Max Size Supported: \", objItem.MaxSizeSupported z = objItem.MimeTypesSupported if z is None: a = 1 else: for x in z: print \"Mime Types Supported: \", x print \"Name: \", objItem.Name z = objItem.NaturalLanguagesSupported if z is None: a = 1 else: for x in z: print \"Natural Languages Supported: \", x print \"Network: \", objItem.Network z = objItem.PaperSizesSupported if z is None: a = 1 else: for x in z: print \"Paper Sizes Supported: \", x z = objItem.PaperTypesAvailable if z is None: a = 1 else: for x in z: print \"Paper Types ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/5bf528c2-367e-4b39-84bf-3d22e7310931/5bf528c2-367e-4b39-84bf-3d22e7310931/:2:0","tags":["Active Directory","HTML"],"title":"List Printer Information","uri":"/printing/print-servers-print-queues-and-print-jobs/5bf528c2-367e-4b39-84bf-3d22e7310931/5bf528c2-367e-4b39-84bf-3d22e7310931/"},{"categories":["Printing"],"content":"Original Links Original Technet URL List Printer Information Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/b4331efb-851b-4c82-a8dd-34959c341f87/b4331efb-851b-4c82-a8dd-34959c341f87/:1:0","tags":["Active Directory","HTML"],"title":"List Printer Information","uri":"/printing/print-servers-print-queues-and-print-jobs/b4331efb-851b-4c82-a8dd-34959c341f87/b4331efb-851b-4c82-a8dd-34959c341f87/"},{"categories":["Printing"],"content":"Output from Technet Gallery Lists information about all the printers connected to a print server. JavaScript var wbemFlagReturnImmediately = 0x10; var wbemFlagForwardOnly = 0x20; var objWMIService = GetObject(\"winmgmts:\\\\\\\\.\\\\root\\\\CIMV2\"); var colItems = objWMIService.ExecQuery(\"SELECT * FROM Win32_Printer\", \"WQL\", wbemFlagReturnImmediately | wbemFlagForwardOnly); var enumItems = new Enumerator(colItems); for (; !enumItems.atEnd(); enumItems.moveNext()) { var objItem = enumItems.item(); WScript.Echo(\"Attributes: \" + objItem.Attributes); WScript.Echo(\"Availability: \" + objItem.Availability); try { WScript.Echo(\"Available Job Sheets: \" + (objItem.AvailableJobSheets.toArray()).join(\",\")); } catch(e) { WScript.Echo(\"Available Job Sheets: null\"); } WScript.Echo(\"Average Pages Per Minute: \" + objItem.AveragePagesPerMinute); try { WScript.Echo(\"Capabilities: \" + (objItem.Capabilities.toArray()).join(\",\")); } catch(e) { WScript.Echo(\"Capabilities: null\"); } try { WScript.Echo(\"Capability Descriptions: \" + (objItem.CapabilityDescriptions.toArray()).join(\",\")); } catch(e) { WScript.Echo(\"Capability Descriptions: null\"); } WScript.Echo(\"Caption: \" + objItem.Caption); try { WScript.Echo(\"Char Sets Supported: \" + (objItem.CharSetsSupported.toArray()).join(\",\")); } catch(e) { WScript.Echo(\"CharSetsSupported: null\"); } WScript.Echo(\"Comment: \" + objItem.Comment); WScript.Echo(\"Config Manager Error Code: \" + objItem.ConfigManagerErrorCode); WScript.Echo(\"Config Manager User Config: \" + objItem.ConfigManagerUserConfig); WScript.Echo(\"Creation Class Name: \" + objItem.CreationClassName); try { WScript.Echo(\"Current Capabilities: \" + (objItem.CurrentCapabilities.toArray()).join(\",\")); } catch(e) { WScript.Echo(\"Current Capabilities: null\"); } WScript.Echo(\"Current Char Set: \" + objItem.CurrentCharSet); WScript.Echo(\"Current Language: \" + objItem.CurrentLanguage); WScript.Echo(\"Current Mime Type: \" + objItem.CurrentMimeType); WScript.Echo(\"Current Natural Language: \" + objItem.CurrentNaturalLanguage); WScript.Echo(\"Current Paper Type: \" + objItem.CurrentPaperType); WScript.Echo(\"Default: \" + objItem.Default); try { WScript.Echo(\"Default Capabilities: \" + (objItem.DefaultCapabilities.toArray()).join(\",\")); } catch(e) { WScript.Echo(\"Default Capabilities: null\"); } WScript.Echo(\"Default Copies: \" + objItem.DefaultCopies); WScript.Echo(\"Default Language: \" + objItem.DefaultLanguage); WScript.Echo(\"Default Mime Type: \" + objItem.DefaultMimeType); WScript.Echo(\"Default Number Up: \" + objItem.DefaultNumberUp); WScript.Echo(\"Default Paper Type: \" + objItem.DefaultPaperType); WScript.Echo(\"Default Priority: \" + objItem.DefaultPriority); WScript.Echo(\"Description: \" + objItem.Description); WScript.Echo(\"Detected Error State: \" + objItem.DetectedErrorState); WScript.Echo(\"Device ID: \" + objItem.DeviceID); WScript.Echo(\"Direct: \" + objItem.Direct); WScript.Echo(\"Do Complete First: \" + objItem.DoCompleteFirst); WScript.Echo(\"Driver Name: \" + objItem.DriverName); WScript.Echo(\"Enable BIDI: \" + objItem.EnableBIDI); WScript.Echo(\"Enable Dev Query Print: \" + objItem.EnableDevQueryPrint); WScript.Echo(\"Error Cleared: \" + objItem.ErrorCleared); WScript.Echo(\"Error Description: \" + objItem.ErrorDescription); try { WScript.Echo(\"Error Information: \" + (objItem.ErrorInformation.toArray()).join(\",\")); } catch(e) { WScript.Echo(\"Error Information: null\"); } WScript.Echo(\"Extended Detected Error State: \" + objItem.ExtendedDetectedErrorState); WScript.Echo(\"Extended Printer Status: \" + objItem.ExtendedPrinterStatus); WScript.Echo(\"Hidden: \" + objItem.Hidden); WScript.Echo(\"Horizontal Resolution: \" + objItem.HorizontalResolution); WScript.Echo(\"Install Date: \" + objItem.InstallDate); WScript.Echo(\"Job Count Since Last Reset: \" + objItem.JobCountSinceLastReset); WScript.Echo(\"Keep Printed Jobs: \" + objItem.KeepPrintedJobs); try { WScript.Echo(\"Languages Supported: \" + (objItem.LanguagesSupported.toArray()).join(\",\")); } catch(e) { WScript.Echo(\"Languages Supported: null\");","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/b4331efb-851b-4c82-a8dd-34959c341f87/b4331efb-851b-4c82-a8dd-34959c341f87/:2:0","tags":["Active Directory","HTML"],"title":"List Printer Information","uri":"/printing/print-servers-print-queues-and-print-jobs/b4331efb-851b-4c82-a8dd-34959c341f87/b4331efb-851b-4c82-a8dd-34959c341f87/"},{"categories":["Printing"],"content":"Original Links Original Technet URL List Printer Information Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/c6020440-e800-4c60-b646-157152553d90/c6020440-e800-4c60-b646-157152553d90/:1:0","tags":["Active Directory","HTML"],"title":"List Printer Information","uri":"/printing/print-servers-print-queues-and-print-jobs/c6020440-e800-4c60-b646-157152553d90/c6020440-e800-4c60-b646-157152553d90/"},{"categories":["Printing"],"content":"Output from Technet Gallery Lists information about all the printers connected to a print server. This script was tested using Object REXX 2.1.0 for Microsoft Windows, available from IBM. Object REXX strComputer = \".\" objWMIService = .OLEObject~GetObject(\"winmgmts:\\\\\"||strComputer||\"\\root\\CIMV2\") do objItem over objWMIService~ExecQuery(\"Select * from Win32_Printer\") say \"Attributes:\" objItem~Attributes say \"Availability:\" objItem~Availability z = objItem~AvailableJobSheets if .NIL \u003c\u003e z then do x over z say objProperty.Name \": \" x end say \"Average Pages Per Minute:\" objItem~AveragePagesPerMinute z = objItem~Capabilities if .NIL \u003c\u003e z then do x over z say objProperty.Name \": \" x end z = objItem~CapabilityDescriptions if .NIL \u003c\u003e z then do x over z say objProperty.Name \": \" x end say \"Caption:\" objItem~Caption z = objItem~CharSetsSupported if .NIL \u003c\u003e z then do x over z say objProperty.Name \": \" x end say \"Comment:\" objItem~Comment say \"Config Manager Error Code:\" objItem~ConfigManagerErrorCode say \"Config Manager User Config:\" objItem~ConfigManagerUserConfig say \"Creation Class Name:\" objItem~CreationClassName z = objItem~CurrentCapabilities if .NIL \u003c\u003e z then do x over z say objProperty.Name \": \" x end say \"Current Char Set:\" objItem~CurrentCharSet say \"Current Language:\" objItem~CurrentLanguage say \"Current Mime Type:\" objItem~CurrentMimeType say \"Current Natural Language:\" objItem~CurrentNaturalLanguage say \"Curren tPaper Type:\" objItem~CurrentPaperType say \"Default:\" objItem~Default z = objItem~DefaultCapabilities if .NIL \u003c\u003e z then do x over z say objProperty.Name \": \" x end say \"Default Copies:\" objItem~DefaultCopies say \"Default Language:\" objItem~DefaultLanguage say \"Default Mime Type:\" objItem~DefaultMimeType say \"Default Number Up:\" objItem~DefaultNumberUp say \"Default Paper Type:\" objItem~DefaultPaperType say \"Default Priority:\" objItem~DefaultPriority say \"Description:\" objItem~Description say \"Detected Error State:\" objItem~DetectedErrorState say \"Device ID:\" objItem~DeviceID say \"Direct:\" objItem~Direct say \"Do Complete First:\" objItem~DoCompleteFirst say \"Driver Name:\" objItem~DriverName say \"Enable BIDI:\" objItem~EnableBIDI say \"Enable Dev Query Print:\" objItem~EnableDevQueryPrint say \"Error Cleared:\" objItem~ErrorCleared say \"Error Description:\" objItem~ErrorDescription z = objItem~ErrorInformation if .NIL \u003c\u003e z then do x over z say objProperty.Name \": \" x end say \"Extended Detected Error State:\" objItem~ExtendedDetectedErrorState say \"Extended Printer Status:\" objItem~ExtendedPrinterStatus say \"Hidden:\" objItem~Hidden say \"Horizontal Resolution:\" objItem~HorizontalResolution say \"Install Date:\" objItem~InstallDate say \"Job Count Since Last Reset:\" objItem~JobCountSinceLastReset say \"Keep Printed Jobs:\" objItem~KeepPrintedJobs z = objItem~LanguagesSupported if .NIL \u003c\u003e z then do x over z say objProperty.Name \": \" x end say \"Last Error Code:\" objItem~LastErrorCode say \"Local:\" objItem~Local say \"Location:\" objItem~Location say \"Marking Technology:\" objItem~MarkingTechnology say \"Max Copies:\" objItem~MaxCopies say \"Max Number Up:\" objItem~MaxNumberUp say \"Max Size Supported:\" objItem~MaxSizeSupported z = objItem~MimeTypesSupported if .NIL \u003c\u003e z then do x over z say objProperty.Name \": \" x end say \"Name:\" objItem~Name z = objItem~NaturalLanguagesSupported if .NIL \u003c\u003e z then do x over z say objProperty.Name \": \" x end say \"Network:\" objItem~Network z = objItem~PaperSizesSupported if .NIL \u003c\u003e z then do x over z say objProperty.Name \": \" x end z = objItem~PaperTypesAvailable if .NIL \u003c\u003e z then do x over z say objProperty.Name \": \" x end say \"Parameters:\" objItem~Parameters say \"PNP Device ID:\" objItem~PNPDeviceID say \"Port Name:\" objItem~PortName z = objItem~PowerManagementCapabilities if .NIL \u003c\u003e z then do x over z say objProperty.Name \": \" x end say \"Power Management Supported:\" objItem~PowerManagementSupported z = objItem~PrinterPaperNames if .NIL \u003c\u003e z then do x over z say objProperty.Name \": \" x end say \"Printer State:\" objIt","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/c6020440-e800-4c60-b646-157152553d90/c6020440-e800-4c60-b646-157152553d90/:2:0","tags":["Active Directory","HTML"],"title":"List Printer Information","uri":"/printing/print-servers-print-queues-and-print-jobs/c6020440-e800-4c60-b646-157152553d90/c6020440-e800-4c60-b646-157152553d90/"},{"categories":["Printing"],"content":"Original Links Original Technet URL List Printer Information Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/list-printer-information-99f2b96d/list-printer-information-99f2b96d/:1:0","tags":["Active Directory","HTML"],"title":"List Printer Information","uri":"/printing/print-servers-print-queues-and-print-jobs/list-printer-information-99f2b96d/list-printer-information-99f2b96d/"},{"categories":["Printing"],"content":"Output from Technet Gallery Lists information about all the printers installed on a machine. The script requires python win32APIs to be installed. win32API is by default available in active state python distribution. win32API for standard python installations can be downloaded from http://sourceforge.net/projects/pywin32/. The script works on python 2.x. It needs little modifications before it can be used with python 3. Python strComputer = \".\" import win32com.client objWMIService = win32com.client.Dispatch(\"WbemScripting.SWbemLocator\") objSWbemServices = objWMIService.ConnectServer(strComputer,\"root\\cimv2\") colItems = objSWbemServices.ExecQuery(\"Select * from Win32_Printer\") for objItem in colItems: print \"Attributes: \" ,objItem.Attributes print \"Availability: \" ,objItem.Availability print \"Available Job Sheets: \" ,objItem.AvailableJobSheets print \"Average Pages Per Minute: \" ,objItem.AveragePagesPerMinute print \"Capabilities: \" ,objItem.Capabilities print \"Capability Descriptions: \" ,objItem.CapabilityDescriptions print \"Caption: \" ,objItem.Caption print \"Character Sets Supported: \" ,objItem.CharSetsSupported print \"Comment: \" ,objItem.Comment print \"Configuration Manager Error Code: \" ,objItem.ConfigManagerErrorCode print \"Configuration Manager User Configuration: \" ,objItem.ConfigManagerUserConfig print \"Creation Class Name: \" ,objItem.CreationClassName print \"Current Capabilities: \" ,objItem.CurrentCapabilities print \"Current Character Set: \" ,objItem.CurrentCharSet print \"Current Language: \" ,objItem.CurrentLanguage print \"Current MIME Type: \" ,objItem.CurrentMimeType print \"Current Natural Language: \" ,objItem.CurrentNaturalLanguage print \"Current Paper Type: \" ,objItem.CurrentPaperType print \"Default: \" ,objItem.Default print \"Default Capabilities: \" ,objItem.DefaultCapabilities print \"Default Copies: \" ,objItem.DefaultCopies print \"Default Language: \" ,objItem.DefaultLanguage print \"Default MIME Type: \" ,objItem.DefaultMimeType print \"Default Number Up: \" ,objItem.DefaultNumberUp print \"Default Paper Type: \" ,objItem.DefaultPaperType print \"Default Priority: \" ,objItem.DefaultPriority print \"Description: \" ,objItem.Description print \"Detected Error State: \" ,objItem.DetectedErrorState print \"Device ID: \" ,objItem.DeviceID print \"Direct: \" ,objItem.Direct print \"Do Complete First: \" ,objItem.DoCompleteFirst print \"Driver Name: \" ,objItem.DriverName print \"Enable BIDI: \" ,objItem.EnableBIDI print \"Enable Device Query Print: \" ,objItem.EnableDevQueryPrint print \"Error Cleared: \" ,objItem.ErrorCleared print \"Error Description: \" ,objItem.ErrorDescription print \"Error Information: \" ,objItem.ErrorInformation print \"Extended Detected Error State: \" ,objItem.ExtendedDetectedErrorState print \"Extended Printer Status: \" ,objItem.ExtendedPrinterStatus print \"Hidden: \" ,objItem.Hidden print \"Horizontal Resolution: \" ,objItem.HorizontalResolution print \"Installation Date: \" ,objItem.InstallDate print \"Job Count Since Last Reset: \" ,objItem.JobCountSinceLastReset print \"Keep Printed Jobs: \" ,objItem.KeepPrintedJobs print \"Languages Supported: \" ,objItem.LanguagesSupported print \"Last Error Code: \" ,objItem.LastErrorCode print \"Local: \" ,objItem.Local print \"Location: \" ,objItem.Location print \"Marking Technology: \" ,objItem.MarkingTechnology print \"Maximum Copies: \" ,objItem.MaxCopies print \"Maximum Number Up: \" ,objItem.MaxNumberUp print \"Maximum Size Supported: \" ,objItem.MaxSizeSupported print \"MIME Types Supported: \" ,objItem.MimeTypesSupported print \"Name: \" ,objItem.Name print \"Natural Languages Supported: \" ,objItem.NaturalLanguagesSupported print \"Network: \" ,objItem.Network print \"Paper Sizes Supported: \" ,objItem.PaperSizesSupported print \"Paper Types Available: \" ,objItem.PaperTypesAvailable print \"Parameters: \" ,objItem.Parameters print \"PNP Device ID: \" ,objItem.PNPDeviceID print \"Port Name: \" ,objItem.PortName print \"Power Management Capabilities: \" ,objItem.PowerManagementCapabilities print \"Power Management Support","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/list-printer-information-99f2b96d/list-printer-information-99f2b96d/:2:0","tags":["Active Directory","HTML"],"title":"List Printer Information","uri":"/printing/print-servers-print-queues-and-print-jobs/list-printer-information-99f2b96d/list-printer-information-99f2b96d/"},{"categories":["Printing"],"content":"Original Links Original Technet URL List Printer Information Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/60796101-c9c4-4ad6-9b14-d9c88dedd842/60796101-c9c4-4ad6-9b14-d9c88dedd842/:1:0","tags":["Active Directory","HTML"],"title":"List Printer Information","uri":"/printing/printer-ports-and-printer-drivers/60796101-c9c4-4ad6-9b14-d9c88dedd842/60796101-c9c4-4ad6-9b14-d9c88dedd842/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **Anonymous Submission Lists information about the printers installed on a print server. Visual Basic ' *** This script generates a spreadsheet containing printer information. It can query one, or multiple servers. ' *** David Wills 1-20-2005 Dim oFSO, oTS, strComputer, strExcelPath, objExcel, objSheet, sheet, intCount Dim objWMIService, colItems, ErrState ' sheet = workbook sheet, intCount = count of workbook sheets sheet = 1 ' Specify path and file name for saved spreadsheet strExcelPath = \"c:\\PrintServer details.xls\" ' Try to start an Excel object On Error Resume Next Set objExcel = CreateObject(\"Excel.Application\") If Err.Number \u003c\u003e 0 Then On Error GoTo 0 Wscript.Echo \"Excel application not found.\" Wscript.Quit End If On Error GoTo 0 ' Set the new workbook to have one sheet initially, in case there's just one server in the list objExcel.SheetsInNewWorkbook = 1 ' Create a new workbook. objExcel.Workbooks.Add ' Open text file for processing Set oFSO = CreateObject(\"Scripting.FileSystemObject\") Set oTS = oFSO.OpenTextFile(\"c:\\printservers.txt\") Do Until oTS.AtEndOfStream ' Get a line from input file strComputer = oTS.ReadLine ' Get the printer information Set objWMIService = GetObject(\"winmgmts:\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colItems = objWMIService.ExecQuery(\"Select * from Win32_Printer\",,48) ' Check to see if this is the first sheet of the workbook If sheet = 1 Then Set objSheet = objExcel.ActiveWorkbook.Worksheets(sheet) objSheet.Name = strComputer Else 'Add a new sheet to the workbook intCount = objExcel.Sheets.Count objExcel.ActiveWorkbook.Sheets.Add,objExcel.sheets(intCount) Set objSheet = objExcel.ActiveWorkbook.Worksheets(sheet) objSheet.Name = strComputer End If ' Adding on error resume next - to deal with objItem not supported On Error Resume Next k=2 ' Populate spreadsheet cells with printer attributes. objSheet.Cells(1, 1).Value = \"Name\" objSheet.Cells(1, 2).Value = \"ShareName\" objSheet.Cells(1, 3).Value = \"Comment\" objSheet.Cells(1, 4).Value = \"Error\" objSheet.Cells(1, 5).Value = \"DriverName\" objSheet.Cells(1, 6).Value = \"EnableBIDI\" objSheet.Cells(1, 7).Value = \"JobCount\" objSheet.Cells(1, 8).Value = \"Location\" objSheet.Cells(1, 9).Value = \"PortName\" objSheet.Cells(1, 10).Value = \"Published\" objSheet.Cells(1, 11).Value = \"Queued\" objSheet.Cells(1, 12).Value = \"Shared\" objSheet.Cells(1, 13).Value = \"Status\" For Each objItem in colItems ' Put error code into human readable form Select Case objItem.DetectedErrorState Case 4 ErrState = \"Out of Paper\" Case 5 ErrState = \"Toner low\" Case 6 ErrState = \"Printing\" Case 9 ErrState = \"Offline\" Case Else ErrState = objItem.DetectedErrorState End Select ' Populate the row with this printer's data objSheet.Cells(k, 1).Value = objItem.Name objSheet.Cells(k, 2).Value = objItem.ShareName objSheet.Cells(k, 3).Value = objItem.Comment objSheet.Cells(k, 4).Value = ErrState objSheet.Cells(k, 5).Value = objItem.DriverName objSheet.Cells(k, 6).Value = objItem.EnableBIDI objSheet.Cells(k, 7).Value = objItem.JobCountSinceLastReset objSheet.Cells(k, 8).Value = objItem.Location objSheet.Cells(k, 9).Value = objItem.PortName objSheet.Cells(k, 10).Value = objItem.Published objSheet.Cells(k, 11).Value = objItem.Queued objSheet.Cells(k, 12).Value = objItem.Shared objSheet.Cells(k, 13).Value = objItem.Status k = k + 1 Next ' Format the spreadsheet. objSheet.Range(\"A1:M1\").Font.Bold = True objSheet.Select objSheet.Range(\"A2\").Select objExcel.ActiveWindow.FreezePanes = True objExcel.Columns(3).ColumnWidth = 25 objExcel.Columns(5).ColumnWidth = 25 objExcel.Columns(6).ColumnWidth = 10 objExcel.Columns(8).ColumnWidth = 25 objExcel.Columns(1).ColumnWidth = 20 objExcel.Columns(9).ColumnWidth = 14 objExcel.Columns(2).ColumnWidth = 15 sheet = sheet + 1 Loop ' Save the spreadsheet and close the workbook. objExcel.ActiveWorkbook.SaveAs strExcelPath objExcel.ActiveWorkbook.Close ' Reset Excel application's SheetsInNewWorkbook to default objExcel.SheetsInNewW","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/60796101-c9c4-4ad6-9b14-d9c88dedd842/60796101-c9c4-4ad6-9b14-d9c88dedd842/:2:0","tags":["Active Directory","HTML"],"title":"List Printer Information","uri":"/printing/printer-ports-and-printer-drivers/60796101-c9c4-4ad6-9b14-d9c88dedd842/60796101-c9c4-4ad6-9b14-d9c88dedd842/"},{"categories":["Printing"],"content":"Original Links Original Technet URL List Printer Port Availability Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/55b0be84-64a2-41e9-9775-f607247641ec/55b0be84-64a2-41e9-9775-f607247641ec/:1:0","tags":["Active Directory","HTML"],"title":"List Printer Port Availability","uri":"/printing/printer-ports-and-printer-drivers/55b0be84-64a2-41e9-9775-f607247641ec/55b0be84-64a2-41e9-9775-f607247641ec/"},{"categories":["Printing"],"content":"Output from Technet Gallery Identifies all the TCP/IP printer ports on a computer, and indicates which ports are being used and which ports are available. Visual Basic Set objDictionary = CreateObject(\"Scripting.Dictionary\") strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colPrinters = objWMIService.ExecQuery _ (\"Select * from Win32_Printer\") For Each objPrinter in colPrinters objDictionary.Add objPrinter.PortName, objPrinter.PortName Next Set colPorts = objWMIService.ExecQuery _ (\"Select * from Win32_TCPIPPrinterPort\") For Each objPort in colPorts If objDictionary.Exists(objPort.Name) Then strUsedPorts = strUsedPorts \u0026 _ objDictionary.Item(objPort.Name) \u0026 VbCrLf Else strFreePorts = strFreePorts \u0026 objPort.Name \u0026 vbCrLf End If Next Wscript.Echo \"The following ports are in use: \" \u0026 VbCrLf \u0026 strUsedPorts Wscript.Echo \"The following ports are available: \" \u0026 VbCrLf \u0026 strFreePorts ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/55b0be84-64a2-41e9-9775-f607247641ec/55b0be84-64a2-41e9-9775-f607247641ec/:2:0","tags":["Active Directory","HTML"],"title":"List Printer Port Availability","uri":"/printing/printer-ports-and-printer-drivers/55b0be84-64a2-41e9-9775-f607247641ec/55b0be84-64a2-41e9-9775-f607247641ec/"},{"categories":["Printing"],"content":"Original Links Original Technet URL List Printer Port Properties Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/3082f39e-577b-4b00-bce9-a25800eb574f/3082f39e-577b-4b00-bce9-a25800eb574f/:1:0","tags":["Active Directory","HTML"],"title":"List Printer Port Properties","uri":"/printing/printer-ports-and-printer-drivers/3082f39e-577b-4b00-bce9-a25800eb574f/3082f39e-577b-4b00-bce9-a25800eb574f/"},{"categories":["Printing"],"content":"Output from Technet Gallery Lists properties of all the TCP/IP printer ports installed on a computer. This script was tested using Object REXX 2.1.0 for Microsoft Windows, available from IBM. Object REXX strComputer = \".\" objWMIService = .OLEObject~GetObject(\"winmgmts:\\\\\"||strComputer||\"\\root\\CIMV2\") do objItem over objWMIService~ExecQuery(\"Select * from Win32_TCPIPPrinterPort\") say \"Byte Count:\" objItem~ByteCount say \"Caption:\" objItem~Caption say \"Creation Class Name:\" objItem~CreationClassName say \"Description:\" objItem~Description say \"Host Address:\" objItem~HostAddress say \"Install Date:\" objItem~InstallDate say \"Name:\" objItem~Name say \"Port Number:\" objItem~PortNumber say \"Protocol:\" objItem~Protocol say \"Queue:\" objItem~Queue say \"SNMP Community:\" objItem~SNMPCommunity say \"SNMP Dev Index:\" objItem~SNMPDevIndex say \"SNMP Enabled:\" objItem~SNMPEnabled say \"Status:\" objItem~Status say \"System Creation Class Name:\" objItem~SystemCreationClassName say \"System Name:\" objItem~SystemName say \"Type:\" objItem~Type end ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/3082f39e-577b-4b00-bce9-a25800eb574f/3082f39e-577b-4b00-bce9-a25800eb574f/:2:0","tags":["Active Directory","HTML"],"title":"List Printer Port Properties","uri":"/printing/printer-ports-and-printer-drivers/3082f39e-577b-4b00-bce9-a25800eb574f/3082f39e-577b-4b00-bce9-a25800eb574f/"},{"categories":["Printing"],"content":"Original Links Original Technet URL List Printer Port Properties Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/32ee7696-0e6c-4d6c-b439-a4ef62d17c0f/32ee7696-0e6c-4d6c-b439-a4ef62d17c0f/:1:0","tags":["Active Directory","HTML"],"title":"List Printer Port Properties","uri":"/printing/printer-ports-and-printer-drivers/32ee7696-0e6c-4d6c-b439-a4ef62d17c0f/32ee7696-0e6c-4d6c-b439-a4ef62d17c0f/"},{"categories":["Printing"],"content":"Output from Technet Gallery Lists properties of all the TCP/IP printer ports installed on a computer. This script requires both Windows PowerShell and the corresponding version of the .NET Framework. For more information on downloading these items see the Windows PowerShell download page (right). $strComputer = \".\" $colItems = get-wmiobject -class \"Win32_TCPIPPrinterPort\" -namespace \"root\\CIMV2\" ` -computername $strComputer foreach ($objItem in $colItems) { write-host \"Byte Count: \" $objItem.ByteCount write-host \"Caption: \" $objItem.Caption write-host \"Creation Class Name: \" $objItem.CreationClassName write-host \"Description: \" $objItem.Description write-host \"Host Address: \" $objItem.HostAddress write-host \"Installation Date: \" $objItem.InstallDate write-host \"Name: \" $objItem.Name write-host \"Port Number: \" $objItem.PortNumber write-host \"Protocol: \" $objItem.Protocol write-host \"Queue: \" $objItem.Queue write-host \"SNMP Community: \" $objItem.SNMPCommunity write-host \"SNMP Device Index: \" $objItem.SNMPDevIndex write-host \"SNMP Enabled: \" $objItem.SNMPEnabled write-host \"Status: \" $objItem.Status write-host \"System Creation Class Name: \" $objItem.SystemCreationClassName write-host \"System Name: \" $objItem.SystemName write-host \"Type: \" $objItem.Type write-host } ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/32ee7696-0e6c-4d6c-b439-a4ef62d17c0f/32ee7696-0e6c-4d6c-b439-a4ef62d17c0f/:2:0","tags":["Active Directory","HTML"],"title":"List Printer Port Properties","uri":"/printing/printer-ports-and-printer-drivers/32ee7696-0e6c-4d6c-b439-a4ef62d17c0f/32ee7696-0e6c-4d6c-b439-a4ef62d17c0f/"},{"categories":["Printing"],"content":"Original Links Original Technet URL List Printer Port Properties Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/67049019-da01-490a-b160-92dfdf8547df/67049019-da01-490a-b160-92dfdf8547df/:1:0","tags":["Active Directory","HTML"],"title":"List Printer Port Properties","uri":"/printing/printer-ports-and-printer-drivers/67049019-da01-490a-b160-92dfdf8547df/67049019-da01-490a-b160-92dfdf8547df/"},{"categories":["Printing"],"content":"Output from Technet Gallery Lists properties of all the TCP/IP printer ports installed on a computer. This script was tested using Perl 5.8.0.804 for Microsoft Windows, available from ActiveState. Perl use Win32::OLE('in'); use constant wbemFlagReturnImmediately =\u003e 0x10; use constant wbemFlagForwardOnly =\u003e 0x20; $computer = \".\"; $objWMIService = Win32::OLE-\u003eGetObject (\"winmgmts:\\\\\\\\$computer\\\\root\\\\CIMV2\") or die \"WMI connection failed.\\n\"; $colItems = $objWMIService-\u003eExecQuery (\"SELECT * FROM Win32_TCPIPPrinterPort\",\"WQL\",wbemFlagReturnImmediately | wbemFlagForwardOnly); foreach my $objItem (in $colItems) { print \"Byte Count: $objItem-\u003e{ByteCount}\\n\"; print \"Caption: $objItem-\u003e{Caption}\\n\"; print \"Creation Class Name: $objItem-\u003e{CreationClassName}\\n\"; print \"Description: $objItem-\u003e{Description}\\n\"; print \"Host Address: $objItem-\u003e{HostAddress}\\n\"; print \"Install Date: $objItem-\u003e{InstallDate}\\n\"; print \"Name: $objItem-\u003e{Name}\\n\"; print \"Port Number: $objItem-\u003e{PortNumber}\\n\"; print \"Protocol: $objItem-\u003e{Protocol}\\n\"; print \"Queue: $objItem-\u003e{Queue}\\n\"; print \"SNMP Community: $objItem-\u003e{SNMPCommunity}\\n\"; print \"SNMP Dev Index: $objItem-\u003e{SNMPDevIndex}\\n\"; print \"SNMP Enabled: $objItem-\u003e{SNMPEnabled}\\n\"; print \"Status: $objItem-\u003e{Status}\\n\"; print \"System Creation Class Name: $objItem-\u003e{SystemCreationClassName}\\n\"; print \"System Name: $objItem-\u003e{SystemName}\\n\"; print \"Type: $objItem-\u003e{Type}\\n\"; print \"\\n\"; } ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/67049019-da01-490a-b160-92dfdf8547df/67049019-da01-490a-b160-92dfdf8547df/:2:0","tags":["Active Directory","HTML"],"title":"List Printer Port Properties","uri":"/printing/printer-ports-and-printer-drivers/67049019-da01-490a-b160-92dfdf8547df/67049019-da01-490a-b160-92dfdf8547df/"},{"categories":["Printing"],"content":"Original Links Original Technet URL List Printer Port Properties Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/8dec37aa-c772-4c55-9404-fa05dfad8330/8dec37aa-c772-4c55-9404-fa05dfad8330/:1:0","tags":["Active Directory","HTML"],"title":"List Printer Port Properties","uri":"/printing/printer-ports-and-printer-drivers/8dec37aa-c772-4c55-9404-fa05dfad8330/8dec37aa-c772-4c55-9404-fa05dfad8330/"},{"categories":["Printing"],"content":"Output from Technet Gallery Lists properties of all the TCP/IP printer ports installed on a computer. JavaScript var wbemFlagReturnImmediately = 0x10; var wbemFlagForwardOnly = 0x20; var objWMIService = GetObject(\"winmgmts:\\\\\\\\.\\\\root\\\\CIMV2\"); var colItems = objWMIService.ExecQuery(\"SELECT * FROM Win32_TCPIPPrinterPort\", \"WQL\", wbemFlagReturnImmediately | wbemFlagForwardOnly); var enumItems = new Enumerator(colItems); for (; !enumItems.atEnd(); enumItems.moveNext()) { var objItem = enumItems.item(); WScript.Echo(\"Byte Count: \" + objItem.ByteCount); WScript.Echo(\"Caption: \" + objItem.Caption); WScript.Echo(\"Creation Class Name: \" + objItem.CreationClassName); WScript.Echo(\"Description: \" + objItem.Description); WScript.Echo(\"Host Address: \" + objItem.HostAddress); WScript.Echo(\"Install Date: \" + objItem.InstallDate); WScript.Echo(\"Name: \" + objItem.Name); WScript.Echo(\"Port Number: \" + objItem.PortNumber); WScript.Echo(\"Protocol: \" + objItem.Protocol); WScript.Echo(\"Queue: \" + objItem.Queue); WScript.Echo(\"SNMP Community: \" + objItem.SNMPCommunity); WScript.Echo(\"SNMP Dev Index: \" + objItem.SNMPDevIndex); WScript.Echo(\"SNMP Enabled: \" + objItem.SNMPEnabled); WScript.Echo(\"Status: \" + objItem.Status); WScript.Echo(\"System Creation Class Name: \" + objItem.SystemCreationClassName); WScript.Echo(\"System Name: \" + objItem.SystemName); WScript.Echo(\"Type: \" + objItem.Type); WScript.Echo(); } ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/8dec37aa-c772-4c55-9404-fa05dfad8330/8dec37aa-c772-4c55-9404-fa05dfad8330/:2:0","tags":["Active Directory","HTML"],"title":"List Printer Port Properties","uri":"/printing/printer-ports-and-printer-drivers/8dec37aa-c772-4c55-9404-fa05dfad8330/8dec37aa-c772-4c55-9404-fa05dfad8330/"},{"categories":["Printing"],"content":"Original Links Original Technet URL List Printer Port Properties Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/cee4b0b7-cd8d-43d3-ab1f-be6bce085469/cee4b0b7-cd8d-43d3-ab1f-be6bce085469/:1:0","tags":["Active Directory","HTML"],"title":"List Printer Port Properties","uri":"/printing/printer-ports-and-printer-drivers/cee4b0b7-cd8d-43d3-ab1f-be6bce085469/cee4b0b7-cd8d-43d3-ab1f-be6bce085469/"},{"categories":["Printing"],"content":"Output from Technet Gallery Lists properties of all the TCP/IP printer ports installed on a computer. This script was tested using Python 2.2.2-224 for Microsoft Windows, available from ActiveState. Python import win32com.client strComputer = \".\" objWMIService = win32com.client.Dispatch(\"WbemScripting.SWbemLocator\") objSWbemServices = objWMIService.ConnectServer(strComputer,\"root\\cimv2\") colItems = objSWbemServices.ExecQuery(\"Select * from Win32_TCPIPPrinterPort\") for objItem in colItems: print \"Byte Count: \", objItem.ByteCount print \"Caption: \", objItem.Caption print \"Creation Class Name: \", objItem.CreationClassName print \"Description: \", objItem.Description print \"Host Address: \", objItem.HostAddress print \"Install Date: \", objItem.InstallDate print \"Name: \", objItem.Name print \"Port Number: \", objItem.PortNumber print \"Protocol: \", objItem.Protocol print \"Queue: \", objItem.Queue print \"SNMP Community: \", objItem.SNMPCommunity print \"SNMP Dev Index: \", objItem.SNMPDevIndex print \"SNMP Enabled: \", objItem.SNMPEnabled print \"Status: \", objItem.Status print \"System Creation Class Name: \", objItem.SystemCreationClassName print \"System Name: \", objItem.SystemName print \"Type: \", objItem.Type ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/cee4b0b7-cd8d-43d3-ab1f-be6bce085469/cee4b0b7-cd8d-43d3-ab1f-be6bce085469/:2:0","tags":["Active Directory","HTML"],"title":"List Printer Port Properties","uri":"/printing/printer-ports-and-printer-drivers/cee4b0b7-cd8d-43d3-ab1f-be6bce085469/cee4b0b7-cd8d-43d3-ab1f-be6bce085469/"},{"categories":["Printing"],"content":"Original Links Original Technet URL List Printer Port Properties Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/eb9bcdbf-4f11-484c-b481-a40b332385fe/eb9bcdbf-4f11-484c-b481-a40b332385fe/:1:0","tags":["Active Directory","HTML"],"title":"List Printer Port Properties","uri":"/printing/printer-ports-and-printer-drivers/eb9bcdbf-4f11-484c-b481-a40b332385fe/eb9bcdbf-4f11-484c-b481-a40b332385fe/"},{"categories":["Printing"],"content":"Output from Technet Gallery Lists properties of all the TCP/IP printer ports installed on a computer. Visual Basic strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colPorts = objWMIService.ExecQuery _ (\"Select * from Win32_TCPIPPrinterPort\") For Each objPort in colPorts Wscript.Echo \"Description: \" \u0026 objPort.Description Wscript.Echo \"Host Address: \" \u0026 objPort.HostAddress Wscript.Echo \"Name: \" \u0026 objPort.Name Wscript.Echo \"Port Number: \" \u0026 objPort.PortNumber Wscript.Echo \"Protocol: \" \u0026 objPort.Protocol Wscript.Echo \"SNMP Community: \" \u0026 objPort.SNMPCommunity Wscript.Echo \"SNMP Dev Index: \" \u0026 objPort.SnMPDevIndex Wscript.Echo \"SNMP Enabled: \" \u0026 objPort.SNMPEnabled Next ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/eb9bcdbf-4f11-484c-b481-a40b332385fe/eb9bcdbf-4f11-484c-b481-a40b332385fe/:2:0","tags":["Active Directory","HTML"],"title":"List Printer Port Properties","uri":"/printing/printer-ports-and-printer-drivers/eb9bcdbf-4f11-484c-b481-a40b332385fe/eb9bcdbf-4f11-484c-b481-a40b332385fe/"},{"categories":["Printing"],"content":"Original Links Original Technet URL List Printer Port Properties Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/f802c1ea-1c7c-4ba6-8309-a83ad14b0b78/f802c1ea-1c7c-4ba6-8309-a83ad14b0b78/:1:0","tags":["Active Directory","HTML"],"title":"List Printer Port Properties","uri":"/printing/printer-ports-and-printer-drivers/f802c1ea-1c7c-4ba6-8309-a83ad14b0b78/f802c1ea-1c7c-4ba6-8309-a83ad14b0b78/"},{"categories":["Printing"],"content":"Output from Technet Gallery Lists properties of all the TCP/IP printer ports installed on a computer. This script was tested using Kixtart 2001 (412) for Microsoft Windows, available from Kixtart.org. Kixtart $strComputer = \".\" $objWMIService = GetObject(\"winmgmts:\\\\\"+ $strComputer + \"\\root\\cimv2\") $colItems = $objWMIService.ExecQuery(\"Select * from Win32_TCPIPPrinterPort\") For Each $objItem in $colItems ? \"Byte Count:\" + $objItem.ByteCount ? \"Caption:\" + $objItem.Caption ? \"Creation Class Name:\" + $objItem.CreationClassName ? \"Description:\" + $objItem.Description ? \"Host Address:\" + $objItem.HostAddress ? \"Install Date:\" + $objItem.InstallDate ? \"Name:\" + $objItem.Name ? \"Port Number:\" + $objItem.PortNumber ? \"Protocol:\" + $objItem.Protocol ? \"Queue:\" + $objItem.Queue ? \"SNMP Community:\" + $objItem.SNMPCommunity ? \"SNMP Dev Index:\" + $objItem.SNMPDevIndex ? \"SNMP Enabled:\" + $objItem.SNMPEnabled ? \"Status:\" + $objItem.Status ? \"System Creation Class Name:\" + $objItem.SystemCreationClassName ? \"System Name:\" + $objItem.SystemName ? \"Type:\" + $objItem.Type Next ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/f802c1ea-1c7c-4ba6-8309-a83ad14b0b78/f802c1ea-1c7c-4ba6-8309-a83ad14b0b78/:2:0","tags":["Active Directory","HTML"],"title":"List Printer Port Properties","uri":"/printing/printer-ports-and-printer-drivers/f802c1ea-1c7c-4ba6-8309-a83ad14b0b78/f802c1ea-1c7c-4ba6-8309-a83ad14b0b78/"},{"categories":["Printing"],"content":"Original Links Original Technet URL List printer properties as defined in class Win32_Printer - alpha version Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/list-printer-properties-as-b02957b4/list-printer-properties-as-b02957b4/:1:0","tags":["Active Directory","HTML"],"title":"List printer properties as defined in class Win32_Printer - alpha version","uri":"/printing/print-servers-print-queues-and-print-jobs/list-printer-properties-as-b02957b4/list-printer-properties-as-b02957b4/"},{"categories":["Printing"],"content":"Output from Technet Gallery List printer properties as defined in class Win32_Printer. Details https://msdn.microsoft.com/en-us/library/aa394363(v=vs.85).aspx as of 08/22/17 Script uses 3 files  1. list of servers in FQDN/IP format - d:/servers.txt  2. Output CSV file - in script d:\\output.txt  3. Json file contains description of properties of Win32_Printer to be displayed, PropertyValue needs to be set to TRUE Attachment contains script and win32print.json files function Get-PrinterProperties{ \u003c# .SYNOPSIS List printer properties as defined in class Win32_Printer. Details https://msdn.microsoft.com/en-us/library/aa394363(v=vs.85).aspx as of 08/22/17 .DESCRIPTION Script is using 3 files 1. list of servers in FQDN or IP format - in script d:/servers.txt 2. Output CSV file - in script d:\\output.txt 3. Json file contains description of properties of Win32_Printer to be displayed, PropertyValue needs to be set to true - in script winprint32.json .PARAMETER No Parameters .NOTES Author : John Gakhokidze Requires: PowerShell Version 2.0, Remote Registry Version: 0.1 Alpha DateUpdated: 08/22/2017 .LINK https://gallery.technet.microsoft.com/scriptcenter/List-printer-properties-as-b02957b4 .EXAMPLE Get-PrinterProperties #\u003e PARAM( ) BEGIN { $servers = get-content \"d:\\servers.txt\" $scanresult =\"d:\\output.txt\" $json_file=get-content \"d:\\winprint32.json\" -Raw $json_object=ConvertFrom-Json -InputObject $json_file [string[]]$variables=@() $arrayindex=0 $output='' Clear-Content -Path $scanresult foreach ($n in $json_object.winprint32){ if ($n.Value -like 'TRUE'){ $intermediateValue=$n.PrinterProperty $variables=$variables+$intermediateValue $arrayindex=$arrayindex+1 } } function write_headers { $n=0 $output=\"Printer Name;Port Name;Port HostAddress;Is Port Pingable\" While ($n -lt $arrayindex){ $intermediateValue=$variables[$n] $output=$output+\";\"+$intermediateValue $n=$n+1 } $output=$output+\"`n\" Write-Output $output|Format-table |Out-file -FilePath $scanresult -Append $output='' $n=0 } write_headers } PROCESS { foreach ($Printserver in $servers){ $Printers = Get-WMIObject Win32_Printer -computername $Printserver $Ports = Get-WmiObject Win32_TcpIpPrinterPort -computername $Printserver foreach ($Printer in $Printers) { foreach ($Port in $Ports) { $n=0 if ($Port.Name -eq $Printer.PortName) { $ok = Test-Connection $Port.HostAddress -Count 1 -Quiet #Write-Host $Printer.Name+\",\"+$Port.Name+\",\"+$Port.HostAddress+\",\"+$ok+\",\" $output=$Printer.Name+\";\"+$Port.Name+\";\"+$Port.HostAddress+\";\"+$ok While ($n -lt $arrayindex){ $intermediateValue=$variables[$n] $output=$output+\";\"+$Printer.$intermediateValue $n=$n+1 } $output=$output+\"`n\" Write-Output $output|Format-table |Out-file -FilePath $scanresult -Append $output='' } } } } } END { #Write-Host \"Script completed\" } } ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/list-printer-properties-as-b02957b4/list-printer-properties-as-b02957b4/:2:0","tags":["Active Directory","HTML"],"title":"List printer properties as defined in class Win32_Printer - alpha version","uri":"/printing/print-servers-print-queues-and-print-jobs/list-printer-properties-as-b02957b4/list-printer-properties-as-b02957b4/"},{"categories":["Printing"],"content":"Original Links Original Technet URL List the Printers on a Print Server Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/dd99efa1-9959-45cd-b722-44d31978ef8d/dd99efa1-9959-45cd-b722-44d31978ef8d/:1:0","tags":["Active Directory","HTML"],"title":"List the Printers on a Print Server","uri":"/printing/printer-ports-and-printer-drivers/dd99efa1-9959-45cd-b722-44d31978ef8d/dd99efa1-9959-45cd-b722-44d31978ef8d/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **Randy Reimers Builds an Excel spreadsheet with information about all the printers in a print server. Visual Basic ' Access a print server, get information about all printers on the server, ' and build an Excel spreadsheet with the information. You must have power ' user or Administrator rights to the print server, and need to have ' Microsoft Excel installed on the PC you are running this from. ' Randy Reimers - 6-2-04 On Error Resume Next Dim strComputer, strExcelPath, objExcel, objSheet, k, objGroup Dim objWMIService, colItems, ErrState, Sheet 'Sheet = spreadsheet page, k = row in sheet Sheet = 1 k = 2 strComputer = InputBox (\"Please type the print server name to check, \" \u0026 vbCrLf \u0026 _ \"Else enter ALL for all CC print servers\", \"Server Name\",\"CCPS01\") if strComputer = \"\" then WScript.quit end if strExcelPath = InputBox (\"Please enter the path to save file to: \", \"File path\", \"F:\\\") strExcelPath = strExcelPath \u0026 \"Printers_\" \u0026 strComputer \u0026 \".xls\" Set objWMIService = GetObject(\"winmgmts:\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colItems = objWMIService.ExecQuery(\"Select * from Win32_Printer\",,48) ' Bind to Excel object. On Error Resume Next Set objExcel = CreateObject(\"Excel.Application\") If Err.Number \u003c\u003e 0 Then On Error GoTo 0 Wscript.Echo \"Excel application not found.\" Wscript.Quit End If On Error GoTo 0 ' Create a new workbook. objExcel.Workbooks.Add 'Change this to fit your server situation Select Case UCase(strComputer) Case \"ALL\" PrintServer(\"CCPS01\") Sheet = Sheet + 1 PrintServer(\"IRGFS01\") Sheet = Sheet + 1 PrintServer(\"CCFLDR01\") Case Else PrintServer(strComputer) End Select Function PrintServer(strComputer) k=2 Set objWMIService = GetObject(\"winmgmts:\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colItems = objWMIService.ExecQuery(\"Select * from Win32_Printer\",,48) ' Bind to worksheet. Set objSheet = objExcel.ActiveWorkbook.Worksheets(Sheet) objSheet.Name = strComputer ' Populate spreadsheet cells with printer attributes. objSheet.Cells(1, 1).Value = \"Name\" objSheet.Cells(1, 2).Value = \"ShareName\" objSheet.Cells(1, 3).Value = \"Comment\" objSheet.Cells(1, 4).Value = \"Error\" objSheet.Cells(1, 5).Value = \"DriverName\" objSheet.Cells(1, 6).Value = \"EnableBIDI\" objSheet.Cells(1, 7).Value = \"JobCount\" objSheet.Cells(1, 8).Value = \"Location\" objSheet.Cells(1, 9).Value = \"PortName\" objSheet.Cells(1, 10).Value = \"Published\" objSheet.Cells(1, 11).Value = \"Queued\" objSheet.Cells(1, 12).Value = \"Shared\" objSheet.Cells(1, 13).Value = \"Status\" For Each objItem in colItems 'put error code into human readable form Select Case objItem.DetectedErrorState Case 4 ErrState = \"Out of Paper\" Case 5 ErrState = \"Toner low\" Case 6 ErrState = \"Printing\" Case 9 ErrState = \"Offline\" Case Else ErrState = objItem.DetectedErrorState End Select 'populate the row with this printer's data objSheet.Cells(k, 1).Value = objItem.Name objSheet.Cells(k, 2).Value = objItem.ShareName objSheet.Cells(k, 3).Value = objItem.Comment objSheet.Cells(k, 4).Value = ErrState objSheet.Cells(k, 5).Value = objItem.DriverName objSheet.Cells(k, 6).Value = objItem.EnableBIDI objSheet.Cells(k, 7).Value = objItem.JobCountSinceLastReset objSheet.Cells(k, 8).Value = objItem.Location objSheet.Cells(k, 9).Value = objItem.PortName objSheet.Cells(k, 10).Value = objItem.Published objSheet.Cells(k, 11).Value = objItem.Queued objSheet.Cells(k, 12).Value = objItem.Shared objSheet.Cells(k, 13).Value = objItem.Status k = k + 1 Next ' Format the spreadsheet. objSheet.Range(\"A1:M1\").Font.Bold = True objSheet.Select objSheet.Range(\"A2\").Select objExcel.ActiveWindow.FreezePanes = True objExcel.Columns(3).ColumnWidth = 25 objExcel.Columns(5).ColumnWidth = 25 objExcel.Columns(6).ColumnWidth = 10 objExcel.Columns(8).ColumnWidth = 25 objExcel.Columns(1).ColumnWidth = 20 objExcel.Columns(9).ColumnWidth = 14 objExcel.Columns(2).ColumnWidth = 15 End Function ' Save the spreadsheet and close the workbook. objExcel.ActiveWorkbook.SaveAs strExcelPath objExcel.ActiveWorkb","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/dd99efa1-9959-45cd-b722-44d31978ef8d/dd99efa1-9959-45cd-b722-44d31978ef8d/:2:0","tags":["Active Directory","HTML"],"title":"List the Printers on a Print Server","uri":"/printing/printer-ports-and-printer-drivers/dd99efa1-9959-45cd-b722-44d31978ef8d/dd99efa1-9959-45cd-b722-44d31978ef8d/"},{"categories":["Printing"],"content":"Original Links Original Technet URL ListSharedPrintersAddPrintConnection.ps1 Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/client-side-printing/b7f74333-e78b-49d8-b23a-f1307d5b1ee6/b7f74333-e78b-49d8-b23a-f1307d5b1ee6/:1:0","tags":["Active Directory","HTML"],"title":"ListSharedPrintersAddPrintConnection.ps1","uri":"/printing/client-side-printing/b7f74333-e78b-49d8-b23a-f1307d5b1ee6/b7f74333-e78b-49d8-b23a-f1307d5b1ee6/"},{"categories":["Printing"],"content":"Output from Technet Gallery ","date":"2019-12-01","objectID":"/printing/client-side-printing/b7f74333-e78b-49d8-b23a-f1307d5b1ee6/b7f74333-e78b-49d8-b23a-f1307d5b1ee6/:2:0","tags":["Active Directory","HTML"],"title":"ListSharedPrintersAddPrintConnection.ps1","uri":"/printing/client-side-printing/b7f74333-e78b-49d8-b23a-f1307d5b1ee6/b7f74333-e78b-49d8-b23a-f1307d5b1ee6/"},{"categories":["Printing"],"content":"Description This script allows you to list all shared printers on a remote computer. In addition, it gives you the ability to add a printer connection from the remote computer to your local computer. Example of usage: Add printer connection: -printerpath “\\berlin\\testprinter” OR list printers: -computer berlin -list This script was discussed in theHey Scripting Guy article from 5/19/2009. ","date":"2019-12-01","objectID":"/printing/client-side-printing/b7f74333-e78b-49d8-b23a-f1307d5b1ee6/b7f74333-e78b-49d8-b23a-f1307d5b1ee6/:3:0","tags":["Active Directory","HTML"],"title":"ListSharedPrintersAddPrintConnection.ps1","uri":"/printing/client-side-printing/b7f74333-e78b-49d8-b23a-f1307d5b1ee6/b7f74333-e78b-49d8-b23a-f1307d5b1ee6/"},{"categories":["Printing"],"content":"Script PowerShell # ------------------------------------------------------------------------ # NAME: ListSharedPrintersAddPrintConnection.ps1 # AUTHOR: ed wilson, Microsoft # DATE: 5/17/2009 # # KEYWORDS: Win32_Printer, AddPrinterConnection # List shared Printers, function, evaluate return value # COMMENTS: This script will list shared printers on a # remote comptuer. It also gives you the ability to add a # printer connection from the remote computer to your # computer. # Add printer connection: -printerpath \"\\\\berlin\\testprinter\" # list printers: -computer berlin -list # HSG-5/19/2009 # ------------------------------------------------------------------------ Param($computer, $printerPath, [switch]$list) Function Add-PrinterConnection([string]$printerPath) { Write-Host -foregroundcolor cyan \"Adding printer $printerpath\" $printClass = [wmiclass]\"win32_printer\" $printClass.AddPrinterConnection($printerPath) } #end Add-PrinterConnection Function Get-Printer($computer) { Get-WmiObject -class Win32_Printer -computer $computer } #end Get-Printer Function Format-Printer($printObject) { Write-Host -foregroundcolor cyan \"Shared printers on $computer\" $printObject | Where-Object { $_.sharename } | Format-Table -property sharename, location, comment -autosize -wrap } #end Format-Printer Function Get-SuccessCode($code) { if($code.ReturnValue -eq 0) { Write-Host -foregroundcolor green \"Add Printer connection suceeded!\" } Else { Write-Host -foregroundcolor red \"Add Printer connection failed with $($code.returnvalue)\" } } #end get-successcode # *** Entry Point to Script *** if($list) { Format-Printer(Get-Printer($computer)) ; exit } if($printerPath) { Get-SuccessCode -code (Add-PrinterConnection($printerPath)) ; exit } Click here to add your script. ","date":"2019-12-01","objectID":"/printing/client-side-printing/b7f74333-e78b-49d8-b23a-f1307d5b1ee6/b7f74333-e78b-49d8-b23a-f1307d5b1ee6/:4:0","tags":["Active Directory","HTML"],"title":"ListSharedPrintersAddPrintConnection.ps1","uri":"/printing/client-side-printing/b7f74333-e78b-49d8-b23a-f1307d5b1ee6/b7f74333-e78b-49d8-b23a-f1307d5b1ee6/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Manage Network Printers Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/ea85a33b-6690-4910-b83d-6b993e57ba54/ea85a33b-6690-4910-b83d-6b993e57ba54/:1:0","tags":["Active Directory","HTML"],"title":"Manage Network Printers","uri":"/printing/printer-ports-and-printer-drivers/ea85a33b-6690-4910-b83d-6b993e57ba54/ea85a33b-6690-4910-b83d-6b993e57ba54/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **Frank Methorst Manages a user’s network printers. Visual Basic '========================================================================== ' ' VBScript Source File -- Created with SAPIEN Technologies PrimalScript 4.0 ' ' NAME: ManagePrinters.vbs 1.0 ' ' CREATED : 10/17/2006 ' CREATED BY : Frank Methorst ' MODIFIED : ' MODIFIED BY : ' ' ' COMMENT: This script demonstrates printer management. The code would ' likely be part of a logon script. Local printers are not affected by ' this script ' ' '========================================================================== ' ' Variable Prefix Standards: ' ' Single letter lower case prefixes should be used ' to identify the type of variable ' ' s = String (i.e. sComputer, sUser, sDomain etc.) ' o = Object (i.e. oFSO, oShell, oNetwork, oWMI etc.) ' a = Array (i.e. aHotfixes, aBranches, etc.) ' c = Collection (i.e. cComputers, cUsers, cOUs etc.) ' i = Integer (i.e. i, iNumber, etc.) ' d = Date/Time (i.e. dDate, dStartTime, dToday etc.) ' b = Boolean (i.e. bAnswer, bOutput etc.) ' e = Error (i.e. eNumber, eDescription etc.) ' vb = builtin (i.e. vbCRLF, vbTAB, vbLongDate etc.) ' ' ' Constant Standards: ' ' Constants should be identified by using upper case letters ' exclusively separated by underscores: ' ' i.e. OVERWRITE_EXISTING, FILE_SHARE, MAXIMUM_CONNECTIONS etc. ' ' '========================================================================== '=================== Script Initialization ================================ Option Explicit On Error Resume Next '=================== Constant / Variable Declaration ====================== Dim oAssignedPrinters Dim sComputer Dim sDefaultPrinter Dim oInstalledPrinters Dim oNetwork Dim oPrinter '=================== Object Creation ====================================== Set oAssignedPrinters = CreateObject(\"Scripting.Dictionary\") Set oNetwork = WScript.CreateObject(\"Wscript.Network\") Set oInstalledPrinters = CreateObject(\"Scripting.Dictionary\") '=================== Main Logic =========================================== ' Determine the computer name sComputer = oNetwork.ComputerName ' Determine which printers the user has installed. Add user's installed printers ' to oInstalledPrinters dictionary object to allow comparison with oAssignedPrinters ' dictionary object. Printers that are present in oAssignedPrinters but not ' oInstalledPrinters will be installed. Printers that are present in oInstalledPrinters ' but not oAssignedPrinters will be removed. Determine the user's default printer. ' IMPORTANT: printer name and printer share name MUST be the same since this script ' compares the two. If they are not printers will be removed and reinstalled ' each time the script runs For Each oPrinter In GetPrinters(sComputer)oInstalledPrinters.Add oPrinter.Name, Null If oPrinter.Default = True Then sDefaultPrinter = oPrinter.NameEnd If Next ' Add Printers to the oAssignedPrinters dictionary object. Printer assignment ' can be based on any criteria you require. Through the use of If and Select ' statements you can selectively target printer assignment. ' The following are some examples: ' Portion of a computer name ' User group membership ' Existence of a specific application ' IP Address oAssignedPrinters.Add \"\\\\Printer\\Infrastructure4\", Null oAssignedPrinters.Add \"\\\\printer\\Inventure5\", Null oAssignedPrinters.Add \"\\\\printer\\xerox65-4f\", Null oAssignedPrinters.Add \"\\\\Printer\\Infrastructure7\", Null ' Delete any printer that is not currently assigned to the PC. For Each oPrinter In oInstalledPrintersIf Not oAssignedPrinters.Exists(oPrinter) Then oNetwork.RemovePrinterConnection oPrinterEnd If Next ' Add all printers assigned to the PC. For Each oPrinter In oAssignedPrintersIf Not oInstalledPrinters.Exists(oPrinter) Then oNetwork.AddWindowsPrinterConnection oPrinterEnd If Next '=================== Cleanup ============================================== Set oAssignedPrinters = Nothing Set oInstalledPrinters = Nothing S","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/ea85a33b-6690-4910-b83d-6b993e57ba54/ea85a33b-6690-4910-b83d-6b993e57ba54/:2:0","tags":["Active Directory","HTML"],"title":"Manage Network Printers","uri":"/printing/printer-ports-and-printer-drivers/ea85a33b-6690-4910-b83d-6b993e57ba54/ea85a33b-6690-4910-b83d-6b993e57ba54/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Manage Printers and Printer Drivers Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/710bb2ad-9a8d-42cb-b142-cda2c1452548/710bb2ad-9a8d-42cb-b142-cda2c1452548/:1:0","tags":["Active Directory","HTML"],"title":"Manage Printers and Printer Drivers","uri":"/printing/printer-ports-and-printer-drivers/710bb2ad-9a8d-42cb-b142-cda2c1452548/710bb2ad-9a8d-42cb-b142-cda2c1452548/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **Aldo Cabrera Manages printer drivers and printer ports. Visual Basic 'This Script will add a Printer Drivers for a printer that is not in the Cab folder, 'Add or Adjust a port Ip Address or name, 'or Add or Adjust a printer and printer driver 'You can choose what you want to do by adjusting the triggers at the top of the script. ' 'This script was a compliation of other scripts on the script repository with the added switches ' 'Love Aldo C., 20060329 updateDriverCab = 0 'Set to 1 to install driver to driver.cab or 0 to do nothing! updatePort = 1 'Set to 1 to install or update a port or 0 to do nothing! updateDriver = 0 'Set to 1 to install or update a printer or 0 to do nothing! 'SETS 'LOAD DRIVER' PRIVILEGE. strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") objWMIService.Security_.Privileges.AddAsString \"SeLoadDriverPrivilege\", True 'INSTALLS DRIVER NOT LOCATED IN Driver.cab If updateDriverCab = 1 then Set objDriver = objWMIService.Get(\"Win32_PrinterDriver\") objDriver.Name = \"NewPrinter Model 2900\" objDriver.SupportedPlatform = \"Windows NT x86\" objDriver.Version = \"3\" objDriver.DriverPath = \"C:\\Scripts\\NewPrinter.dll\" objDriver.Infname = \"C:\\Scripts\\NewPrinter.inf\" intResult = objDriver.AddPrinterDriver(objDriver) WScript.Echo \"Added Driver \" \u0026 objDriver.Name End if 'SETS PRINTER PORT. If updatePort = 1 then Set objNewPort = objWMIService.Get _ (\"Win32_TCPIPPrinterPort\").SpawnInstance_ objNewPort.Name = \"It_Installed\" objNewPort.Protocol = 1 objNewPort.HostAddress = \"192.168.100.89\" objNewPort.PortNumber = \"9100\" objNewPort.SNMPEnabled = False objNewPort.Put_ WScript.Echo \"Changed Port \" \u0026 objNewPort.Name End if 'SETS PRINTER TO PORT. If updateDriver = 1 then Set objPrinter = objWMIService.Get _ (\"Win32_Printer\").SpawnInstance_ objPrinter.DriverName = \"Canon iR C5180-H1 PS Ver1.0\" objPrinter.PortName = \"It_Installed\" objPrinter.DeviceID = \"IT_Installed_Printer\" objPrinter.Location = \"\" objPrinter.Network = True objPrinter.Shared = False objPrinter.Put_ WScript.Echo \"Printer \" \u0026 objPrinter.DeviceID \u0026 \"Added or Changed\" End if ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/710bb2ad-9a8d-42cb-b142-cda2c1452548/710bb2ad-9a8d-42cb-b142-cda2c1452548/:2:0","tags":["Active Directory","HTML"],"title":"Manage Printers and Printer Drivers","uri":"/printing/printer-ports-and-printer-drivers/710bb2ad-9a8d-42cb-b142-cda2c1452548/710bb2ad-9a8d-42cb-b142-cda2c1452548/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Map printer connections based on AD site, department and/or default gateway Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/client-side-printing/map-printer-connections-68704bc6/map-printer-connections-68704bc6/:1:0","tags":["Active Directory","HTML"],"title":"Map printer connections based on AD site, department and/or default gateway","uri":"/printing/client-side-printing/map-printer-connections-68704bc6/map-printer-connections-68704bc6/"},{"categories":["Printing"],"content":"Output from Technet Gallery Map printer connections based on AD site, department and\\or default gateway. The following script could be used as a template to create your own printer mapping login script. The general logic revolves around mapping the printers based on the Active Directory site your computer reports it’s in. For larger sites you could use Department and\\or computer default gateways to be more specific. A few example sites have been left in the script so you can see the various ways you could write this in your own enviroment with locations of varying sizes. It uses Wscript.Shell’s “LogEvent” method to write an event into the application eventlog with how the script performed: http://msdn.microsoft.com/en-us/library/b4ce6by3(v=vs.84).aspx. This can be useful so you can easily check what the script did (or tried to do), why it did it and how long it took after the event. The MapPrinterConnection Sub accepts 3 parameters. These are: sPrinter - UNC path to the network printer. bDefault - True\\False whether you want the printer to be set as default. sReason - A string that is passed into the Event description described above. There are a few other variables in the script that are worth noting. These are described below: VB Script bOnlyRunOnWorkstations = True bInteractive = False bRemoveCurrentNetworkPrinters = True bOnlyRunOnWorkstations  True\\False whether you want the script to only run on workstations or servers as well. bInteractive  The event log described above will be echo’d to screen if this is set to true. bRemoveCurrentNetworkPrinters  True\\False whether you want the script to remove all current network printers before proceeding to map new ones.  Removing them can be useful if people in your company move between sites a lot and you don’t want them accumulating printer connections as they go. ","date":"2019-12-01","objectID":"/printing/client-side-printing/map-printer-connections-68704bc6/map-printer-connections-68704bc6/:2:0","tags":["Active Directory","HTML"],"title":"Map printer connections based on AD site, department and/or default gateway","uri":"/printing/client-side-printing/map-printer-connections-68704bc6/map-printer-connections-68704bc6/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Map Printers Based on Computer OU Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/140ffe43-6b68-4f27-a067-fecb98e7ed66/140ffe43-6b68-4f27-a067-fecb98e7ed66/:1:0","tags":["Active Directory","HTML"],"title":"Map Printers Based on Computer OU","uri":"/printing/printer-ports-and-printer-drivers/140ffe43-6b68-4f27-a067-fecb98e7ed66/140ffe43-6b68-4f27-a067-fecb98e7ed66/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **Brad Pursell Maps printers according to the OU of the computer the user has logged on to. The script also logs the user name, computer name, IP address, logon time, and computer OU into an Access database. Visual Basic 'This log on script will map printers according to the OU of the computer being logged into. 'This was developed due to students moving from classroom to classroom needing different printers for each room 'The script will also log username, computer name, IP address, logon time, and computer ou into an Access 'database for tracking student access 'written by Brad Pursell, pursellb@butlertech.org On Error Resume Next '=====VARIABLES===== Set objNetwork = WSCript.CreateObject(\"WScript.Network\") strPooterName = objNetwork.ComputerName strUserName = objNetwork.UserName Set objWMIService = GetObject(\"winmgmts:\\\\\" \u0026 strPooterName \u0026 \"\\root\\cimv2\") Set colItems = objWMIService.ExecQuery(\"Select * from Win32_NetworkAdapterConfiguration Where IPEnabled = True\") For Each objItem in colItems strIPAddress = Join(objItem.IPAddress) Next strTimeStamp = Now Const adOpenStatic = 3 Const adLockOptimistic = 3 '=====CONNECT TO AD===== Set objADConnection = CreateObject(\"ADODB.Connection\") objADConnection.Open \"Provider=ADsDSOObject;\" Set objADCommand = CreateObject(\"ADODB.Command\") objADCommand.ActiveConnection = objADConnection objADCommand.CommandText = \"SELECT distinguishedName FROM 'LDAP://dc=DOMAINNAMEHERE,dc=TLDOMAINHERE(E.G.,.ORG)' WHERE Name='\" \u0026 strPooterName \u0026 \"'\" Set objADRecordSet = objADCommand.Execute '=====PARSE DN FOR OU===== Do While Not objADRecordSet.EOFstrDN = objADRecordSet.Fields(\"distinguishedName\")intCommaPosition=InStr(strDN, \",\")strOU = Mid(strDN, intCommaPosition + 1, Len(strDN) - intCommaPosition)intCommaPosition = InStr(strOU, \",\")strOU = Mid(strOU, 1, intCommaPosition - 1)intCommaPosition = InStr(strOU, \"=\")strOU = Mid(strOU, intCommaPosition + 1, Len(strOU) - intCommaPosition)objADRecordSet.MoveNext'WScript.Echo strOU Loop objADConnection.Close '=====MAP DRIVES/PRINTERS BY OU===== Select Case strOUCase \"Technology Systems\" objNetwork.RemoveNetworkDrive \"g:\" objNetwork.MapNetworkDrive \"g:\", \"\\\\btfs1\\fs5\" objNetwork.RemoveNetworkDrive \"i:\" objNetwork.MapNetworkDrive \"i:\", \"\\\\btfs1\\fs1\" objNetwork.RemoveNetworkDrive \"j:\" objNetwork.MapNetworkDrive \"j:\", \"\\\\btfs1\\fs2\" objNetwork.RemoveNetworkDrive \"l:\" objNetwork.MapNetworkDrive \"l:\", \"\\\\btfs1\\paul1\" objNetwork.RemoveNetworkDrive \"t:\" objNetwork.MapNetworkDrive \"t:\", \"\\\\btfs1\\vol1\" objNetwork.AddWindowsPrinterConnection \"\\\\BTDC1\\HPLJ4050_TechOffice\" objNetwork.AddWindowsPrinterConnection \"\\\\BTDC1\\HPLJ8100_TechRoom\" objNetwork.AddWindowsPrinterConnection \"\\\\BTDC1\\CanoniRC3200Color_LowerLevelERC\" objNetwork.AddWindowsPrinterConnection \"\\\\BTDC1\\CanoniR6000B\u0026W_LowerLevelERC\" 'objNetwork.SetDefaultPrinter \"\\\\\\\"Case \"INSERT ANOTHER OU HERE\" 'CREATE A SEPARATE CASE STATEMENT FOR EACH OUcase Else 'not found End Select '=====LOGGING===== Set objDBConnection = CreateObject(\"ADODB.Connection\") Set objDBRecordSet = CreateObject(\"ADODB.Recordset\") objDBConnection.Open \"Provider=Microsoft.Jet.OLEDB.4.0; Data Source='\\\\***INSERT PATH TO ACCESS DB***\\ACCESSDB.mdb'\" objDBRecordSet.Open \"INSERT INTO Logons (Username, ComputerName, IPAddress, LogonTime, ComputerOU, ComputerDN) VALUES ('\" \u0026 strUserName \u0026 \"', '\" \u0026 strPooterName \u0026 \"', '\" \u0026 strIPAddress \u0026 \"', '\" \u0026 strTimeStamp \u0026 \"', '\" \u0026 strOU \u0026 \"', '\" \u0026 strDN \u0026 \"')\", objDBConnection, adOpenStatic, adLockOptimistic objDBConnection.Close ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/140ffe43-6b68-4f27-a067-fecb98e7ed66/140ffe43-6b68-4f27-a067-fecb98e7ed66/:2:0","tags":["Active Directory","HTML"],"title":"Map Printers Based on Computer OU","uri":"/printing/printer-ports-and-printer-drivers/140ffe43-6b68-4f27-a067-fecb98e7ed66/140ffe43-6b68-4f27-a067-fecb98e7ed66/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Map Printers Based on Group Membership Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/bf160908-93e3-484c-944f-1c95004c5498/bf160908-93e3-484c-944f-1c95004c5498/:1:0","tags":["Active Directory","HTML"],"title":"Map Printers Based on Group Membership","uri":"/printing/printer-ports-and-printer-drivers/bf160908-93e3-484c-944f-1c95004c5498/bf160908-93e3-484c-944f-1c95004c5498/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **Robert Gransbury Logon script that maps printers based on Active Directory group membership. Visual Basic on error resume next Dim objADSystemInfo, objUser, objMemberOf, objGroup, objGroupEnum, objNetwork, objPrinter dim i, bTroubleFlag Set objNetwork = CreateObject(\"Wscript.Network\") 'Get current user info from active directory Set objADSystemInfo = CreateObject(\"ADSystemInfo\") 'bind to current user in active directory set objUser = GetObject(\"LDAP://\" \u0026 objADSystemInfo.UserName) if objuser.description = \"printer.trouble\" thenbTroubleFlag = truemsgbox \"Troubleshooting Printer Logon Script\" end if Set objPrinter = objNetwork.EnumPrinterConnections 'Test to see if we have any printers mapped If objPrinter.Count \u003e 0 Then'The Printer array is Printer name, printer path that is why it is step 2for i=1 to objPrinter.Count Step 2 'test to make sure it is a network printer if instr(objPrinter.Item(i),\"\\\\\") \u003c\u003e 0 then if bTroubleFlag then msgbox \"Deleting:\" \u0026 vbcrlf \u0026 objPrinter.Item(i) end if objNetwork.RemovePrinterConnection objPrinter.Item(i),true,true end ifnext end if 'Get an array of group names that the user is a member of objMemberOf = objUser.MemberOf for Each objGroup in objMemberOf'Test to see if it is a printer group. all printer groups should be in the same OUif (instr(objGroup,\"OU=Printer-Groups\") \u003c\u003e 0) then 'Bind to the group to get is description. The description contain the path to the printer set objGroupEnum = GetObject(\"LDAP://\" \u0026 objGroup) if bTroubleFlag then msgbox \"Adding:\" \u0026 vbcrlf \u0026 \"[\" \u0026 objGroupEnum.name \u0026 \"]\" \u0026 vbcrlf \u0026 objGroupEnum.description end if objNetwork.AddWindowsPrinterConnection objGroupEnum.description set objGroupEnum = nothingend if next 'Repeat as above for the default printer for Each objGroup in objMemberOfif (instr(objGroup,\"OU=Printer-Default-Groups\") \u003c\u003e 0) then set objGroupEnum = GetObject(\"LDAP://\" \u0026 objGroup) if bTroubleFlag then msgbox \"Setting Default:\" \u0026 vbcrlf \u0026 \"[\" \u0026 objGroupEnum.name \u0026 \"]\" \u0026 vbcrlf \u0026 objGroupEnum.description end if objNetwork.SetDefaultPrinter objGroupEnum.description set objGroupEnum = nothingend if next if bTroubleFlag thenmsgbox \"Printer Logon Script Finished\" end if ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/bf160908-93e3-484c-944f-1c95004c5498/bf160908-93e3-484c-944f-1c95004c5498/:2:0","tags":["Active Directory","HTML"],"title":"Map Printers Based on Group Membership","uri":"/printing/printer-ports-and-printer-drivers/bf160908-93e3-484c-944f-1c95004c5498/bf160908-93e3-484c-944f-1c95004c5498/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Microsoft Flow to Sync Roadmap item and Project Online task status Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/flow-to-sync-roadmap-item-44174a4b/flow-to-sync-roadmap-item-44174a4b/:1:0","tags":["Active Directory","HTML"],"title":"Microsoft Flow to Sync Roadmap item and Project Online task status","uri":"/project-server/flow-to-sync-roadmap-item-44174a4b/flow-to-sync-roadmap-item-44174a4b/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This Microsoft Flow package can be imported into your Microsoft Flow environment as a solution starter. The Flow trigger and Actions will need updates to connect to your target environments as these will currently be linked to a Microsoft Demo instance the Flow was exported from. A blog post that details the changes required can be found here: https://pwmather.wordpress.com/2019/06/19/download-example-microsoftflow-for-syncing-msproject-roadmap-row-item-status-with-projectonline-task-status-cds-powerplatform-msflow-rest-sharepoint-workmanagement-office365/ ","date":"2019-12-01","objectID":"/project-server/flow-to-sync-roadmap-item-44174a4b/flow-to-sync-roadmap-item-44174a4b/:2:0","tags":["Active Directory","HTML"],"title":"Microsoft Flow to Sync Roadmap item and Project Online task status","uri":"/project-server/flow-to-sync-roadmap-item-44174a4b/flow-to-sync-roadmap-item-44174a4b/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Microsoft Project Easy Menus Original Technet Description URL Description Download: [Download Link](Download\\Project Easy Ribbon.exportedUI) ","date":"2019-12-01","objectID":"/project-server/easy-menus-d4f6d943/easy-menus-d4f6d943/:1:0","tags":["Active Directory","HTML"],"title":"Microsoft Project Easy Menus","uri":"/project-server/easy-menus-d4f6d943/easy-menus-d4f6d943/"},{"categories":["Project Server"],"content":"Output from Technet Gallery Project Easy Menus Project Easy Menus are a customised CUI file that simplify the menu experience in Microsoft Project in two ways. The menu tabs relate to your current project management process (project creation, project execution or project reporting) rather than Microsoft’s functional areas of tasks, resources, views etc. Buttons that are infrequently used by the majority of users are removed (please note that this is my assessment only having run hundreds of project courses over the years). ** ** 3. Really popular buttons have been added to two or more menus. 4. Users can take this menu structure and modify it to suit their own needs. The Create tab The Track tab ** ** The Report tab The About tab Installation Within Project, click on the File Tab | Options | Project Options. If you have already made customisations, click on the Import/Export button and Export and save your current customisations. Once this is done, Import the** Project Easy Ribbon** file. ** ** If you have suggestions for improvements please leave a comment on this post. ","date":"2019-12-01","objectID":"/project-server/easy-menus-d4f6d943/easy-menus-d4f6d943/:2:0","tags":["Active Directory","HTML"],"title":"Microsoft Project Easy Menus","uri":"/project-server/easy-menus-d4f6d943/easy-menus-d4f6d943/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Microsoft Project Online Content Pack with Danish, Polish, Russian \u0026 Ukrainian Original Technet Description URL Description Download: [Download Link](Download\\MS Content Pack with Additional Languages.pbit) ","date":"2019-12-01","objectID":"/project-server/online-power-bi-content-26306fa6/online-power-bi-content-26306fa6/:1:0","tags":["Active Directory","HTML"],"title":"Microsoft Project Online Content Pack with Danish, Polish, Russian \u0026 Ukrainian","uri":"/project-server/online-power-bi-content-26306fa6/online-power-bi-content-26306fa6/"},{"categories":["Project Server"],"content":"Output from Technet Gallery Project Online Content Pack with additional language support for Danish, Polish, Russian and Ukrainian This is the standard Microsoft Project Online Power BI content pack, but with support for PWA instances created in either Russion or Ukrainian. In total this content pack now supports nine languages, including Danish, English, French, German, Portuguese (Brazil), Portuguese (Portugal), Polish, Russian, Spanish, and Ukrainian. Thanks to Bartek from Poland for his Polish contribution. This is the standard Microsoft Project Online Power BI content pack, but with the support for PWA instances created in either Russion or Ukrainian. In total this content pack now supports nine languages, including Danish, English, French, German, Portuguese (Brazil), Portuguese (Portugal), Polish, Russian, Spanish, and Ukrainian. ","date":"2019-12-01","objectID":"/project-server/online-power-bi-content-26306fa6/online-power-bi-content-26306fa6/:2:0","tags":["Active Directory","HTML"],"title":"Microsoft Project Online Content Pack with Danish, Polish, Russian \u0026 Ukrainian","uri":"/project-server/online-power-bi-content-26306fa6/online-power-bi-content-26306fa6/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Microsoft Project Online Power BI Content Pack - Weekly Timescal Original Technet Description URL Description Download: [Download Link](Download\\Microsoft Project Online Power BI Content Pack - Weekly.pbit) ","date":"2019-12-01","objectID":"/project-server/online-power-bi-content-190f4013/online-power-bi-content-190f4013/:1:0","tags":["Active Directory","HTML"],"title":"Microsoft Project Online Power BI Content Pack - Weekly Timescal","uri":"/project-server/online-power-bi-content-190f4013/online-power-bi-content-190f4013/"},{"categories":["Project Server"],"content":"Output from Technet Gallery Based on the Project Online PowerBI content pack v2 provided by Microsoft in November 2017, this updated version proposes aweekly timescale. The TIMESET table has been updated with the week dimension (format YYYY-WW). Both time dimensions are available (month and week). The weekly dimension has been added in place of the former monthly dimension but you can always revert back to the initial monthly dimension from the TIMESET table. Here are the steps to use the file, which is a PowerBI template (PBIT format): Open the file with PowerBI desktop Authenticate with your PWA tenant credentials Enter the PWA URL as a parameter when prompted Enjoy the dashboard See details on the following blog post. ","date":"2019-12-01","objectID":"/project-server/online-power-bi-content-190f4013/online-power-bi-content-190f4013/:2:0","tags":["Active Directory","HTML"],"title":"Microsoft Project Online Power BI Content Pack - Weekly Timescal","uri":"/project-server/online-power-bi-content-190f4013/online-power-bi-content-190f4013/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Migrate print server scrip Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/migrate-printers-script-ab044c5f/migrate-printers-script-ab044c5f/:1:0","tags":["Active Directory","HTML"],"title":"Migrate print server scrip","uri":"/printing/print-servers-print-queues-and-print-jobs/migrate-printers-script-ab044c5f/migrate-printers-script-ab044c5f/"},{"categories":["Printing"],"content":"Output from Technet Gallery Uses the output of another script, SavePrinters.ps1(http://gallery.technet.microsoft.com/scriptcenter/Save-printer-server-90a75354), also in the script gallery in my profile to migrate the saved printers to a new print server. Will create printers on the destination based on the .csv file information saved from SavePrinters.ps1 script. Will query the source print server for port information and create new TCP/IP ports on the destination server. Before running script, install the same drivers on the destination server as are installed on the source, or install new drivers and update the driver names in the .csv file prior to importing. Must be ran on Windows 2012/8+ as an administrator. Source computer must be Windows 2008/Vista+. [CmdletBinding()] Param( [Parameter(Mandatory=$True,Position=1)] [string]$SourceComputerName, [Parameter(Mandatory=$True)] [string]$DestinationComputerName ) # Gets the settings for printers from a saved CSV file on the current user's desktop $printers= import-csv \"$env:USERPROFILE\\desktop\\printers.csv\" # cycles through the printers and queries the source computer to match the port specified in the CSV file. Creates the port and printer on the destination server foreach ($printer in $printers) { $port=get-printerport -ComputerName $SourceComputerName|? {$_.Name -eq $printer.PortName} Add-PrinterPort -ComputerName $DestinationComputerName -Name $port.Name -PrinterHostAddress $port.PrinterHostAddress Add-Printer -ComputerName $DestinationComputerName -Name $printer.Name -DriverName $printer.DriverName -PortName $printer.PortName -Comment $printer.Comment -ShareName $printer.ShareName [boolean]$shared=[System.Convert]::ToBoolean($printer.Shared) [boolean]$published=[System.Convert]::ToBoolean($printer.Published) Set-printer -ComputerName $DestinationComputerName -Name $printer.Name -Shared $shared -Published $published ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/migrate-printers-script-ab044c5f/migrate-printers-script-ab044c5f/:2:0","tags":["Active Directory","HTML"],"title":"Migrate print server scrip","uri":"/printing/print-servers-print-queues-and-print-jobs/migrate-printers-script-ab044c5f/migrate-printers-script-ab044c5f/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Migrate Printer Connections Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/16bd969b-fefd-4435-afd5-c1b7be337bd5/16bd969b-fefd-4435-afd5-c1b7be337bd5/:1:0","tags":["Active Directory","HTML"],"title":"Migrate Printer Connections","uri":"/printing/printer-ports-and-printer-drivers/16bd969b-fefd-4435-afd5-c1b7be337bd5/16bd969b-fefd-4435-afd5-c1b7be337bd5/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **Marco Sombroek Deletes existing printer connections and creates new connections to different print servers. Visual Basic Break on If @producttype = 'Windows XP Professional' Dim $printers, $printer, $rc $printers=arrayenumkey('HKCU\\Printers\\Connections') For Each $printer In $printers If InStr($printer,'prtsrv01') $printer=Split($printer,',') $old='\\\\'+$printer[2]+'\\'+$printer[3] $new=\"\\\\prtsrv02\\\" + $printer[3] ? '-I- Connection found: '+$old $rc=DelPrinterConnection($old) If @error ? '-E- Error deleting connection to '+$old+' (EC='+@error+')' Else ? '-I- Succesfully deleted connection to '+$old EndIf $rc=AddPrinterConnection($new) If @ERROR ? '-E- Error connecting to '+$new+' (EC='+@error+')' Else ? '-I- Succesfully added connection to '+$new EndIf EndIf ;Exit ;FUNCTION ; ;NAME ArrayEnumKey ; ;ACTION Creates an array of names of the subkeys contained in a registry key or subkey ; ;AUTHOR Jens Meyer (sealeopard@usa.net) ; ;VERSION 1.2 (added error codes) ; 1.1 ; ;DATE CREATED 2001/12/05 ; ;DATE MODIFIED 2003/05/17 ; ;KIXTART 4.12+ ; ;SYNTAX ARRAYENUMKEY($subkey) ; ;PARAMETERS SUBKEY ; Required string containing the key or subkey for which the subkeys will be enumerated ; ;RETURNS Array containing the subkeys ; ;REMARKS none ; ;DEPENDENCIES none ; ;EXAMPLE $retcode=arrayenumkey('HKEY_USERS') ; ;KIXTART BBS http://www.kixtart.org/cgi-bin/ultimatebb.cgi?ubb=get_topic\u0026f=12\u0026t=000064 ; Function arrayenumkey($regsubkey) Dim $retcode, $subkeycounter, $currentsubkey, $subkeyarray If NOT KeyExist($regsubkey) Exit 87 EndIf $subkeycounter=0 Do $currentsubkey=EnumKey($regsubkey,$subkeycounter) If NOT @ERROR ReDim preserve $subkeyarray[$subkeycounter] $subkeyarray[$subkeycounter]=$currentsubkey $subkeycounter=$subkeycounter+1 EndIf Until @ERROR $arrayenumkey=$subkeyarray Exit 0 EndFunction ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/16bd969b-fefd-4435-afd5-c1b7be337bd5/16bd969b-fefd-4435-afd5-c1b7be337bd5/:2:0","tags":["Active Directory","HTML"],"title":"Migrate Printer Connections","uri":"/printing/printer-ports-and-printer-drivers/16bd969b-fefd-4435-afd5-c1b7be337bd5/16bd969b-fefd-4435-afd5-c1b7be337bd5/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Migrate Printers Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/e74689e3-66e6-45c8-840b-0df67c264f5b/e74689e3-66e6-45c8-840b-0df67c264f5b/:1:0","tags":["Active Directory","HTML"],"title":"Migrate Printers","uri":"/printing/printer-ports-and-printer-drivers/e74689e3-66e6-45c8-840b-0df67c264f5b/e74689e3-66e6-45c8-840b-0df67c264f5b/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **Al Wheedleton Remaps printers to a new print server. Visual Basic Option explicit On Error Resume Next Dim strPrintServerOld, strPrintServerNew, strComputer, strPrintShare Dim objWMIService, objPrinter, objNetwork Dim colInstalledPrinters 'If any printer on the user's PC has a path other than the old server 'nothing will happen. strPrintServerOld = \"\\\\oldserver\" strPrintServerNew = \"\\\\newserver\" strComputer = \".\" Set objNetwork = CreateObject(\"WScript.Network\") Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colInstalledPrinters = objWMIService.ExecQuery _ (\"Select * from Win32_Printer Where Default = True\") For Each objPrinter in colInstalledPrinters strPrintShare = objPrinter.ShareName 'If the old server was in all Capital letters change it to small letters If objPrinter.ServerName = \"\\\\OLDSERVER\" Then objPrinter.ServerName = \"\\\\oldserver\" End if 'Iterate through default printers first If objPrinter.ServerName = strPrintServerOld And objPrinter.default = True Then objNetwork.AddWindowsPrinterConnection strPrintServerNew \u0026 \"\\\" _ \u0026 strPrintShare objNetwork.SetDefaultPrinter(strPrintServerNew \u0026 \"\\\" \u0026 strPrintShare) WScript.Sleep(5000) 'Script will quit if it cannot connect to the new server If err.Number \u003c\u003e 0 Then WScript.Echo \"Could not connect to \" \u0026 strPrintServerNew \u0026 vbCrLf _ \u0026 \" Script is exiting without changes\" err.Clear WScript.Quit End if Else 'These four lines can be commented out to reduce messages 'for a logon script. WScript.Echo \"Could not map default printer\" End if WScript.Echo \"Default is set\" Next Set colInstalledPrinters = objWMIService.ExecQuery _ (\"Select * from Win32_Printer\") For Each objPrinter in colInstalledPrinters strPrintShare = objPrinter.ShareName 'If the old server was in all Capital letters change it to small letters If objPrinter.ServerName = \"\\\\OLDSERVER\" Then objPrinter.ServerName = \"\\\\newserver\" End if If objPrinter.ServerName = strPrintServerOld Then 'If not the default and in the list then create a new connection objNetwork.AddWindowsPrinterConnection strPrintServerNew \u0026 \"\\\" _ \u0026 strPrintShare WScript.Sleep(5000) 'Once all printers are mapped with the new server, the old server mapping 'is removed objNetwork.RemovePrinterConnection strPrintServerOld \u0026 \"\\\" _ \u0026 StrPrintShare End If Next 'This message can be commented out for a logon script. WScript.Echo \"Finished with Printers\" Set objWMIService = Nothing Set objNetwork = Nothing ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/e74689e3-66e6-45c8-840b-0df67c264f5b/e74689e3-66e6-45c8-840b-0df67c264f5b/:2:0","tags":["Active Directory","HTML"],"title":"Migrate Printers","uri":"/printing/printer-ports-and-printer-drivers/e74689e3-66e6-45c8-840b-0df67c264f5b/e74689e3-66e6-45c8-840b-0df67c264f5b/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Migration of Printers From Old Print Server to New Print Server Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/migration-of-printers-from-4231538a/migration-of-printers-from-4231538a/:1:0","tags":["Active Directory","HTML"],"title":"Migration of Printers From Old Print Server to New Print Server","uri":"/printing/print-servers-print-queues-and-print-jobs/migration-of-printers-from-4231538a/migration-of-printers-from-4231538a/"},{"categories":["Printing"],"content":"Output from Technet Gallery This script will move all printers that are mapped to an old print server and re-map them to the new print server. The script will also transfer the default printer (if one exists and is pointed to the old print server). This script is also silent and will delete itself when it is completed. I have tried many of the scripts that I found listed on here and this is the only one I have been able to get to work on our network. It made transitioning 119 printers and more than a thousand users a bit easier. If you want to see the script work, you can see wscript.exe running in task manager. You can also open Devices and Printers and watch the changes. VB Script ' put in the server names here (keep the quotes!) MovePrinters \"Old Server\", \"New Server\" ' ********************************************* ' Move printers to new server ' ********************************************* Sub MovePrinters(OldServer, NewServer) ' Loops through all network printers and moves all printers ' on \"OldServer\" to the same printername on \"NewServer\". dim WshNetwork, oPrinters, i, PrinterPath, DefaultPrinter, PrinterList Set WshNetwork = WScript.CreateObject(\"WScript.Network\") Set PrinterList = CreateObject(\"Scripting.Dictionary\") ' Get the default printer before we start deleting: DefaultPrinter = GetDefaultPrinter ' Get a list of printers to work with: ' (We cannot modify the collection while looping through it) Set oPrinters = WshNetwork.EnumPrinterConnections For i = 1 to oPrinters.Count Step 2 PrinterList.Add oPrinters.Item(i), \"x\" Next ' i ' Loop through the printer list and migrate mathching ones: For Each PrinterPath In PrinterList.Keys If StrComp(ServerName(PrinterPath), OldServer, 1) = 0 Then WshNetwork.RemovePrinterConnection PrinterPath, True, True On Error Resume next WshNetwork.AddWindowsPrinterConnection \"\\\\\" \u0026 NewServer \u0026 \"\\\" \u0026 _ ShareName(PrinterPath) If Err.Number = 0 Then Set objFile = wscript.CreateObject(\"Scripting.FileSystemObject\") If Not objFile.FolderExists(\"c:\\printers_remapped\") Then objFile.CreateFolder \"c:\\printers_remapped\" objFile.Close End If End If 'If Err.Number = -2147023095 Then ' MsgBox \"The printer \"\"\" \u0026 ShareName(PrinterPath) \u0026 _ ' \"\"\" does not exist on server \"\"\" \u0026 NewServer \u0026 \"\"\".\" \u0026 vbCrLf \u0026 _ ' \"The printer has been removed.\", vbOKonly + vbExclamation, _ ' \"Missing printer\" 'End If On Error goto 0 End If Next 'Set the default printer: If ServerName(DefaultPrinter) = OldServer Then On Error Resume Next WshNetwork.SetDefaultPrinter \"\\\\\" \u0026 NewServer \u0026 \"\\\" \u0026 _ ShareName(DefaultPrinter) 'If Err.Number = -2147352567 Then 'MsgBox \"Your default printer did not exist, and has been deleted.\", _ ' vbOKonly + vbInformation, \"Invalid default printer\" 'End If On Error goto 0 End If End Sub ' MovePrinters Function GetDefaultPrinter() ' Returns the UNC path to the current default printer Dim oShell, sRegVal, sDefault Set oShell = CreateObject(\"WScript.Shell\") sRegVal = _ \"HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\Device\" sDefault = \"\" On Error Resume Next sDefault = oShell.RegRead(sRegVal) sDefault = Left(sDefault ,InStr(sDefault, \",\") - 1) On Error Goto 0 GetDefaultPrinter = sDefault End Function Function ServerName(sPrinterPath) Dim aPrinterPath ServerName = \"\" If Left(sPrinterPath, 2) = \"\\\\\" Then aPrinterPath = Split(sPrinterPath, \"\\\") ServerName = aPrinterPath(2) End If End Function Function ShareName(sPrinterPath) Dim aPrinterPath ShareName = \"\" If Left(sPrinterPath, 2) = \"\\\\\" Then aPrinterPath = Split(sPrinterPath, \"\\\") ShareName = aPrinterPath(3) End If End Function discardScript() Function discardScript() Set objFSO = CreateObject(\"Scripting.FileSystemObject\") strScript = Wscript.ScriptFullName objFSO.DeleteFile(strScript) End Function '--------------------8\u003c---------------------- ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/migration-of-printers-from-4231538a/migration-of-printers-from-4231538a/:2:0","tags":["Active Directory","HTML"],"title":"Migration of Printers From Old Print Server to New Print Server","uri":"/printing/print-servers-print-queues-and-print-jobs/migration-of-printers-from-4231538a/migration-of-printers-from-4231538a/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Modify Print Connection Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/aae3d5e8-1281-4b70-9585-914262df8377/aae3d5e8-1281-4b70-9585-914262df8377/:1:0","tags":["Active Directory","HTML"],"title":"Modify Print Connection","uri":"/printing/printer-ports-and-printer-drivers/aae3d5e8-1281-4b70-9585-914262df8377/aae3d5e8-1281-4b70-9585-914262df8377/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **Anonymous Submission KiXtart script that modifies a print connection on a Windows XP computer. Jens Meyer wrote the function used in this script. Visual Basic Break on If @producttype = 'Windows XP Professional' Dim $printers, $printer, $rc $printers=arrayenumkey('HKCU\\Printers\\Connections') For Each $printer In $printers If InStr($printer,'prtsrv01')$printer=Split($printer,',')$old='\\\\'+$printer[2]+'\\'+$printer[3]$new=\"\\\\prtsrv02\\\" + $printer[3]? '-I- Connection found: '+$old$rc=DelPrinterConnection($old) If @error ? '-E- Error deleting connection to '+$old+' (EC='+@error+')' Else ? '-I- Succesfully deleted connection to '+$old EndIf $rc=AddPrinterConnection($new) If @ERROR ? '-E- Error connecting to '+$new+' (EC='+@error+')' Else ? '-I- Succesfully added connection to '+$new EndIf EndIf ;Exit ;FUNCTION ; ;NAME ArrayEnumKey ; ;ACTION Creates an array of names of the subkeys contained in a registry key or subkey ; ;AUTHOR Jens Meyer (sealeopard@usa.net) ; ;VERSION 1.2 (added error codes) ; 1.1 ; ;DATE CREATED 2001/12/05 ; ;DATE MODIFIED 2003/05/17 ; ;KIXTART 4.12+ ; ;SYNTAX ARRAYENUMKEY($subkey) ; ;PARAMETERS SUBKEY ; Required string containing the key or subkey for which the subkeys will be enumerated ; ;RETURNS Array containing the subkeys ; ;REMARKS none ; ;DEPENDENCIES none ; ;EXAMPLE $retcode=arrayenumkey('HKEY_USERS') ; ;KIXTART BBS http://www.kixtart.org/cgi-bin/ultimatebb.cgi?ubb=get_topic\u0026f=12\u0026t=000064 ; Function arrayenumkey($regsubkey) Dim $retcode, $subkeycounter, $currentsubkey, $subkeyarray If NOT KeyExist($regsubkey) Exit 87 EndIf $subkeycounter=0 Do $currentsubkey=EnumKey($regsubkey,$subkeycounter) If NOT @ERROR ReDim preserve $subkeyarray[$subkeycounter] $subkeyarray[$subkeycounter]=$currentsubkey $subkeycounter=$subkeycounter+1 EndIf Until @ERROR $arrayenumkey=$subkeyarray Exit 0 EndFunction ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/aae3d5e8-1281-4b70-9585-914262df8377/aae3d5e8-1281-4b70-9585-914262df8377/:2:0","tags":["Active Directory","HTML"],"title":"Modify Print Connection","uri":"/printing/printer-ports-and-printer-drivers/aae3d5e8-1281-4b70-9585-914262df8377/aae3d5e8-1281-4b70-9585-914262df8377/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Modify Print Job Priority Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/d97e6e03-b5c2-42ab-8ec4-a9b1d97d0a7a/d97e6e03-b5c2-42ab-8ec4-a9b1d97d0a7a/:1:0","tags":["Active Directory","HTML"],"title":"Modify Print Job Priority","uri":"/printing/print-servers-print-queues-and-print-jobs/d97e6e03-b5c2-42ab-8ec4-a9b1d97d0a7a/d97e6e03-b5c2-42ab-8ec4-a9b1d97d0a7a/"},{"categories":["Printing"],"content":"Output from Technet Gallery Uses ADSI to change the priority of current print jobs based on the size of those print jobs. Visual Basic Set objPrinter = GetObject _ (\"WinNT://atl-dc-02/ArtDepartmentPrinter, printqueue\") For Each objPrintJob in objPrinter.PrintJobs If objPrintJob.Size \u003e 400000 Then objPrintJob.Put \"Priority\" , 2 objPrintJob.SetInfo Else objPrintJob.Put \"Priority\" , 3 objPrintJob.SetInfo End If Next ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/d97e6e03-b5c2-42ab-8ec4-a9b1d97d0a7a/d97e6e03-b5c2-42ab-8ec4-a9b1d97d0a7a/:2:0","tags":["Active Directory","HTML"],"title":"Modify Print Job Priority","uri":"/printing/print-servers-print-queues-and-print-jobs/d97e6e03-b5c2-42ab-8ec4-a9b1d97d0a7a/d97e6e03-b5c2-42ab-8ec4-a9b1d97d0a7a/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Modify Print Job Start Tim Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/e6b85639-3a14-4b25-b6c6-d080f97340e4/e6b85639-3a14-4b25-b6c6-d080f97340e4/:1:0","tags":["Active Directory","HTML"],"title":"Modify Print Job Start Tim","uri":"/printing/print-servers-print-queues-and-print-jobs/e6b85639-3a14-4b25-b6c6-d080f97340e4/e6b85639-3a14-4b25-b6c6-d080f97340e4/"},{"categories":["Printing"],"content":"Output from Technet Gallery Uses ADSI to change the start time for all print jobs larger than 400K to 2:00 AM. Visual Basic Set objPrinter = GetObject(\"WinNT://atl-dc-02/ArtDepartmentPrinter,printqueue\") For Each objPrintQueue in objPrinter.PrintJobs If objPrintQueue.Size \u003e 400000 Then objPrintQueue.Put \"StartTime\" , TimeValue(\"2:00:00 AM\") objPrintQueue.SetInfo End If Next ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/e6b85639-3a14-4b25-b6c6-d080f97340e4/e6b85639-3a14-4b25-b6c6-d080f97340e4/:2:0","tags":["Active Directory","HTML"],"title":"Modify Print Job Start Tim","uri":"/printing/print-servers-print-queues-and-print-jobs/e6b85639-3a14-4b25-b6c6-d080f97340e4/e6b85639-3a14-4b25-b6c6-d080f97340e4/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Modify Printer Availability Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/0eef380a-191c-4b1a-9e8a-32d141bc6af9/0eef380a-191c-4b1a-9e8a-32d141bc6af9/:1:0","tags":["Active Directory","HTML"],"title":"Modify Printer Availability","uri":"/printing/print-servers-print-queues-and-print-jobs/0eef380a-191c-4b1a-9e8a-32d141bc6af9/0eef380a-191c-4b1a-9e8a-32d141bc6af9/"},{"categories":["Printing"],"content":"Output from Technet Gallery Configures a printer so that documents can only be printed between 8:00 AM and 6:00 PM. Visual Basic dtmStartTime= \"********080000.000000+000\" dtmEndTime= \"********180000.000000+000\" strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colPrinters = objWMIService.ExecQuery _ (\"Select * From Win32_Printer Where DeviceID = 'ArtDepartmentPrinter' \") For Each objPrinter in colPrinters objPrinter.StartTime = dtmStartTime objPrinter.UntilTime = dtmEndTime objPrinter.Put_ Next ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/0eef380a-191c-4b1a-9e8a-32d141bc6af9/0eef380a-191c-4b1a-9e8a-32d141bc6af9/:2:0","tags":["Active Directory","HTML"],"title":"Modify Printer Availability","uri":"/printing/print-servers-print-queues-and-print-jobs/0eef380a-191c-4b1a-9e8a-32d141bc6af9/0eef380a-191c-4b1a-9e8a-32d141bc6af9/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Modify Printer Locations Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/3c3bebe5-5303-42d8-970d-f8919e5261a9/3c3bebe5-5303-42d8-970d-f8919e5261a9/:1:0","tags":["Active Directory","HTML"],"title":"Modify Printer Locations","uri":"/printing/print-servers-print-queues-and-print-jobs/3c3bebe5-5303-42d8-970d-f8919e5261a9/3c3bebe5-5303-42d8-970d-f8919e5261a9/"},{"categories":["Printing"],"content":"Output from Technet Gallery Uses ADSI to configure the location attribute for all the printers in a specified OU. Visual Basic Set objOU = GetObject(\"LDAP://OU = Finance, DC = fabrikam, DC = com\") objOU.Filter = Array(\"printqueue\") For Each objPrintQueue In objOU objPrintQueue.Put \"Location\" , \"USA/Redmond/Finance Building\" objPrintQueue.SetInfo Next ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/3c3bebe5-5303-42d8-970d-f8919e5261a9/3c3bebe5-5303-42d8-970d-f8919e5261a9/:2:0","tags":["Active Directory","HTML"],"title":"Modify Printer Locations","uri":"/printing/print-servers-print-queues-and-print-jobs/3c3bebe5-5303-42d8-970d-f8919e5261a9/3c3bebe5-5303-42d8-970d-f8919e5261a9/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Modify Printer Permissions Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/modify-printer-permissions-149ae172/modify-printer-permissions-149ae172/:1:0","tags":["Active Directory","HTML"],"title":"Modify Printer Permissions","uri":"/printing/print-servers-print-queues-and-print-jobs/modify-printer-permissions-149ae172/modify-printer-permissions-149ae172/"},{"categories":["Printing"],"content":"Output from Technet Gallery This script was created to modify the DACL of printer objects. It can be used to **add specific permissions orremove **permissions from printers on the localhost or a specified server. It accepts access masks, such as “ManageDocuments”, in either text or integer based format. Example Usage 1: .\\Set-PrinterPermissions -ServerName “PrintSrv1” -AccountName “ServerAdmins” -AccessMask “ManageDocuments” *In this example the ServerAdmins group will be given the ManageDocuments permissions on all printers on the server PrintSrv1.* Example Usage 2: .\\Set-PrinterPermissions -ServerName “PrintSrv1” -AccountName “ServerAdmins” -Remove *In this example the ServerAdmins group will have all permissions removed from all printers on the server PrintSrv1.* See -full help for additional examples. If no parameters are set, aside from the mandatory AccountName, it will set the “Print” permission on all printers of the host it is ran on. \u003c# .Synopsis Purpose: Modifies Printer Permissions. .DESCRIPTION This script was created to modify the DACL of printer objects. It can be used to add specific permissions or remove permissions from printers on the localhost or a specified server. See -full help for example usage. If no parameters are set, aside from the mandatory AccountName, it will set the \"Print\" permission on all printers of the host it is ran on. As an alternative to this script, something like SubInACL.exe can be used to alter printer permissions. .PARAMETER ServerName Specify the SamAccountName of a server on which to modify printer permissions. .PARAMETER AccountName Mandatory. Specify the sAMAccountName, or userPrincipalName, of a User or Group on which to modify or create permissions. .PARAMETER SinglePrinterName Specify an individual printer to modify permissions on. If no printer is specified, all printers on the target server will be updated. .PARAMETER AccessMask The permission Access Mask to be applied. Only relevant printer bit masks represented. \"ManagePrinters\",\"ManageDocuments\",\"Print\",\"TakeOwnership\",\"ReadPermissions\", or \"ChangePermissions\". The default value for this is Print. .PARAMETER Deny AccessMask AccessType will be set to \"Deny\". Default is to \"Allow\" .PARAMETER Remove Removes all Access Control Entries associated with the specified Account Name. .PARAMETER AceFlag A bit flag that indicates permission propagation: 0x0001 - OBJECT_INHERIT_ACE 0x0002 - CONTAINER_INHERIT_ACE 0x0004 - NO_PROPAGATE_INHERIT_ACE 0x0008 - INHERIT_ONLY_ACE 0x0010 - INHERITED_ACE .PARAMETER IntAccessMask uint32 representation of an access mask. If used, it overrides the AccessMask parameter. .PARAMETER NoLog Specify not to create a log file. .PARAMETER LogFile The path and file name of the desired log file. \"C:\\Logfile.txt\" .Example .\\Set-PrinterPermissions -AccountName \"ServerAdmins\" -AccessMask ManageDocuments Grants a \"ServerAdmins\" group the ManageDocuments permission on all printers of the executing host. Creates a log in the executing directory. .Example .\\Set-PrinterPermissions -AccountName \"bob\" -Remove -NoLog Removes all Access Control Entries associated with \"bob\" on all printers of the executing host. Specifies not to create a log. .Example .\\Set-PrinterPermissions -ServerName \"PrtSrv1\" -AccountName \"alice@upn.loc\" -AccessMask Print -SinglePrinterName \"Printer1\" Gives alice@upn.loc the Print permission on \"Printer1\" located on the server \"PrtSrv1\". Creates a log in the executing directory. .Example .\\Set-PrinterPermissions -ServerName \"PrtSrv2\" -AccountName \"bob\" -AccessMask ChangePermissions -Deny -LogFile \"C:\\ScriptLogs\\aLogFile.txt\" Denies bob the ChangePermissions permission on all printers on the \"PrtSrv2\" server. Writes the log to the \"aLogFile.txt\" file in the \"C:\\ScriptLogs\" directory. .Example .\\Set-PrinterPermissions -ServerName \"PrtSrv1\" -AccountName \"ServerAdmins\" -IntAccessMask 268435456 Grants a \"ServerAdmins\" group all permissions sans \"ManageDocuments\" on \"PrintSrv1\" using the integer Access ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/modify-printer-permissions-149ae172/modify-printer-permissions-149ae172/:2:0","tags":["Active Directory","HTML"],"title":"Modify Printer Permissions","uri":"/printing/print-servers-print-queues-and-print-jobs/modify-printer-permissions-149ae172/modify-printer-permissions-149ae172/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Modify Printer Permissions Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/modify-printer-permissions-b3a3770e/modify-printer-permissions-b3a3770e/:1:0","tags":["Active Directory","HTML"],"title":"Modify Printer Permissions","uri":"/printing/print-servers-print-queues-and-print-jobs/modify-printer-permissions-b3a3770e/modify-printer-permissions-b3a3770e/"},{"categories":["Printing"],"content":"Output from Technet Gallery This script will check to see if the Everyone group has rights to the defined printer, if it does, then it will remove the access. The script will first report the current rights to the printer in the PowerShell console. If the Everyone group has permissions, these permissions will be removed, and then the updated printer permissions will be output to the PowerShell console. Here are the steps to run this script. 1. Launch PowerShell ISE with an account that has access rights to modify the printer permissions (i.e. right-click on PowerShell ISE, and select to “Run As” this account). 2. Modify the $PrinterName variable to be the name of the printer that will have the Everyone group removed from accessing. 3. Execute the script. Requirements: Run this script on the server that hosts the printer. The account that is used to run this script, needs to have access rights to remove printer permissions. As a result, we need to launch PowerShell ISE with an account that has these rights. To do this, right-click on PowerShell ISE, and select to “Run As” this account. # Define this variable with the name of the printer. $PrinterName = \"NameOfPrinter\" # Get the properties of the printer. $colPrinters = Get-Printer -Full -Name $PrinterName Foreach ($Printer in $colPrinters) { # Write to the PowerShell console the name of the printer and the corresponding permission list (the SDDL). $PrinterName = $Printer.Name Write-Host \"Printer: $PrinterName\" $PrinterSddl = $Printer.permissionsddl $ConvertSddlString = ConvertFrom-SddlString -Sddl $PrinterSddl $ConvertSddlString.DiscretionaryAcl # Modify the SDDL of the printer. $PrinterSddlEdit = $PrinterSddl -split \"\\(\" | where {$_ -like \"*;WD)\"} | select -First 10 # Remove each instance of the Everyone group from the SDDL. Foreach ($Sddl in $PrinterSddlEdit) { $SddlEdit = \"($Sddl\" $PrinterSddl = $PrinterSddl -Replace \"\\($SddlEdit\\)\",\"\" } # Apply the updated SDDL to the printer. Set-Printer -Name $PrinterName -PermissionSDDL $PrinterSddl # Re-check the permissions on the printer. $colPrinters = Get-Printer -Full -Name $PrinterName Foreach ($Printer in $colPrinters) { # Write to the PowerShell console the name of the printer and the corresponding SDDL. $PrinterName = $Printer.Name Write-Host \"`nPrinter: $PrinterName\" $PrinterSddl = $Printer.permissionsddl $ConvertSddlString = ConvertFrom-SddlString -Sddl $PrinterSddl $ConvertSddlString.DiscretionaryAcl } } ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/modify-printer-permissions-b3a3770e/modify-printer-permissions-b3a3770e/:2:0","tags":["Active Directory","HTML"],"title":"Modify Printer Permissions","uri":"/printing/print-servers-print-queues-and-print-jobs/modify-printer-permissions-b3a3770e/modify-printer-permissions-b3a3770e/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Modify Printer Priority Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/749c4650-a653-4c94-b475-68ede1684aff/749c4650-a653-4c94-b475-68ede1684aff/:1:0","tags":["Active Directory","HTML"],"title":"Modify Printer Priority","uri":"/printing/print-servers-print-queues-and-print-jobs/749c4650-a653-4c94-b475-68ede1684aff/749c4650-a653-4c94-b475-68ede1684aff/"},{"categories":["Printing"],"content":"Output from Technet Gallery Sets the priority for a printer to 2. Visual Basic strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colPrinters = objWMIService.ExecQuery _ (\"Select * From Win32_Printer where DeviceID = 'ArtDepartmentPrinter' \") For Each objPrinter in colPrinters objPrinter.Priority = 2 objPrinter.Put_ Next ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/749c4650-a653-4c94-b475-68ede1684aff/749c4650-a653-4c94-b475-68ede1684aff/:2:0","tags":["Active Directory","HTML"],"title":"Modify Printer Priority","uri":"/printing/print-servers-print-queues-and-print-jobs/749c4650-a653-4c94-b475-68ede1684aff/749c4650-a653-4c94-b475-68ede1684aff/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Monitor Print Job Status Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/5ffb01b1-6a98-46b2-9020-7a2d770a5373/5ffb01b1-6a98-46b2-9020-7a2d770a5373/:1:0","tags":["Active Directory","HTML"],"title":"Monitor Print Job Status","uri":"/printing/print-servers-print-queues-and-print-jobs/5ffb01b1-6a98-46b2-9020-7a2d770a5373/5ffb01b1-6a98-46b2-9020-7a2d770a5373/"},{"categories":["Printing"],"content":"Output from Technet Gallery Returns the job ID, user name, and total pages for each print job on a computer. Visual Basic strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colPrintJobs = objWMIService.ExecQuery _ (\"Select * from Win32_PrintJob\") Wscript.Echo \"Print Queue, Job ID, Owner, Total Pages\" For Each objPrintJob in colPrintJobs strPrinter = Split(objPrintJob.Name,\",\",-1,1) Wscript.Echo strPrinter(0) \u0026 \", \" \u0026 _ objPrintJob.JobID \u0026 \", \" \u0026 objPrintJob.Owner \u0026 \", \" _ \u0026 objPrintJob.TotalPages Next ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/5ffb01b1-6a98-46b2-9020-7a2d770a5373/5ffb01b1-6a98-46b2-9020-7a2d770a5373/:2:0","tags":["Active Directory","HTML"],"title":"Monitor Print Job Status","uri":"/printing/print-servers-print-queues-and-print-jobs/5ffb01b1-6a98-46b2-9020-7a2d770a5373/5ffb01b1-6a98-46b2-9020-7a2d770a5373/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Monitor Print Queue Times Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/894985f6-a31f-48e2-968c-2344f5a61828/894985f6-a31f-48e2-968c-2344f5a61828/:1:0","tags":["Active Directory","HTML"],"title":"Monitor Print Queue Times","uri":"/printing/print-servers-print-queues-and-print-jobs/894985f6-a31f-48e2-968c-2344f5a61828/894985f6-a31f-48e2-968c-2344f5a61828/"},{"categories":["Printing"],"content":"Output from Technet Gallery Identifies any print jobs that have been in the print queue for more than 15 minutes. Visual Basic Const USE_LOCAL_TIME = True Set DateTime = CreateObject(\"WbemScripting.SWbemDateTime\") strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colInstalledPrinters = objWMIService.ExecQuery _ (\"Select * from Win32_PrintJob\") Wscript.Echo \"Print Queue, Job ID, TimeSubmitted, Total Pages\" For Each objPrinter in colInstalledPrinters DateTime.Value = objPrinter.TimeSubmitted dtmActualTime = DateTime.GetVarDate(USE_LOCAL_TIME) TimeinQueue = DateDiff(\"n\", actualTime, Now) If TimeinQueue \u003e 15 Then strPrinterName = Split(objPrinter.Name,\",\",-1,1) Wscript.Echo strPrinterName(0) \u0026 \", \" _ \u0026 objPrinter.JobID \u0026 \", \" \u0026 dtmActualTime \u0026 \", \" \u0026 _ objPrinter.TotalPages End If Next ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/894985f6-a31f-48e2-968c-2344f5a61828/894985f6-a31f-48e2-968c-2344f5a61828/:2:0","tags":["Active Directory","HTML"],"title":"Monitor Print Queue Times","uri":"/printing/print-servers-print-queues-and-print-jobs/894985f6-a31f-48e2-968c-2344f5a61828/894985f6-a31f-48e2-968c-2344f5a61828/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Monitor Print Queues Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/7c5e58a6-14bc-481f-9ae7-8b49c56641af/7c5e58a6-14bc-481f-9ae7-8b49c56641af/:1:0","tags":["Active Directory","HTML"],"title":"Monitor Print Queues","uri":"/printing/print-servers-print-queues-and-print-jobs/7c5e58a6-14bc-481f-9ae7-8b49c56641af/7c5e58a6-14bc-481f-9ae7-8b49c56641af/"},{"categories":["Printing"],"content":"Output from Technet Gallery Uses cooked performance counters to return the number of jobs currently in each print queue on a computer. Visual Basic strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colPrintQueues = objWMIService.ExecQuery _ (\"Select * from Win32_PerfFormattedData_Spooler_PrintQueue \" \u0026 _ \"Where Name \u003c\u003e '_Total'\") For Each objPrintQueue in colPrintQueues Wscript.Echo \"Name: \" \u0026 objPrintQueue.Name Wscript.Echo \"Current jobs: \" \u0026 objPrintQueue.Jobs Next ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/7c5e58a6-14bc-481f-9ae7-8b49c56641af/7c5e58a6-14bc-481f-9ae7-8b49c56641af/:2:0","tags":["Active Directory","HTML"],"title":"Monitor Print Queues","uri":"/printing/print-servers-print-queues-and-print-jobs/7c5e58a6-14bc-481f-9ae7-8b49c56641af/7c5e58a6-14bc-481f-9ae7-8b49c56641af/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Monitor Printer Status Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/37193df6-233e-4609-9514-efda5c8ef020/37193df6-233e-4609-9514-efda5c8ef020/:1:0","tags":["Active Directory","HTML"],"title":"Monitor Printer Status","uri":"/printing/print-servers-print-queues-and-print-jobs/37193df6-233e-4609-9514-efda5c8ef020/37193df6-233e-4609-9514-efda5c8ef020/"},{"categories":["Printing"],"content":"Output from Technet Gallery Displays current status for all printers on a computer. Visual Basic strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colInstalledPrinters = objWMIService.ExecQuery _ (\"Select * from Win32_Printer\") For Each objPrinter in colInstalledPrinters Wscript.Echo \"Name: \" \u0026 objPrinter.Name Wscript.Echo \"Location: \" \u0026 objPrinter.Location Select Case objPrinter.PrinterStatus Case 1 strPrinterStatus = \"Other\" Case 2 strPrinterStatus = \"Unknown\" Case 3 strPrinterStatus = \"Idle\" Case 4 strPrinterStatus = \"Printing\" Case 5 strPrinterStatus = \"Warmup\" End Select Wscript.Echo \"Printer Status: \" \u0026 strPrinterStatus Wscript.Echo \"Server Name: \" \u0026 objPrinter.ServerName Wscript.Echo \"Share Name: \" \u0026 objPrinter.ShareName Wscript.Echo Next ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/37193df6-233e-4609-9514-efda5c8ef020/37193df6-233e-4609-9514-efda5c8ef020/:2:0","tags":["Active Directory","HTML"],"title":"Monitor Printer Status","uri":"/printing/print-servers-print-queues-and-print-jobs/37193df6-233e-4609-9514-efda5c8ef020/37193df6-233e-4609-9514-efda5c8ef020/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Monitor Printer Status Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/8b25f9f9-287e-4ea5-8b43-e737fa6db4bf/8b25f9f9-287e-4ea5-8b43-e737fa6db4bf/:1:0","tags":["Active Directory","HTML"],"title":"Monitor Printer Status","uri":"/printing/print-servers-print-queues-and-print-jobs/8b25f9f9-287e-4ea5-8b43-e737fa6db4bf/8b25f9f9-287e-4ea5-8b43-e737fa6db4bf/"},{"categories":["Printing"],"content":"Output from Technet Gallery Checks the status for each printer on a computer, and issues an alert if any of these printers have stopped. Visual Basic strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colInstalledPrinters = objWMIService.ExecQuery _ (\"Select * from Win32_Printer Where PrinterStatus = '1' \" _ \u0026 \"or PrinterStatus = '2'\") If colInstalledPrinters.Count = 0 Then Wscript.Echo \"All printers are functioning correctly.\" Else For Each objPrinter in colInstalledPrinters Wscript.Echo \"Printer \" \u0026 objprinter.Name \u0026 \" is not responding.\" Next End If ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/8b25f9f9-287e-4ea5-8b43-e737fa6db4bf/8b25f9f9-287e-4ea5-8b43-e737fa6db4bf/:2:0","tags":["Active Directory","HTML"],"title":"Monitor Printer Status","uri":"/printing/print-servers-print-queues-and-print-jobs/8b25f9f9-287e-4ea5-8b43-e737fa6db4bf/8b25f9f9-287e-4ea5-8b43-e737fa6db4bf/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Monitor Printers with a Temporary Event Subscription Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/7cc0c8f9-8e0e-4482-867c-10c8e4094d1f/7cc0c8f9-8e0e-4482-867c-10c8e4094d1f/:1:0","tags":["Active Directory","HTML"],"title":"Monitor Printers with a Temporary Event Subscription","uri":"/printing/print-servers-print-queues-and-print-jobs/7cc0c8f9-8e0e-4482-867c-10c8e4094d1f/7cc0c8f9-8e0e-4482-867c-10c8e4094d1f/"},{"categories":["Printing"],"content":"Output from Technet Gallery Uses a temporary event consumer to issues alerts any time a printer changes status. Visual Basic strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colPrinters = objWMIService. _ ExecNotificationQuery(\"Select * from __instancemodificationevent \" _ \u0026 \"within 30 where TargetInstance isa 'Win32_Printer'\") i = 0 Do While i = 0 Set objPrinter = colPrinters.NextEvent If objPrinter.TargetInstance.PrinterStatus \u003c\u003e _ objPrinter.PreviousInstance.PrinterStatus Then Select Case objPrinter.TargetInstance.PrinterStatus Case 1 strCurrentState = \"Other\" Case 2 strCurrentState = \"Unknown\" Case 3 strCurrentState = \"Idle\" Case 4 strCurrentState = \"Printing\" Case 5 strCurrentState = \"Warming Up\" End Select Select Case objPrinter.PreviousInstance.PrinterStatus Case 1 strPreviousState = \"Other\" Case 2 strPreviousState = \"Unknown\" Case 3 strPreviousState = \"Idle\" Case 4 strPreviousState = \"Printing\" Case 5 strPreviousState = \"Warming Up\" End Select Wscript.Echo objPrinter.TargetInstance.Name _ \u0026 \" is \" \u0026 strCurrentState _ \u0026 \". The printer previously was \" \u0026 strPreviousState \u0026 \".\" End If Loop ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/7cc0c8f9-8e0e-4482-867c-10c8e4094d1f/7cc0c8f9-8e0e-4482-867c-10c8e4094d1f/:2:0","tags":["Active Directory","HTML"],"title":"Monitor Printers with a Temporary Event Subscription","uri":"/printing/print-servers-print-queues-and-print-jobs/7cc0c8f9-8e0e-4482-867c-10c8e4094d1f/7cc0c8f9-8e0e-4482-867c-10c8e4094d1f/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Monitor Project Server Queue from data Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/project-server/monitor-server-queue-from-44555dc1/monitor-server-queue-from-44555dc1/:1:0","tags":["Active Directory","HTML"],"title":"Monitor Project Server Queue from data","uri":"/project-server/monitor-server-queue-from-44555dc1/monitor-server-queue-from-44555dc1/"},{"categories":["Project Server"],"content":"Output from Technet Gallery SQL -- CODE BY PLANSIS.NL SELECT DISTINCT QPG.GRP_QUEUE_ID as 'Queue ID', case when qpg.GRP_QUEUE_STATE = 8 then 'Blocked Due To A Failed Job' when qpg.GRP_QUEUE_STATE = 9 then 'Cancelled' when qpg.GRP_QUEUE_STATE = 5 then 'Failed And Blocking Correlation' when qpg.GRP_QUEUE_STATE = 6 then 'Failed But Not Blocking Correlation' when qpg.GRP_QUEUE_STATE = 2 then 'Getting Queued' when qpg.GRP_QUEUE_STATE = 3 then 'Processing' when qpg.GRP_QUEUE_STATE = 7 then 'Skipped For Optimization' when qpg.GRP_QUEUE_STATE = 4 then 'Success' when qpg.GRP_QUEUE_STATE = 1 then 'Waiting To Be Processed' when qpg.GRP_QUEUE_STATE = 10 then 'Waiting to be Processed (On Hold)' when qpg.GRP_QUEUE_STATE = 12 then 'Waiting to be Processed (Ready for Launch)' when qpg.GRP_QUEUE_STATE = 11 then 'Waiting to be Processed (Sleeping)' End as 'Job State', case when qpg.GRP_QUEUE_MESSAGE_TYPE = 1 then 'Project Save from Project Professional ' when qpg.GRP_QUEUE_MESSAGE_TYPE = 2 then 'Active Directory Sync (Enterprise Resource Pool)' when qpg.GRP_QUEUE_MESSAGE_TYPE = 3 then 'Active Directory Sync (Group)' when qpg.GRP_QUEUE_MESSAGE_TYPE = 5 then 'Archive Custom Fields ' when qpg.GRP_QUEUE_MESSAGE_TYPE = 6 then 'Archive Global Project ' when qpg.GRP_QUEUE_MESSAGE_TYPE = 7 then 'Archive Resources ' when qpg.GRP_QUEUE_MESSAGE_TYPE = 8 then 'Archive System Settings ' when qpg.GRP_QUEUE_MESSAGE_TYPE = 9 then 'Archive Project Web App Views ' when qpg.GRP_QUEUE_MESSAGE_TYPE = 4 then 'Archive Security Categories ' when qpg.GRP_QUEUE_MESSAGE_TYPE = 10 then 'Priority Bump ' when qpg.GRP_QUEUE_MESSAGE_TYPE = 11 then 'Internal (CBS Project Rendezvous) ' when qpg.GRP_QUEUE_MESSAGE_TYPE = 12 then 'OLAP Database Build ' when qpg.GRP_QUEUE_MESSAGE_TYPE = 13 then 'Internal (CBS Timesheet Rendezvous) ' when qpg.GRP_QUEUE_MESSAGE_TYPE = 15 then 'Project Site Create ' when qpg.GRP_QUEUE_MESSAGE_TYPE = 16 then 'Project Site Delete ' when qpg.GRP_QUEUE_MESSAGE_TYPE = 18 then 'Notifications ' when qpg.GRP_QUEUE_MESSAGE_TYPE = 19 then 'Archive Project ' when qpg.GRP_QUEUE_MESSAGE_TYPE = 20 then 'Archive and Delete Project' when qpg.GRP_QUEUE_MESSAGE_TYPE = 21 then 'Project Checkin ' when qpg.GRP_QUEUE_MESSAGE_TYPE = 22 then 'Project Create ' when qpg.GRP_QUEUE_MESSAGE_TYPE = 23 then 'Project Delete ' when qpg.GRP_QUEUE_MESSAGE_TYPE = 24 then 'Project Publish ' when qpg.GRP_QUEUE_MESSAGE_TYPE = 25 then 'Project Rename ' when qpg.GRP_QUEUE_MESSAGE_TYPE = 28 then 'Project Update from PSI ' when qpg.GRP_QUEUE_MESSAGE_TYPE = 29 then 'Project Update Team ' when qpg.GRP_QUEUE_MESSAGE_TYPE = 30 then 'Project Publish Notifications ' when qpg.GRP_QUEUE_MESSAGE_TYPE = 31 then 'Queue Cleanup ' when qpg.GRP_QUEUE_MESSAGE_TYPE = 32 then 'Reporting (Attribute Settings Sync) ' when qpg.GRP_QUEUE_MESSAGE_TYPE = 33 then 'Reporting (Base Calendar Sync) ' when qpg.GRP_QUEUE_MESSAGE_TYPE = 34 then 'Reporting (Custom Field Metadata Sync) ' when qpg.GRP_QUEUE_MESSAGE_TYPE = 35 then 'Reporting (Entity User View Refresh) ' when qpg.GRP_QUEUE_MESSAGE_TYPE = 36 then 'Reporting (Fiscal Periods Sync) ' when qpg.GRP_QUEUE_MESSAGE_TYPE = 37 then 'Reporting (Lookup Table Sync) ' when qpg.GRP_QUEUE_MESSAGE_TYPE = 38 then 'Reporting (Project Delete) ' when qpg.GRP_QUEUE_MESSAGE_TYPE = 39 then 'Reporting (Project Publish) ' when qpg.GRP_QUEUE_MESSAGE_TYPE = 49 then 'Reporting (Project Sync) ' when qpg.GRP_QUEUE_MESSAGE_TYPE = 41 then 'Reporting (Resource Sync) ' when qpg.GRP_QUEUE_MESSAGE_TYPE = 40 then 'Reporting (Resources Capacity Range Sync) ' when qpg.GRP_QUEUE_MESSAGE_TYPE = 42 then 'Reporting (Timesheet Adjust) ' when qpg.GRP_QUEUE_MESSAGE_TYPE = 43 then 'Reporting (Timesheet Class Sync) ' when qpg.GRP_QUEUE_MESSAGE_TYPE = 44 then 'Reporting (Timesheet Delete) ' when qpg.GRP_QUEUE_MESSAGE_TYPE = 45 then 'Reporting (Time Reporting Period Delete) ' when qpg.GRP_QUEUE_MESSAGE_TYPE = 46 then 'Reporting (Time Reporting Period Sync) ' when qpg.GRP_QUEUE_MESSAGE_TYPE = 47 then 'Reporting (Ti","date":"2019-12-01","objectID":"/project-server/monitor-server-queue-from-44555dc1/monitor-server-queue-from-44555dc1/:2:0","tags":["Active Directory","HTML"],"title":"Monitor Project Server Queue from data","uri":"/project-server/monitor-server-queue-from-44555dc1/monitor-server-queue-from-44555dc1/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Monitor Spooler Print Queue Performan Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/57118307-75b0-4bf7-8c63-e98186733b8e/57118307-75b0-4bf7-8c63-e98186733b8e/:1:0","tags":["Active Directory","HTML"],"title":"Monitor Spooler Print Queue Performan","uri":"/printing/print-servers-print-queues-and-print-jobs/57118307-75b0-4bf7-8c63-e98186733b8e/57118307-75b0-4bf7-8c63-e98186733b8e/"},{"categories":["Printing"],"content":"Output from Technet Gallery Uses cooked performance counters to return information about print jobs spooled on a print server. Visual Basic strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") set objRefresher = CreateObject(\"WbemScripting.SWbemRefresher\") Set colItems = objRefresher.AddEnum _ (objWMIService, \"Win32_PerfFormattedData_Spooler_PrintQueue\").objectSet objRefresher.Refresh For i = 1 to 5 For Each objItem in colItems Wscript.Echo \"Add Network Printer Calls: \" \u0026 _ objItem.AddNetworkPrinterCalls Wscript.Echo \"Bytes Printed Per Second: \" \u0026 objItem.BytesPrintedPersec Wscript.Echo \"Caption: \" \u0026 objItem.Caption Wscript.Echo \"Description: \" \u0026 objItem.Description Wscript.Echo \"Enumerate Network Printer Calls: \" \u0026 _ objItem.EnumerateNetworkPrinterCalls Wscript.Echo \"Job Errors: \" \u0026 objItem.JobErrors Wscript.Echo \"Jobs: \" \u0026 objItem.Jobs Wscript.Echo \"Jobs Spooling: \" \u0026 objItem.JobsSpooling Wscript.Echo \"Maximum Jobs Spooling: \" \u0026 objItem.MaxJobsSpooling Wscript.Echo \"Maximum References: \" \u0026 objItem.MaxReferences Wscript.Echo \"Name: \" \u0026 objItem.Name Wscript.Echo \"Not-Ready Errors: \" \u0026 objItem.NotReadyErrors Wscript.Echo \"Out-of-Paper Errors: \" \u0026 objItem.OutofPaperErrors Wscript.Echo \"References: \" \u0026 objItem.References Wscript.Echo \"Total Jobs Printed: \" \u0026 objItem.TotalJobsPrinted Wscript.Echo \"Total Pages Printed: \" \u0026 objItem.TotalPagesPrinted Wscript.Sleep 2000 objRefresher.Refresh Next Next ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/57118307-75b0-4bf7-8c63-e98186733b8e/57118307-75b0-4bf7-8c63-e98186733b8e/:2:0","tags":["Active Directory","HTML"],"title":"Monitor Spooler Print Queue Performan","uri":"/printing/print-servers-print-queues-and-print-jobs/57118307-75b0-4bf7-8c63-e98186733b8e/57118307-75b0-4bf7-8c63-e98186733b8e/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Monitor the Print Servi Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/41729e3d-69f2-4e48-ac66-2124721def87/41729e3d-69f2-4e48-ac66-2124721def87/:1:0","tags":["Active Directory","HTML"],"title":"Monitor the Print Servi","uri":"/printing/print-servers-print-queues-and-print-jobs/41729e3d-69f2-4e48-ac66-2124721def87/41729e3d-69f2-4e48-ac66-2124721def87/"},{"categories":["Printing"],"content":"Output from Technet Gallery Returns the status of the Spooler service (running, stopped, paused, etc.). Visual Basic strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colRunningServices = objWMIService.ExecQuery _ (\"Select * from Win32_Service Where Name = 'Spooler'\") For Each objService in colRunningServices Wscript.Echo objService.DisplayName \u0026 \" -- \" \u0026 objService.State Next ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/41729e3d-69f2-4e48-ac66-2124721def87/41729e3d-69f2-4e48-ac66-2124721def87/:2:0","tags":["Active Directory","HTML"],"title":"Monitor the Print Servi","uri":"/printing/print-servers-print-queues-and-print-jobs/41729e3d-69f2-4e48-ac66-2124721def87/41729e3d-69f2-4e48-ac66-2124721def87/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Monitoring of Print jobs with Emailing functionality Original Technet Description URL Description Download: [Download Link](Download\\Monitoring of Print jobs with Emailing functionality.pdf) ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/of-print-jobs-with-71f210a0/of-print-jobs-with-71f210a0/:1:0","tags":["Active Directory","HTML"],"title":"Monitoring of Print jobs with Emailing functionality","uri":"/printing/print-servers-print-queues-and-print-jobs/of-print-jobs-with-71f210a0/of-print-jobs-with-71f210a0/"},{"categories":["Printing"],"content":"Output from Technet Gallery 1.0 Introduction The script has been designed and implemented on Visual Basic script; the basic task behind this tool is to monitor the print jobs status on a defined printer. On errors, it will send out a notification via mail. 2.0 Script ‘Power-shell 1.0 Script written by: Arvind Ramtohul ‘Date written: March 2012 ‘ ----------------------------------------------------------------------------------------------------------------------- ‘ Initializing global variables StrServer = \"servername\" ‘Used in email function and main script StrPrinter = \"printername\" ‘Printer name variable Dim BodyTxt ‘The body of the mail Dim BodyLine ‘The variable that will contain the error line Dim Error = 0 ‘Initial error variable set to 0 ‘ ----------------------------------------------------------------------------------------------------------------------- Set DateTime = CreateObject(\"WbemScripting.SWbemDateTime\") ‘Retrieving the WMI time Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strServer \u0026 \"\\root\\cimv2\") ‘Retrieving the WMI information of the machine name BodyTxt= \"Print Job\" \u0026 \" \" \u0026 \"Time Submitted\" \u0026 vbcrlf \u0026 string (117,\"_\") ‘ ----------------------------------------------------------------------------------------------------------------------- DateToday = DateAdd(\"d\",-1 * 1,now) ‘Using date yesterday to search the errors Set colInstalledPrinters = objWMIService.ExecQuery _ (\"Select * from Win32_PrintJob Where Name like '%\" StrPrinter “%' and (JobStatus like '%Error%' ) \") ‘Extracting the print jobs which ended in error For Each colPrintJobs in colInstalledPrinters ‘Run through all the print jobs that ended in error DateTime.Value = colPrintJobs.TimeSubmitted dtmActualTime = DateTime.GetVarDate(USE_LOCAL_TIME) ‘Converting the WMI time into local system time If dtmActualTime \u003e=DateToday Then Error = 1 BodyLine = colPrintJobs.Document \u0026 \" \" \u0026 dtmActualTime ‘Bodyline contains the “error” jobs with its respective failing date and time End if BodyTxt = BodyTxt \u0026 vbcrlf \u0026 BodyLine Next If Error = 1 Then ‘At error, script will send out a notification BodyLine = \"Above job(s) have ended in error. Please check Printer!\" BodyTxt = BodyTxt \u0026 vbcrlf \u0026 vbcrlf \u0026 BodyLine Check = \"Error\" Sendmail BodyTxt, Check, StrPrinter, StrServer End if Function SendMail(txtbody, Check, StrPrinter, STrServer) dim objMsg dim msweb msweb = \"http://schemas.microsoft.com/cdo/configuration/\" set objMsg = CreateObject(\"CDO.Message\") objMsg.Subject = \"PRINTER \" \u0026 StrPrinter \u0026 \" - North PD \" \u0026 StrServer \u0026 \" @ \" \u0026 Trim(cstr(now)) \u0026_ \" (\" \u0026 trim(cstr(Check)) \u0026 \" )\" objMsg.From = \" sourceaddress@mail.com \" objMsg.To = \"destinationaddress1@mail.com, destinationaddress2@mail.com , destinationaddressZZZ@mail.com\" objMsg.cc = \" destinationaddress3@mail.com \" objMsg.TextBody = txtbody 'This section provides the configuration information for the remote SMTP server. 'Normally you will only change the server name or IP. 'Server port (typically 25) 'Use SSL for the connection (False or True) 'Connection Timeout in seconds1 (the maximum time CDO trying to connect to the SMTP server) objMsg.Configuration.Fields.Item(msweb \u0026 \"sendusing\").Value = 2 objMsg.Configuration.Fields.Item(msweb \u0026 \"smtpserver\").Value = \"smtp.client.com\" objMsg.Configuration.Fields.Item(msweb \u0026 \"smtpserverport\").Value = 25 objMsg.Configuration.Fields.Item(msweb \u0026 \"smtpusessl\").Value = False objMsg.Configuration.Fields.Item (msweb \u0026 \"smtpconnectiontimeout\").Value = 60 objMsg.Configuration.Fields.Update '=========== End remote SMTP server configuration section== objMsg.Send Set objMsg =nothing End function ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/of-print-jobs-with-71f210a0/of-print-jobs-with-71f210a0/:2:0","tags":["Active Directory","HTML"],"title":"Monitoring of Print jobs with Emailing functionality","uri":"/printing/print-servers-print-queues-and-print-jobs/of-print-jobs-with-71f210a0/of-print-jobs-with-71f210a0/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Move Networked Printers Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/8c4922f1-cb33-4730-b024-230dd13c1bc8/8c4922f1-cb33-4730-b024-230dd13c1bc8/:1:0","tags":["Active Directory","HTML"],"title":"Move Networked Printers","uri":"/printing/printer-ports-and-printer-drivers/8c4922f1-cb33-4730-b024-230dd13c1bc8/8c4922f1-cb33-4730-b024-230dd13c1bc8/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **Francis Morley Moves networked printers on a local computer from one print server to another. The script also identifies the default printer and maintains that setting after remapping the printers. Visual Basic '========================================================================== ' ' NAME: MovePrinters.vbs ' ' AUTHOR: Francis Morley ' DATE : 03/02/2006 ' ' COMMENT: Moves desired networked printers on a local computer from one print ' server to another print server by deleting the printers and recreating. ' Determines the default printer and sets back the default printer ' after recreation. Used for 2000 workstation printer migration. ' ' NOTE: We used a longer version which created a text file on a network share ' for each computer changed. The text file was called [username]- ' [computername].txt. The text file listed all the printers on the local ' computer and the default printer. This helped us track the changes. ' '========================================================================== Const HKEY_CURRENT_USER = \u0026H80000001 Dim LocationArrays(2) strComputer = \".\" 'List Printers To Be Changed LocationArrays(0) = \"PrinterName A\" LocationArrays(1) = \"PrinterName B\" LocationArrays(2) = \"PrinterName C\" Set WshNetwork = WScript.CreateObject(\"WScript.Network\") 'Determine Default PrinterSet oReg=GetObject(\"winmgmts:{impersonationLevel=impersonate}!\\\\\" \u0026 _ strComputer \u0026 \"\\root\\default:StdRegProv\") strKeyPath = \"Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\"strValueName = \"Device\"oReg.GetStringValue HKEY_CURRENT_USER,strKeyPath,strValueName,strValue strDefaultPrnt = strValuevlenDefaultPrnt = Len(strDefaultPrnt)vlenDefaultPrntm = vlenDefaultPrnt - 15strDefaultPrntm = Left(strDefaultPrnt,vlenDefaultPrntm) 'Enumerate Printers and Change Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\CIMV2\") Set colInstalledPrinters = objWMIService.ExecQuery(\"SELECT * FROM Win32_Printer\") For Each objPrinter In colInstalledPrinters vDeviceID = objPrinter.DeviceID For Each LocationArray In LocationArrays If (UCASE(vDeviceID)) = (\"\\\\PRINTSERVER1\\\" \u0026 LocationArray \u0026 \"\") Then WshNetwork.RemovePrinterConnection \"\\\\PRINTSERVER1\\\" \u0026 LocationArray \u0026 \"\" WshNetwork.AddWindowsPrinterConnection \"\\\\PRINTSERVER2\\\" \u0026 LocationArray \u0026 \"\" If vDeviceID = strDefaultPrntm Then WshNetwork.SetDefaultPrinter \"\\\\PRINTSERVER2\\\" \u0026 LocationArray \u0026 \"\" End If End If If (UCASE(vDeviceID)) = (\"\\\\192.168.1.111\\\" \u0026 LocationArray \u0026 \"\") Then WshNetwork.RemovePrinterConnection \"\\\\192.168.1.111\\\" \u0026 LocationArray \u0026 \"\" WshNetwork.AddWindowsPrinterConnection \"\\\\192.168.2.222\\\" \u0026 LocationArray \u0026 \"\" If vDeviceID = strDefaultPrntm Then WshNetwork.SetDefaultPrinter \"\\\\192.168.2.222\\\" \u0026 LocationArray \u0026 \"\" End If End If NextNext ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/8c4922f1-cb33-4730-b024-230dd13c1bc8/8c4922f1-cb33-4730-b024-230dd13c1bc8/:2:0","tags":["Active Directory","HTML"],"title":"Move Networked Printers","uri":"/printing/printer-ports-and-printer-drivers/8c4922f1-cb33-4730-b024-230dd13c1bc8/8c4922f1-cb33-4730-b024-230dd13c1bc8/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Move Printers Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/1d238258-c642-4710-b058-a5a008345976/1d238258-c642-4710-b058-a5a008345976/:1:0","tags":["Active Directory","HTML"],"title":"Move Printers","uri":"/printing/printer-ports-and-printer-drivers/1d238258-c642-4710-b058-a5a008345976/1d238258-c642-4710-b058-a5a008345976/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **Francis Morley Moves network printers on a local computer from one print server to another. Identifies the default printer and restores the default printer after all the printers have been moved. Used for Windows 2000 workstation printer migration. Visual Basic '========================================================================== ' ' NAME: MovePrinters.vbs ' ' AUTHOR: Francis Morley ' DATE : 03/02/2006 ' ' COMMENT: Moves desired networked printers on a local computer from one print ' server to another print server by deleting the printers and recreating. ' Determines the default printer and sets back the default printer ' after recreation. Used for 2000 workstation printer migration. ' ' NOTE: We used a longer version which created a text file on a network share ' for each computer changed. The text file was called [username]- ' [computername].txt. The text file listed all the printers on the local ' computer and the default printer. This helped us track the changes. ' '========================================================================== Const HKEY_CURRENT_USER = \u0026H80000001 Dim LocationArrays(2) strComputer = \".\" 'List Printers To Be Changed LocationArrays(0) = \"PrinterName A\" LocationArrays(1) = \"PrinterName B\" LocationArrays(2) = \"PrinterName C\" Set WshNetwork = WScript.CreateObject(\"WScript.Network\") 'Determine Default PrinterSet oReg=GetObject(\"winmgmts:{impersonationLevel=impersonate}!\\\\\" \u0026 _ strComputer \u0026 \"\\root\\default:StdRegProv\") strKeyPath = \"Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\"strValueName = \"Device\"oReg.GetStringValue HKEY_CURRENT_USER,strKeyPath,strValueName,strValue strDefaultPrnt = strValuevlenDefaultPrnt = Len(strDefaultPrnt)vlenDefaultPrntm = vlenDefaultPrnt - 15strDefaultPrntm = Left(strDefaultPrnt,vlenDefaultPrntm) 'Enumerate Printers and Change Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\CIMV2\") Set colInstalledPrinters = objWMIService.ExecQuery(\"SELECT * FROM Win32_Printer\") For Each objPrinter In colInstalledPrinters vDeviceID = objPrinter.DeviceID For Each LocationArray In LocationArrays If (UCASE(vDeviceID)) = (\"\\\\PRINTSERVER1\\\" \u0026 LocationArray \u0026 \"\") Then WshNetwork.RemovePrinterConnection \"\\\\PRINTSERVER1\\\" \u0026 LocationArray \u0026 \"\" WshNetwork.AddWindowsPrinterConnection \"\\\\PRINTSERVER2\\\" \u0026 LocationArray \u0026 \"\" If vDeviceID = strDefaultPrntm Then WshNetwork.SetDefaultPrinter \"\\\\PRINTSERVER2\\\" \u0026 LocationArray \u0026 \"\" End If End If If (UCASE(vDeviceID)) = (\"\\\\192.168.1.111\\\" \u0026 LocationArray \u0026 \"\") Then WshNetwork.RemovePrinterConnection \"\\\\192.168.1.111\\\" \u0026 LocationArray \u0026 \"\" WshNetwork.AddWindowsPrinterConnection \"\\\\192.168.2.222\\\" \u0026 LocationArray \u0026 \"\" If vDeviceID = strDefaultPrntm Then WshNetwork.SetDefaultPrinter \"\\\\192.168.2.222\\\" \u0026 LocationArray \u0026 \"\" End If End If NextNext ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/1d238258-c642-4710-b058-a5a008345976/1d238258-c642-4710-b058-a5a008345976/:2:0","tags":["Active Directory","HTML"],"title":"Move Printers","uri":"/printing/printer-ports-and-printer-drivers/1d238258-c642-4710-b058-a5a008345976/1d238258-c642-4710-b058-a5a008345976/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Move Printers from One Print Server to Another Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/20428e3a-12c6-4354-bddf-d748367fca72/20428e3a-12c6-4354-bddf-d748367fca72/:1:0","tags":["Active Directory","HTML"],"title":"Move Printers from One Print Server to Another","uri":"/printing/printer-ports-and-printer-drivers/20428e3a-12c6-4354-bddf-d748367fca72/20428e3a-12c6-4354-bddf-d748367fca72/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **Martin Berton Moves mapped printers from one print server to another. Visual Basic 'Replace mapped printers from one print server to another 'Shared printers on new server must have identical printer sharenames as printers on old server 'Replaced and removed printers is logged in a logfile 'Written by: Martin Berton (martin.berton@infocare.se) on error resume next Const ForReading = 1, ForWriting = 2, ForAppending = 8 '======================================= 'Here you name the servers and logfile '======================================= oldprintserver = \"OLDSERVER\" newprintserver = \"NEWSERVER\" logfilepath = \"remapp_printers.txt\" Set filesys = CreateObject(\"Scripting.FileSystemObject\") Set filetxt = filesys.OpenTextFile(logfilepath, ForAppending, True) 'Default printer is read from the registry Set objShell = CreateObject(\"WScript.Shell\") sPath = \"HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\Device\" ar_PrnInfo = Split(objShell.RegRead(sPath), \",\") sPrinter = \"\" If IsArray(ar_PrnInfo) Then sPrinter = ar_PrnInfo(0) End If 'Installed printers is read Set WshNetwork = WScript.CreateObject(\"WScript.Network\") Set Printers = WshNetwork.EnumPrinterConnections 'Checking if printers is on old print server For i = 0 to Printers.Count - 1 if UCase(Mid(Printers.Item(i), 2, Len(oldprintserver)+2)) = \"\\\"\u0026 oldprintserver \u0026\"\\\" Then oldprinter = Printers.Item(i) newprinter = \"\\\\\" \u0026 newprintserver \u0026 \"\\\" \u0026 Mid(Printers.Item(i), Len(oldprintserver)+4) ' Check if printer the printer on the new print server allready is installed allreadyinstalled = false For j = 0 to Printers.Count - 1 if newprinter = Printers.Item(j) Then allreadyinstalled = true end if Next if allreadyinstalled then 'If the printer allreday is installed, the printer on the old print server will be removed filetxt.WriteLine(oldprinter \u0026 \" removed\") else 'If the printer is not installed, the printer on the new print server is installed 'and the printer on the old print server will be removed filetxt.WriteLine(oldprinter \u0026 \" replaced with \" \u0026 newprinter) WshNetwork.AddWindowsPrinterConnection newprinter end if WshNetwork.RemovePrinterConnection oldprinter end if Next 'if the users default printer is a printer on the old print server, the default printer 'is changed to the new print server if UCase(Mid(sPrinter, 2, Len(oldprintserver)+2)) = \"\\\"\u0026 oldprintserver \u0026\"\\\" Then PrinterPath = \"\\\\\" \u0026 newprintserver \u0026 \"\\\" \u0026 Mid(sPrinter, Len(oldprintserver)+4) filetxt.WriteLine(\"New default printer = \" \u0026 PrinterPath) WshNetwork.SetDefaultPrinter PrinterPath End If filetxt.Close ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/20428e3a-12c6-4354-bddf-d748367fca72/20428e3a-12c6-4354-bddf-d748367fca72/:2:0","tags":["Active Directory","HTML"],"title":"Move Printers from One Print Server to Another","uri":"/printing/printer-ports-and-printer-drivers/20428e3a-12c6-4354-bddf-d748367fca72/20428e3a-12c6-4354-bddf-d748367fca72/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL MS Project recovery tool for .MPP files, named Recovery Toolbox for Proj Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/ms-recovery-tool-for-mpp-f44115b8/ms-recovery-tool-for-mpp-f44115b8/:1:0","tags":["Active Directory","HTML"],"title":"MS Project recovery tool for .MPP files, named Recovery Toolbox for Proj","uri":"/project-server/ms-recovery-tool-for-mpp-f44115b8/ms-recovery-tool-for-mpp-f44115b8/"},{"categories":["Project Server"],"content":"Output from Technet Gallery Recovery Toolbox for Project represents an easy MS Project file recovery tool utility to open and analyze corrupted MPP files. After the analysis, this data can be exported into clean files of Microsoft Project format. Full descriptions with screenshots, video, manuals available here:https://project.recoverytoolbox.com/ Here are some step-by-step guidelines for how to recover Microsoft Project file in case of its unavailability for any reason: get the setup file of Recovery Toolbox for Project from here:https://recoverytoolbox.com/download/RecoveryToolboxForProjectInstall.exe click the installation file of MPP recovery tool to install it use the shortcut of MS Project recovery tool to start working choose a file of MPP format that is not openable normally click the Analyze button to start the processing of selected file choose the OK button to confirm the recovery of Microsoft Project file preview the results of analysis and click the following button:Start Recovery Recovery Toolbox for Project has the following key features: recovers Microsoft Project files of any version, starting from 2000 allows repairing all fields in case of minor corruptions in case of major corruptions, allows repairing all fields except this one: TaskName automatically exports restored data to the Microsoft Project format features an easy interface, provides guidelines for how to repair MS Project file works with any version of Windows, starting from the 98 the interface of Recovery Toolbox for Project is translated to 14 languages does not modify the source file to be analyzed Note: your PC workstation should have the Microsoft Project application installed Recovery Toolbox, Inc. provides the online Microsoft Project recovery tool. So, there is no need to installRecovery Toolbox for Project in case you need to understand how to repair MPP file manually, here are some guidelines: open the following link: https://online.recoverytoolbox.com click the Select File button and select a file of Microsoft Project format to be recovered provide your valid email address and enter CAPTCHA click the Next step button and follow additional guidelines in the very end, you will be able to download the recovered file of MPP format Note that the size of input file to be uploaded should not exceed 10 Gb. Find out how to recover MS Project file corrupt withRecovery Toolbox for Project. ","date":"2019-12-01","objectID":"/project-server/ms-recovery-tool-for-mpp-f44115b8/ms-recovery-tool-for-mpp-f44115b8/:2:0","tags":["Active Directory","HTML"],"title":"MS Project recovery tool for .MPP files, named Recovery Toolbox for Proj","uri":"/project-server/ms-recovery-tool-for-mpp-f44115b8/ms-recovery-tool-for-mpp-f44115b8/"},{"categories":["Printing"],"content":"Original Links Original Technet URL otify Users When a Print Queue is Purged Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/9f8ad84e-239d-45bf-a14f-ad8f3fc4988a/9f8ad84e-239d-45bf-a14f-ad8f3fc4988a/:1:0","tags":["Active Directory","HTML"],"title":"otify Users When a Print Queue is Purged","uri":"/printing/print-servers-print-queues-and-print-jobs/9f8ad84e-239d-45bf-a14f-ad8f3fc4988a/9f8ad84e-239d-45bf-a14f-ad8f3fc4988a/"},{"categories":["Printing"],"content":"Output from Technet Gallery Uses Msg.exe to send a network alert to any users who had documents in a print queue about to be purged. After sending the alerts, the script purges the print queue. Visual Basic Set WshShell = Wscript.CreateObject(\"Wscript.Shell\") Set objDictionary = CreateObject(\"Scripting.Dictionary\") strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colInstalledPrintJobs = objWMIService.ExecQuery _ (\"Select * from Win32_PrintJob\") For Each objPrintJob in colInstalledPrintJobs strPrinterName = Split(objPrintJob.Name,\",\",-1,1) If objDictionary.Exists(objPrintJob.Notify) Then Else objDictionary.Add objPrintJob.Notify, strPrinterName(0) End If Next arrKeys = objDictionary.Keys arrItems = objDictionary.Items For i = 0 to objDictionary.Count - 1 Message = \"The documents you were printing on printer \" Message = Message \u0026 arrItems(i) Message = Message \u0026 \" had to be deleted from the print queue. \" Message = Message \u0026 \"You will need to reprint these documents.\" CommandString = \"%comspec% /c msg \" \u0026 arrKeys(i) \u0026 \" \" \u0026 Chr(34) _ \u0026 Message \u0026 Chr(34) WshShell.Run CommandString, 0, True Next Set colInstalledPrinters = objWMIService.ExecQuery _ (\"Select * from Win32_Printer\") For Each objPrinter in colInstalledPrinters objPrinter.CancelAllJobs() Next ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/9f8ad84e-239d-45bf-a14f-ad8f3fc4988a/9f8ad84e-239d-45bf-a14f-ad8f3fc4988a/:2:0","tags":["Active Directory","HTML"],"title":"otify Users When a Print Queue is Purged","uri":"/printing/print-servers-print-queues-and-print-jobs/9f8ad84e-239d-45bf-a14f-ad8f3fc4988a/9f8ad84e-239d-45bf-a14f-ad8f3fc4988a/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Overview of Microsoft Solution Framework (MSF) Original Technet Description URL Description Download: [Download Link](Download\\Brief overview on Microsoft Solution Framework.ppsx) ","date":"2019-12-01","objectID":"/project-server/overview-of-solution-7582bb06/overview-of-solution-7582bb06/:1:0","tags":["Active Directory","HTML"],"title":"Overview of Microsoft Solution Framework (MSF)","uri":"/project-server/overview-of-solution-7582bb06/overview-of-solution-7582bb06/"},{"categories":["Project Server"],"content":"Output from Technet Gallery Overview of Microsoft Solution Framework ..is a approach for successfully delivering technology solution faster with fewer people and less risk while enabling higher quality result -MSDN. Discussion of below topics of Microsoft solution framework (MSF) : Principle of Microsoft Solution Framework MindSet Team model Governance It’s an adoptable approach for successfully delivering technology solution. ","date":"2019-12-01","objectID":"/project-server/overview-of-solution-7582bb06/overview-of-solution-7582bb06/:2:0","tags":["Active Directory","HTML"],"title":"Overview of Microsoft Solution Framework (MSF)","uri":"/project-server/overview-of-solution-7582bb06/overview-of-solution-7582bb06/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Pause a Printer Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/8a31a88c-2240-45ef-a33e-46c4bb8d986c/8a31a88c-2240-45ef-a33e-46c4bb8d986c/:1:0","tags":["Active Directory","HTML"],"title":"Pause a Printer","uri":"/printing/print-servers-print-queues-and-print-jobs/8a31a88c-2240-45ef-a33e-46c4bb8d986c/8a31a88c-2240-45ef-a33e-46c4bb8d986c/"},{"categories":["Printing"],"content":"Output from Technet Gallery Pauses a printer named ArtDepartmentPrinter. Visual Basic strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colInstalledPrinters = objWMIService.ExecQuery _ (\"Select * from Win32_Printer Where Name = 'ArtDepartmentPrinter'\") For Each objPrinter in colInstalledPrinters ObjPrinter.Pause() Next ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/8a31a88c-2240-45ef-a33e-46c4bb8d986c/8a31a88c-2240-45ef-a33e-46c4bb8d986c/:2:0","tags":["Active Directory","HTML"],"title":"Pause a Printer","uri":"/printing/print-servers-print-queues-and-print-jobs/8a31a88c-2240-45ef-a33e-46c4bb8d986c/8a31a88c-2240-45ef-a33e-46c4bb8d986c/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Pause All Print Jobs Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/4573cff2-bee1-41c9-930c-bf3db68cd489/4573cff2-bee1-41c9-930c-bf3db68cd489/:1:0","tags":["Active Directory","HTML"],"title":"Pause All Print Jobs","uri":"/printing/print-servers-print-queues-and-print-jobs/4573cff2-bee1-41c9-930c-bf3db68cd489/4573cff2-bee1-41c9-930c-bf3db68cd489/"},{"categories":["Printing"],"content":"Output from Technet Gallery Pauses all the print jobs on a print server. Visual Basic strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colPrintJobs = objWMIService.ExecQuery _ (\"Select * from Win32_PrintJob\") For Each objPrintJob in colPrintJobs objPrintJob.Pause Next ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/4573cff2-bee1-41c9-930c-bf3db68cd489/4573cff2-bee1-41c9-930c-bf3db68cd489/:2:0","tags":["Active Directory","HTML"],"title":"Pause All Print Jobs","uri":"/printing/print-servers-print-queues-and-print-jobs/4573cff2-bee1-41c9-930c-bf3db68cd489/4573cff2-bee1-41c9-930c-bf3db68cd489/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Pause All Printers with Empty Print Queues Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/cf2b6b61-8ffe-444b-857b-e3a205bc693c/cf2b6b61-8ffe-444b-857b-e3a205bc693c/:1:0","tags":["Active Directory","HTML"],"title":"Pause All Printers with Empty Print Queues","uri":"/printing/print-servers-print-queues-and-print-jobs/cf2b6b61-8ffe-444b-857b-e3a205bc693c/cf2b6b61-8ffe-444b-857b-e3a205bc693c/"},{"categories":["Printing"],"content":"Output from Technet Gallery Pauses any printers that have no pending print jobs. Visual Basic strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colInstalledPrinters = objWMIService.ExecQuery _ (\"Select * from Win32_Printer\") For Each objPrinter in colInstalledPrinters Set colPrintJobs = objWMIService.ExecQuery _ (\"Select * from Win32_PerfFormattedData_Spooler_PrintQueue \" _ \u0026 \"Where Name = '\" \u0026 objPrinter.Name \u0026 \"'\") For Each objPrintQueue in colPrintJobs If objPrintQueue.Jobs = 0 and objPrintQueue.Name \u003c\u003e \"_Total\" Then objPrinter.Pause() End If Next Next ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/cf2b6b61-8ffe-444b-857b-e3a205bc693c/cf2b6b61-8ffe-444b-857b-e3a205bc693c/:2:0","tags":["Active Directory","HTML"],"title":"Pause All Printers with Empty Print Queues","uri":"/printing/print-servers-print-queues-and-print-jobs/cf2b6b61-8ffe-444b-857b-e3a205bc693c/cf2b6b61-8ffe-444b-857b-e3a205bc693c/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL PC Budget templa Original Technet Description URL Description Download: [Download Link](Download\\TPC Budget template files.zip) ","date":"2019-12-01","objectID":"/project-server/the-tpc-budget-template-1978c92d/the-tpc-budget-template-1978c92d/:1:0","tags":["Active Directory","HTML"],"title":"PC Budget templa","uri":"/project-server/the-tpc-budget-template-1978c92d/the-tpc-budget-template-1978c92d/"},{"categories":["Project Server"],"content":"Output from Technet Gallery The files in this zip file are related to the Project Corner Blog article about Budget templates. It includes a manual that will help you on your way as well as a example file and the actual MS Project Budget Template. The files can be used for ease in creating a budget within projects. More information about budget resources and budget templates in general can be found on the TPC blog: http://wp.me/p7nPYi-A2 ","date":"2019-12-01","objectID":"/project-server/the-tpc-budget-template-1978c92d/the-tpc-budget-template-1978c92d/:2:0","tags":["Active Directory","HTML"],"title":"PC Budget templa","uri":"/project-server/the-tpc-budget-template-1978c92d/the-tpc-budget-template-1978c92d/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Planner Charts Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/planner-charts-56ca3ac4/planner-charts-56ca3ac4/:1:0","tags":["Active Directory","HTML"],"title":"Planner Charts","uri":"/project-server/planner-charts-56ca3ac4/planner-charts-56ca3ac4/"},{"categories":["Project Server"],"content":"Output from Technet Gallery //Update - March 2020// - All dates are now of type Date meaning you can create your own DAX calcs between the dates and the labels are split into 6 separate columns. //Update - February 2020// - The charts now support the priority field and additional charts have been created to display the tasks by priority and a decomposition tree. This Power BI template replicates the charts feature in Planner, and provides additional drill through capability by plan or resources. It imports the exported Excel planner files from a common folder, providing the ability to view multiple plans at once. It also provides the ability to drill-though to see task details by resource / project, allowing the viewer to see which task are remaining, the status, due dates and the number of remaining tasks. The file also splits assignments, so if a task is assigned to two resources, the assignment is counted and displayed individually for each resource. The report can be seen here and the supporting blog information is here ","date":"2019-12-01","objectID":"/project-server/planner-charts-56ca3ac4/planner-charts-56ca3ac4/:2:0","tags":["Active Directory","HTML"],"title":"Planner Charts","uri":"/project-server/planner-charts-56ca3ac4/planner-charts-56ca3ac4/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Point Client Computers to a New Print Server Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/0cb47cac-42d5-4e9d-a85e-6e4b1ef7883c/0cb47cac-42d5-4e9d-a85e-6e4b1ef7883c/:1:0","tags":["Active Directory","HTML"],"title":"Point Client Computers to a New Print Server","uri":"/printing/printer-ports-and-printer-drivers/0cb47cac-42d5-4e9d-a85e-6e4b1ef7883c/0cb47cac-42d5-4e9d-a85e-6e4b1ef7883c/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **Anonymous Submission Logon script that changes the printer connections on workstations. Visual Basic 'This script works well in a login script. When ran from a workstation 'it will loop thru all of the printers installed for the current logged on 'user and if they are connected to the old server they will be removed 'and then remaped to the new server. It will also attempt to descover 'which printer is the default printer in order to reset this if it is one 'of the printers that will be moved. ' 'Note: All of the printers must exist on the new server before this script ' should be run. If not then the printer will simply be removed from ' users profile and the script will not be able to reconnect them. ' \"Print Migrator\" is a utility that is part of the Windows 2000 and ' Windows 2003 resource kit. This will create all of the printers ' on the new server while maintaining all of their settings including ' print queue security. Keep in mind that for a time you will see ' duplicate printer if you do a search on printers, one advertisec ' from each server. ' 'We used this method to move just over 100 printers from one server to another 'and then ran this script as a logon script in a group policy. We let it run for 'a few days in order to allow for some users who don't logout every day have a 'chance to run it. All of our users profiles were updated and they didn't even 'know it was happening. We then deleted all of the printers from the old server. ' 'Note: The script does not run if you are Terminal serviced or SMS remote controling. Option Explicit Dim from_sv, to_sv, PrinterPath, PrinterName, DefaultPrinterName, DefaultPrinter Dim DefaultPrinterServer, SetDefault, key Dim spoint, Loop_Counter, scomma Dim WshNet, WshShell Dim WS_Printers DefaultPrinterName = \"\" spoint = 0 scomma = 0 SetDefault = 0 set WshShell = CreateObject(\"WScript.shell\") from_sv = \"\\\\old\" 'This should be the name of the old server. to_sv = \"\\\\new\" 'This should be the name of your new server. 'Just incase their are no printers and therefor no defauld printer set ' this will prevent the script form erroring out. On Error Resume Next key = \"HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\Device\" DefaultPrinter = LCase(WshShell.RegRead (key)) If Err.Number \u003c\u003e 0 ThenDefaultPrinterName = \"\" else 'If the registry read was successful then parse out the printer name so we can ' compare it with each printer later and reset the correct default printer ' if one of them matches this one read from the registry. spoint = instr(3,DefaultPrinter,\"\\\")+1 DefaultPrinterServer = left(DefaultPrinter,spoint-2) if lcase(DefaultPrinterServer) = from_sv then DefaultPrinterName = mid(DefaultPrinter,spoint,len(DefaultPrinter)-spoint+1) scomma = instr(DefaultPrinterName,\",\") DefaultPrinterName = left(DefaultPrinterName,scomma -1)end if end if Set WshNet = CreateObject(\"WScript.Network\") Set WS_Printers = WshNet.EnumPrinterConnections 'You have to step by 2 because only the even numbers will be the print queue's ' server and share name. The odd numbers are the printer names. For Loop_Counter = 0 To WS_Printers.Count - 1 Step 2'Remember the + 1 is to get the full path ie.. \\\\your_server\\your_printer.PrinterPath = lcase(WS_Printers(Loop_Counter + 1)) 'We only want to work with the network printers that are mapped to the original' server, so we check for \"\\\\Your_server\".if lcase(LEFT(PrinterPath,len(from_sv))) = from_sv then 'Now we need to parse the PrinterPath to get rhe Printer Name. spoint = instr(3,PrinterPath,\"\\\")+1 PrinterName = mid(PrinterPath,spoint,len(PrinterPath)-spoint+1) 'Now remove the old printer connection. WshNet.RemovePrinterConnection from_sv+\"\\\"+PrinterName 'and then create the new connection. 'Do not create c6100 if lcase(PrinterName) \u003c\u003e \"c6100\" then WshNet.AddWindowsPrinterConnection to_sv+\"\\\"+PrinterName 'If this printer matches the default printer that we got from the registry then ' set it to be the default ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/0cb47cac-42d5-4e9d-a85e-6e4b1ef7883c/0cb47cac-42d5-4e9d-a85e-6e4b1ef7883c/:2:0","tags":["Active Directory","HTML"],"title":"Point Client Computers to a New Print Server","uri":"/printing/printer-ports-and-printer-drivers/0cb47cac-42d5-4e9d-a85e-6e4b1ef7883c/0cb47cac-42d5-4e9d-a85e-6e4b1ef7883c/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Power BI report that shows all files in Project Onlin Original Technet Description URL Description Download: [Download Link](Download\\PWA Files.zip) ","date":"2019-12-01","objectID":"/project-server/power-bi-report-that-shows-f7988eff/power-bi-report-that-shows-f7988eff/:1:0","tags":["Active Directory","HTML"],"title":"Power BI report that shows all files in Project Onlin","uri":"/project-server/power-bi-report-that-shows-f7988eff/power-bi-report-that-shows-f7988eff/"},{"categories":["Project Server"],"content":"Output from Technet Gallery I created this file to get a clear view on how many documents, of what type and size are in a project online environment. The report uses power bi and the invoke custom function method to grab all project site urls and with some changes generate a nice little report that helps you analyse your environment. Related video: https://youtu.be/HZ0sV0OXewE And blog article: https://www.theprojectcornerblog.com/?p=3238 ","date":"2019-12-01","objectID":"/project-server/power-bi-report-that-shows-f7988eff/power-bi-report-that-shows-f7988eff/:2:0","tags":["Active Directory","HTML"],"title":"Power BI report that shows all files in Project Onlin","uri":"/project-server/power-bi-report-that-shows-f7988eff/power-bi-report-that-shows-f7988eff/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Powershell Get- \u0026 Set-PrintConfiguration (Printuidll replacement) Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/client-side-printing/powershell-printer-config-db0465bd/powershell-printer-config-db0465bd/:1:0","tags":["Active Directory","HTML"],"title":"Powershell Get- \u0026 Set-PrintConfiguration (Printuidll replacement)","uri":"/printing/client-side-printing/powershell-printer-config-db0465bd/powershell-printer-config-db0465bd/"},{"categories":["Printing"],"content":"Output from Technet Gallery This is my first PowerShell upload here at Technet (so please feedback if you need to) I’m claiming a world first on this as I couldn’t find this info ANYWHERE on the net. (yes there are the commands, but not a proper example of how to get the config correctly or apply it). Previously to set the configuration properties of a printer you would use a fairly lengthy procedure which used the PrintUI.exe (or printuidll) procedure, something like this: PRINTUI.EXE /Sr /n “Name of Printer” /a “full\\path\\to\\configuration\\file” d u g 8 r So with the powershell printer commands, its much more simple. Just set the parameters of your installed printer, how you like it (paper size, colour, orientation, private print or whatever other settings you need to change. Then run the following code (Change $PNA to the actual name of your printer) $PNA = \"Printer name a\" $GPC = get-printconfiguration -PrinterName $PNA $GPC.PrintTicketXML | out-file C:\\Temp\\$PNA.xml This will save the correct printer configurations to an xml file: “C:\\Temp\\Printer name a.xml” To get the XML Config file of multiple Printers. I use the following code: $PNA = \"Printer Name A\" $PNB = \"Printer Name B\" $PNC = \"Printer Name C\" $PND = \"Printer Name D\" $PN = $PNA,$PNB,$PNC,$PND Foreach ($P in $PN){ $GPC = get-printconfiguration -PrinterName $P $GPC.PrintTicketXML | out-file C:\\Temp\\$P.xml } You can see how this can be expanded for multiple printers. Im sure someone can make this even simpler, or you could even use this code to get the name of all your printers (be aware of Faxes, XPS Document writer, etc if you keep them!) $PN = (get-printer | select name).name Foreach ($P in $PN){ $GPC = get-printconfiguration -PrinterName $P $GPC.PrintTicketXML | out-file C:\\Temp\\$P.xml } To apply Printetr Configurations you would use these commands: $PNA = \"Printer Name A\" $XMLA = Get-Content \"Path\\to\\$PNA.xml\" | Out-String Set-PrintConfiguration -PrinterName $PNA -PrintTicketXml $XMLA  I’ve written this so that you can expand it for multiple printers, in your environment. After a lot of testing, Ive been using this in our live environment to set configs for multiple printers on over 300 different site and over 4000 users. Thanks, MithUK ","date":"2019-12-01","objectID":"/printing/client-side-printing/powershell-printer-config-db0465bd/powershell-printer-config-db0465bd/:2:0","tags":["Active Directory","HTML"],"title":"Powershell Get- \u0026 Set-PrintConfiguration (Printuidll replacement)","uri":"/printing/client-side-printing/powershell-printer-config-db0465bd/powershell-printer-config-db0465bd/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Powershell GUI - Enhanced Printer Infrastructure Creator (or E.P.I.C) Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/powershell-gui-enhanced-b4e3fede/powershell-gui-enhanced-b4e3fede/:1:0","tags":["Active Directory","HTML"],"title":"Powershell GUI - Enhanced Printer Infrastructure Creator (or E.P.I.C)","uri":"/printing/printer-ports-and-printer-drivers/powershell-gui-enhanced-b4e3fede/powershell-gui-enhanced-b4e3fede/"},{"categories":["Printing"],"content":"Output from Technet Gallery Hi all, i have been working on a printer creator tool for some time. its not perfect and im not a PS expert (so be kind and understanding) but it works great and saves me tons of clicks and mistakes. the tool is meant to run on the print server. as always - TEST before deploying to PROD. so here it is. use at your own risk. feel free to modify the code or send comments. E.P.I.C requirements: PS 5 tested OS: Print Server 2012 R2 contents of zip file: epic.exe - a compiled version of the code epic_conf.ini - modify this file to fit your own needs epic_v1.3.export.ps1 - the full script epic_v1.3.psf - Sapien PowerShell Studio project file. folder “Additions” with subinacl.exe (needed for fixing printer permissions) the app does the following: Finds an available IP for the printer. example: 172.16.15.101 creates AD group (for users printing permissions). example: CMP1-16-15-101 Add selected users to the group Creates a Port. example: CMP1-16-15-101 Creates a printer and share it. example: CMP1-16-15-101 printer is created shared with SSR and published in AD. option to duplicate printer to FAX. example: CMP1-16-15-101-FAX Assign/fix permissions (this requires subinacl.exe which can be installed on the print server using windows resource kit) known issues: a bit slow, had to add some sleep for the ports and groups to be created and available. manual IP is not test mac reservation is not implemeted yet sometimes security on printer will fail for FAX. if creation fails try running as admin (i use without and it works) best regards, Sean Noy. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/powershell-gui-enhanced-b4e3fede/powershell-gui-enhanced-b4e3fede/:2:0","tags":["Active Directory","HTML"],"title":"Powershell GUI - Enhanced Printer Infrastructure Creator (or E.P.I.C)","uri":"/printing/printer-ports-and-printer-drivers/powershell-gui-enhanced-b4e3fede/powershell-gui-enhanced-b4e3fede/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL PowerShell Migrating Projrect Server 2013 to Project Project 2016 Beta 2 Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/powershell-migrating-145e356d/powershell-migrating-145e356d/:1:0","tags":["Active Directory","HTML"],"title":"PowerShell Migrating Projrect Server 2013 to Project Project 2016 Beta 2","uri":"/project-server/powershell-migrating-145e356d/powershell-migrating-145e356d/"},{"categories":["Project Server"],"content":"Output from Technet Gallery The PowerShell script provides the steps for migrating Project Server content databases and project database to Project Server 2016 technical preview beta 2. There is no error checking and skipping steps if steps have already been done. For example,if an application pool is already created and you run the script again, the script will error when trying to recreate. ","date":"2019-12-01","objectID":"/project-server/powershell-migrating-145e356d/powershell-migrating-145e356d/:2:0","tags":["Active Directory","HTML"],"title":"PowerShell Migrating Projrect Server 2013 to Project Project 2016 Beta 2","uri":"/project-server/powershell-migrating-145e356d/powershell-migrating-145e356d/"},{"categories":["Printing"],"content":"Original Links Original Technet URL PowerShell Print Logger Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/powershell-print-logger-09a6f4e0/powershell-print-logger-09a6f4e0/:1:0","tags":["Active Directory","HTML"],"title":"PowerShell Print Logger","uri":"/printing/print-servers-print-queues-and-print-jobs/powershell-print-logger-09a6f4e0/powershell-print-logger-09a6f4e0/"},{"categories":["Printing"],"content":"Output from Technet Gallery I’ve been logging print jobs for several years now. Early on we used the free PaperCut Print Logger, which was fine. It gave us the information we needed and worked very well for quite some time. A few years ago when we upgraded our print server to 2008, we noticed some problems that we had not seen before. In an effort to reduce the number of variables we wound up uninstalling PaperCut. While it’s very nice, it shims itself into the print stack, and while we can’t say that was the problem, we can say that we’re not seeing any issues now. So in order to continue monitoring jobs we needed to find a new solution. There wasn’t one that worked for us, and met our key goal…FREE! I wound up using some of the tech that is available in Windows 2008. The new Eventing system had been overhauled, and we now had the ability to create Event Triggers. If I hook a PowerShell script as an action, then I am nearly 80% of the way there. Early on I was monitoring only Event ID 805, which worked well enough, and it wasn’t until quite recently that I found I needed to also be looking at Event ID 307. Event ID 805 contains nearly everything you would possibly need in logging a print job. It’s one fatal flaw is that it doesn’t also include the number of copies. Why that isn’t in there I don’t really know, but that information can in fact be found in Event ID 307. Now that we know what to look at, we can move on. The log that we are interested in is the Microsoft Windows PrintService Operational log. This log is disabled by default, even when you specify the File and Print server role to be installed. Once you’ve enabled that log you will need to create two Event Triggers, or you can go the easy route and import the two XML files included in this download. These triggers have all the pertinent information required, in order for the two included scripts to work properly. If you go the super easy route, the only other thing you need to do is create a database on your SQL server, assign a user account with insert permissions on the table you will create, and finally add the columns needed to contain the data. Here is a list of the columns. I called my database Printing, and the table inside is named JobLog. I created a login called PrintLogger and it has insert permissions on the table. | Column Name | Data Type | | — | — | | Time | Datetime | | UserName | varchar(50) | | Pages | int | | DocumentName | ntext | | Client | varchar(50) | | Size | bigint | | Printer | varchar(50) | | Port | varchar(50) | | Job | int | | Copies | int | In addition this script will also create a csv log file named for each day the script is run. It will automatically roll over to a filename at midnight each evening. I left this in as nice and handy backup, but can be easily removed. One of the things I do is get a list of all the jobs that printed yesterday so I can see where we stand. The script below is called from my $Profile when I start up PowerShell each morning, and gives me a rather depressing view of what my users did yesterday. if ((Get-Date).DayOfWeek -eq 'Monday') { $DaysBack = 3 } else { $DaysBack = 1 } $Yesterday = $null $Yesterday = (Get-Date).AddDays(-$DaysBack) $Query = \"Declare @Today datetime;\" $Query += \"select @Today = CAST(FLOOR(CAST(getdate() AS float)) AS DATETIME);\" $Query += \"select * from dbo.joblog where (CAST(FLOOR(CAST(Time AS float)) AS DATETIME)) = (dateadd(day,-$($DaysBack),@Today));\" $Table = C:\\scripts\\powershell\\playground\\Get-SQlData.ps1 -SqlUser $UserName -SqlPass $Password -SqlServer $ServerName -SqlDatabase $DB -SqlTable $Table -Query $Query $Dbnull = [System.DBNull]::Value $MaxRow = $null $UserCount = $null $TotalPages = $null $MaxRow = ($Table |Sort-Object -Property Pages -Descending)[0] $UserCount = ($Table |Sort-Object -Property Username -Unique).Count foreach ($Row in $Table) { if ($Row.Copies -eq $Dbnull) { [int]$Copies = 1 } else { [int]$Copies = $Row.Copies } if ($Row.Pages -eq 0) { [int]$Pages = 1 } ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/powershell-print-logger-09a6f4e0/powershell-print-logger-09a6f4e0/:2:0","tags":["Active Directory","HTML"],"title":"PowerShell Print Logger","uri":"/printing/print-servers-print-queues-and-print-jobs/powershell-print-logger-09a6f4e0/powershell-print-logger-09a6f4e0/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Powershell Remove Local IP printers Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/client-side-printing/powershell-remove-local-ip-a203cbd7/powershell-remove-local-ip-a203cbd7/:1:0","tags":["Active Directory","HTML"],"title":"Powershell Remove Local IP printers","uri":"/printing/client-side-printing/powershell-remove-local-ip-a203cbd7/powershell-remove-local-ip-a203cbd7/"},{"categories":["Printing"],"content":"Output from Technet Gallery This will look for printers with a port name of 192.168.1.xx or 192.168.1.xxx, and remove any/all of them. I don’t have any printers in my environment in the 192.168.1-9 range so I didn’t put that in. Tested and working on Win 7 x64 Get-WmiObject -ComputerName localhost -Class Win32_printer | where { $_.portname -like ‘192.168.1.**’ -or $_.portname -like ‘192.168.1.***’ -and $_.local -eq ‘TRUE’} | Select -ExpandProperty Name | ForEach-Object { rundll32 printui.dll,PrintUIEntry /dl /n “$_” } Get-WmiObject -ComputerName localhost -Class Win32_printer | where { $_.portname -like '192.168.1.**' -or $_.portname -like '192.168.1.***' -and $_.local -eq 'TRUE'} | Select -ExpandProperty Name | ForEach-Object { rundll32 printui.dll,PrintUIEntry /dl /n \"$_\" } ","date":"2019-12-01","objectID":"/printing/client-side-printing/powershell-remove-local-ip-a203cbd7/powershell-remove-local-ip-a203cbd7/:2:0","tags":["Active Directory","HTML"],"title":"Powershell Remove Local IP printers","uri":"/printing/client-side-printing/powershell-remove-local-ip-a203cbd7/powershell-remove-local-ip-a203cbd7/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Powershell Script for Generate Report of Successfull Print Log in Print Server Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/powershell-script-for-76e292a3/powershell-script-for-76e292a3/:1:0","tags":["Active Directory","HTML"],"title":"Powershell Script for Generate Report of Successfull Print Log in Print Server","uri":"/printing/print-servers-print-queues-and-print-jobs/powershell-script-for-76e292a3/powershell-script-for-76e292a3/"},{"categories":["Printing"],"content":"Output from Technet Gallery This script creates a report of all successful print job which include: data of print document, who printed this document, on which client printed this document, number of page printed and other useful information. You should enable success audit logging enable on printer and then enable logging on the following directories. Start → Server Manager → Tools → Event Viewer → Applications and Service Logs → Microsoft → Windows → Print Service → Operational Then, right click on Operational and select Enable log ############################################## ReadMe #This script creates a report of all successful print job which include: data of print document, who printed this # document, on which client printed this document, number of page printed and other useful information. # You should enable success audit logging enable on printer and then enable logging on the following directories. # Start → Server Manager → Tools → Event Viewer → Applications and Service Logs → Microsoft → Windows → Print Service → Operational # Then, right click on Operational and select Enable log ############################################## # Get the period of reporting cls Write-Host \"************************************************************\" Write-Host \"* Print Server Report *\" Write-Host \"************************************************************\" $FirstDate = Read-Host -Prompt 'Enter the first day that you want generate report? The input should be in this format, August10 ' $LastDate = Read-Host -Prompt 'Enter the last day that you want generate report? The input should be in this format, August15 ' $File = \"C:\\Print Server Report\\Printing Audit - \" + (Get-Date).ToString(\"yyyy-MM-dd\") +\".txt\" $PrintEntries = Get-WinEvent -ea SilentlyContinue -FilterHashTable @{ProviderName=\"Microsoft-Windows-PrintService\"; StartTime=$FirstDate; EndTime=$LastDate; ID=307} # export the header to output file. write-output \"Date, Document, User Name, Client, Printer Name, Print Size, Pages\" | Out-File $File # Check there is any log in event log or no!? if ([bool]$PrintEntries -eq $true){ # Print the header of output Write-Host \"************************** Report ***********************************\" Write-Host \"Date| Document| User Name| Client| Printer Name| Print Size| Pages\" Write-Host \"\" ForEach ($PrintEntry in $PrintEntries) { # Get Detail of each Print log $Date_Time = $PrintEntry.TimeCreated $entry = [xml]$PrintEntry.ToXml() $docName = $entry.Event.UserData.DocumentPrinted.Param2 $Username = $entry.Event.UserData.DocumentPrinted.Param3 $Client = $entry.Event.UserData.DocumentPrinted.Param4 $PrinterName = $entry.Event.UserData.DocumentPrinted.Param5 $PrintSize = $entry.Event.UserData.DocumentPrinted.Param7 $PrintPages = $entry.Event.UserData.DocumentPrinted.Param8 # Output $output= \"$Date_Time, $docName, $Username, $Client, $PrinterName, $PrintSize bytes, $PrintPages \" $output | Out-File $File -append Write-Host \"$output\" } # Print the footer of output Write-Host \"\" Write-Host \"********************* Successfully Exported! *************************\" }else # if there is no successful print in event log, show No log { Write-Host \"*************************************************************\" Write-Host \"* No Log *\" Write-Host \"*************************************************************\" } ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/powershell-script-for-76e292a3/powershell-script-for-76e292a3/:2:0","tags":["Active Directory","HTML"],"title":"Powershell Script for Generate Report of Successfull Print Log in Print Server","uri":"/printing/print-servers-print-queues-and-print-jobs/powershell-script-for-76e292a3/powershell-script-for-76e292a3/"},{"categories":["Printing"],"content":"Original Links Original Technet URL PowerShell Script for Large Scale Printer Migration with New server \u0026 Share nam Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/powershell-script-for-057ae37a/powershell-script-for-057ae37a/:1:0","tags":["Active Directory","HTML"],"title":"PowerShell Script for Large Scale Printer Migration with New server \u0026 Share nam","uri":"/printing/print-servers-print-queues-and-print-jobs/powershell-script-for-057ae37a/powershell-script-for-057ae37a/"},{"categories":["Printing"],"content":"Output from Technet Gallery PowerShell Script for Large Scale Printer Migration with New Printserver and New Share name, This script is for medium to large scale printer migration with a different server and print queue name, ENVIRONMENT: 1. Existing Printer names has no standards 2. All existing print servers are Windows server 2003 32-bit OS 3. Each Print queue has individual model specific print drivers with 32-bit and 64-bit drivers loaded - we want to use UPD and only 3 drivers to manage 4. Driver upgrades often caused many Service Desk call due to either new look n feel or ################################################################################################################################################ # NAME: PowerShell Script for Large Scale Printer Migration with New Printserver and New Share name # WRITTEN BY: Imran Pathan, Toronto # GOAL: This script is for medium to large scale printer migration with a different server and print queue name # ENVIRONMENT: 1. Existing Printer names has no standards # 2. All existing print servers are Windows server 2003 32-bit OS # 3. Each Print queue has individual model specific print drivers with 32-bit and 64-bit drivers loaded - we want to use UPD and only 3 drivers to manage # 4. Driver upgrades often caused many Service Desk call due to either new look n feel or missing functionlaity etc # 5. 95% of the Client OS now are Windows 7 and 5% are either Windows XP or Windows 8 # PROJECT PLAN: Although project has various stages, apart from this script i have mentioned a quick snopsis as to what is requried in order to # make use of this script # 1. In our environment we have to Migrate all 10 print servers (print queue) to new server ~400 print queues # \u003e http://technet.microsoft.com/en-us/library/dd379488(WS.10).aspx # 2. Rename all the print Queues and update the drivers with custom Universal print drivers with a setting to color control # and default page setup values to duplex for cost saving, most of our fleet is HP and Xerox # \u003e HP Universal Print Driver Series for Windows - Resource Kit - http://h20331.www2.hp.com/Hpsub/cache/576122-0-0-225-121.html # 3. I build a below script to run with GPO which will swap the old printer with new respected printers from a # new server and identify which one was default and make the new respected a degault, # run a test plan in virtual environment and capture the screenshots to communicate with business users well in advance # 4. Begin the frequent communications at least 2 weeks ahead with users group with what changes to expect and escalate procedure for # issues. Inform and train front line on expected calls and simple solutions. # 5. Link the security group filtered GPO for 1 week to target users and measure the scueess rate. # REFERANCE I USED: # 1. WMI Code Creator v1.0 - http://www.microsoft.com/en-ca/download/details.aspx?id=8572 # 2. PowerShell Functions and Filters – The basics - http://www.powershellpro.com/powershell-tutorial-introduction/powershell-functions-filters/ # HOW TO USER MY SCRIPT: # As a Network Admin or Network Engineering GURU ALL YOU NEED TO DO IN MY SCRIPT is build the case by simply replacing the switches; # 1. i.e. on line 98 \"18HookCommRelation-C\" is the old printer name. # 2. \"\\\\SRV-PRNT01\\HK-01-C1\" is the new printer that you want to replace the old printer with. # 3. Update and add as many printers you have by copying the syntex and do the correct mapping once, test it in a lab first. # 4. Once ready simply link the script to appropriate OU or security group filtered GPO as a User Logon Script. # 5. In our case we will link in the same GPO which does the Network Drive Mappings in users section without any secuurity filtering. # 6. So as we move on migrating more servers-print queues we willl continue to add the line item in switches secion below. # # VERSION HISTORY: 1.0 # 31/Mar/2013 - Initial Stable Release # 1/Apr/2013 - Comments updated - Not to Aprilfool you -it works guys... # 6/Apr-2013","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/powershell-script-for-057ae37a/powershell-script-for-057ae37a/:2:0","tags":["Active Directory","HTML"],"title":"PowerShell Script for Large Scale Printer Migration with New server \u0026 Share nam","uri":"/printing/print-servers-print-queues-and-print-jobs/powershell-script-for-057ae37a/powershell-script-for-057ae37a/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Powershell script to change printer IP address Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/powershell-script-to-69903f6c/powershell-script-to-69903f6c/:1:0","tags":["Active Directory","HTML"],"title":"Powershell script to change printer IP address","uri":"/printing/printer-ports-and-printer-drivers/powershell-script-to-69903f6c/powershell-script-to-69903f6c/"},{"categories":["Printing"],"content":"Output from Technet Gallery This Powershell script changes printer IP address It requires 2 parameters: OldIP Example: 192.168.0.99 and NewIP Example: 192.168.0.95 \u003c# .Synopsis Script to change printer IP address .Description This script changes printer IP address It leaves a log file in the current folder that lists script progress .Parameter OldIP Example: 192.168.0.99 .Parameter NewIP Example: 192.168.0.95 .Example .\\Change-PrinterIP.ps1 192.168.0.99 192.168.0.95 This example changes the printer attached to the print port with IP 192.168.0.99 It creates a new printer port with same settings as the old 192.168.0.99 printer port, assigns the printer to the new port, and deletes the old printer port .Link https://superwidgets.wordpress.com/category/powershell/ .Notes v1.0 - 07/27/2014 #\u003e #============================================================================== # Script Name: Change-PrinterIP.ps1 # DATE: 07/27/2014 # Version: 1.0 # COMMENT: Script to change printer IP address #============================================================================== # .\\Change-PrinterIP.ps1 192.168.0.99 192.168.0.95 This example changes the printer attached to the print port with IP 192.168.0.99 It creates a new printer port with same settings as the old 192.168.0.99 printer port, assigns the printer to the new port, and deletes the old printer port It leaves a log file in the current folder that lists script progress For more information see https://superwidgets.wordpress.com/category/powershell/ v1.0 - 07/27/2014 Script output looks like: ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/powershell-script-to-69903f6c/powershell-script-to-69903f6c/:2:0","tags":["Active Directory","HTML"],"title":"Powershell script to change printer IP address","uri":"/printing/printer-ports-and-printer-drivers/powershell-script-to-69903f6c/powershell-script-to-69903f6c/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Powershell script to publish multiple projects - Project Server 2010 Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/powershell-script-to-3b839594/powershell-script-to-3b839594/:1:0","tags":["Active Directory","HTML"],"title":"Powershell script to publish multiple projects - Project Server 2010","uri":"/project-server/powershell-script-to-3b839594/powershell-script-to-3b839594/"},{"categories":["Project Server"],"content":"Output from Technet Gallery Ever see a requirement when you need to publish multiple projects (Note that ‘Not All’ and ‘Not Specific One’) and that list of projects should be fetched through SQL query based on some JOINS and WHERE conditions?Here is the way.. PFA the powershell script file(PublishMultipleProjects.PS1) and a batch file(PublishEPMProjects.bat).So you just need to download these files and make a change in PWA URL, Database server name and most important SQL code to fetch the projects to be published. Once all done,run the batch file or attach it to schedule job if want to run at any specific time. Please note the account used to run the script should be in PS2010 administrator security group. $svcPSProxy = New-WebServiceProxy -uri \"http://YourEPMWebApp/pwa/_vti_bin/PSI/Project.asmx?wsdl\" -useDefaultCredential $EPMTYGUID = [system.guid]::empty $sqlConnection = new-object System.Data.SqlClient.SqlConnection \"server=YourEPMDB;database=ProjectServerReporting;Integrated Security=SSPI\" $sqlConnection.Open() #Create a command object $sqlCommand = $sqlConnection.CreateCommand() $sqlCommand.CommandText = \" SELECT ProjectUID,ProjectName,EnterpriseProjectTypeName FROM MSP_EpmProject_UserView EPU INNER JOIN MSP_EpmEnterpriseProjectType ET ON EPU.EnterpriseProjectTypeUID =ET.EnterpriseProjectTypeUID WHERE ET.EnterpriseProjectTypeName IN ('A','B','C')\" #Execute the Command $sqlReader = $sqlCommand.ExecuteReader() $Datatable = New-Object System.Data.DataTable $DataTable.Load($SqlReader) # Close the database connection $sqlConnection.Close() $DataTable|%{ $G = [System.Guid]::NewGuid() $G1 = [Guid]$_.ProjectUID $now = Get-Date -Format g Write-host \"Project:\" $_.ProjectName \" publish is starting at \" $now $svcPSProxy.QueuePublish(\"$G\", $G1, \"true\",\"\") } ","date":"2019-12-01","objectID":"/project-server/powershell-script-to-3b839594/powershell-script-to-3b839594/:2:0","tags":["Active Directory","HTML"],"title":"Powershell script to publish multiple projects - Project Server 2010","uri":"/project-server/powershell-script-to-3b839594/powershell-script-to-3b839594/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Powershell script to replace Project Owner Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/powershell-script-to-6c485008/powershell-script-to-6c485008/:1:0","tags":["Active Directory","HTML"],"title":"Powershell script to replace Project Owner","uri":"/project-server/powershell-script-to-6c485008/powershell-script-to-6c485008/"},{"categories":["Project Server"],"content":"Output from Technet Gallery There are situations when a project manager leaves or moves to a different area within the organization and someone else is taking over his/her projects. This Powershell scriptfinds the projects owned by the old project manager and replaces the owner with the new project manager. The script will need to be updated with the correct PWA url and the user guids. Also, the script may throw an error if some of the projects to be updated are already checked out by a different user. ","date":"2019-12-01","objectID":"/project-server/powershell-script-to-6c485008/powershell-script-to-6c485008/:2:0","tags":["Active Directory","HTML"],"title":"Powershell script to replace Project Owner","uri":"/project-server/powershell-script-to-6c485008/powershell-script-to-6c485008/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Pre-Stage Printer Drivers Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/5d23c2e4-369d-430a-a31c-853c76d68863/5d23c2e4-369d-430a-a31c-853c76d68863/:1:0","tags":["Active Directory","HTML"],"title":"Pre-Stage Printer Drivers","uri":"/printing/printer-ports-and-printer-drivers/5d23c2e4-369d-430a-a31c-853c76d68863/5d23c2e4-369d-430a-a31c-853c76d68863/"},{"categories":["Printing"],"content":"Output from Technet Gallery Installs printer (driver only) from inf file so a standard user can connect later. (These days known as pre-staging driver) Visual Basic strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") objWMIService.Security_.Privileges.AddAsString \"SeLoadDriverPrivilege\", True set objDriver = objWMIService.Get(\"Win32_PrinterDriver\") Set objShell = CreateObject(\"Wscript.Shell\") objDriver.Name = \"Brother HL-5240 series\" objDriver.SupportedPlatform = \"Windows NT x86\" objDriver.Version = \"3\" objDriver.FilePath = \"\\\\server\\\\share\\\\Printer_Drivers\\\\Brother\\\\HL 5240\\\\\" objDriver.Infname = \"\\\\server\\\\share\\\\Printer_Drivers\\\\Brother\\\\HL 5240\\\\BROHL05A.INF\" intResult = objDriver.AddPrinterDriver(objDriver) objShell.Popup objDriver.Name \u0026 \" driver installed\", 3, \"Pre-stage Printer Driver By Andrew Barnes\", vbInformation + vbOKOnly ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/5d23c2e4-369d-430a-a31c-853c76d68863/5d23c2e4-369d-430a-a31c-853c76d68863/:2:0","tags":["Active Directory","HTML"],"title":"Pre-Stage Printer Drivers","uri":"/printing/printer-ports-and-printer-drivers/5d23c2e4-369d-430a-a31c-853c76d68863/5d23c2e4-369d-430a-a31c-853c76d68863/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Print a PDF Fil Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/client-side-printing/5a3879e2-8536-4ba0-8b1a-e850509986ad/5a3879e2-8536-4ba0-8b1a-e850509986ad/:1:0","tags":["Active Directory","HTML"],"title":"Print a PDF Fil","uri":"/printing/client-side-printing/5a3879e2-8536-4ba0-8b1a-e850509986ad/5a3879e2-8536-4ba0-8b1a-e850509986ad/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **Steve Yandl Prints a PDF file to the specified printer. Visual Basic ' Statements assigning string values to strPrinterName, strPrinterDriver, and strAcroRead ' should reflect the name and driver for designated printer and correct path to Acrobat Reader ' Steve Yandl ' ============================================================== strPrinterName = \"hp psc 2500 series\" strPrinterDriver = \"hp psc 2500 series\" strAcroRead = \"C:\\Program Files\\Adobe\\Acrobat 7.0\\Reader\\acrord32.exe\" Dim wsh Set fso = CreateObject(\"Scripting.FileSystemObject\") ' Verify that passed argument represents an existing Adobe pdf file If WScript.Arguments.Count = 0 Then WScript.Quit End If strPDFpath = WScript.Arguments.Item(0) If Not fso.FileExists(strPDFpath) Then WScript.Quit End If If Not fso.GetExtensionName(strPDFpath) = \"pdf\" Then WScript.Quit End If ' Launch Acrobat Reader to print pdf file from designated printer Set wsh = CreateObject(\"WScript.Shell\") wsh.Run Chr(34) \u0026 strAcroRead \u0026 Chr(34) \u0026 \" /t \" _\u0026 Chr(34) \u0026 strPDFpath \u0026 Chr(34) \u0026 \" \" _\u0026 Chr(34) \u0026 strPrinterName \u0026 Chr(34) \u0026 \" \" \u0026 Chr(34) \u0026 strPrinterDriver \u0026 Chr(34) ' After allowing 15 seconds for spooling print job, kill the Acrobat Reader process WScript.Sleep 15000 strComputer = \".\" Set objWMIService = GetObject _ (\"winmgmts:\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colProcessList = objWMIService.ExecQuery _ (\"Select * from Win32_Process Where Name = 'acrord32.exe'\") For Each objProcess in colProcessList objProcess.Terminate() Next ","date":"2019-12-01","objectID":"/printing/client-side-printing/5a3879e2-8536-4ba0-8b1a-e850509986ad/5a3879e2-8536-4ba0-8b1a-e850509986ad/:2:0","tags":["Active Directory","HTML"],"title":"Print a PDF Fil","uri":"/printing/client-side-printing/5a3879e2-8536-4ba0-8b1a-e850509986ad/5a3879e2-8536-4ba0-8b1a-e850509986ad/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Print Events to SQL Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/print-events-to-sql-618dd5d4/print-events-to-sql-618dd5d4/:1:0","tags":["Active Directory","HTML"],"title":"Print Events to SQL","uri":"/printing/print-servers-print-queues-and-print-jobs/print-events-to-sql-618dd5d4/print-events-to-sql-618dd5d4/"},{"categories":["Printing"],"content":"Output from Technet Gallery ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/print-events-to-sql-618dd5d4/print-events-to-sql-618dd5d4/:2:0","tags":["Active Directory","HTML"],"title":"Print Events to SQL","uri":"/printing/print-servers-print-queues-and-print-jobs/print-events-to-sql-618dd5d4/print-events-to-sql-618dd5d4/"},{"categories":["Printing"],"content":"Brief Description This is a PowerShell script designed to be run on a scheduled basis to extract print job accounting reports from the Windows PrintService Event log into a SQL database. This has only been tested on Windows Server 2008 R2 SP1 print servers. The script idea originated from theVB script or PowerShell script for auditing Win2k8 Print server thread. It was then enhanced over several iterations: Event details are parsed via XML instead of RegEx so all portions of the fields are captured. Only events since the last retrieval are fetched for improved performance. Script runs with IDLE cpu priority as to not interfere with other server operations (such as Print Server processes). Events are stored into a basic SQL database which opens numerous possibilities for reporting, etc. User names are resolved using native Windows translation, instead of expensive Active Directory lookup calls. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/print-events-to-sql-618dd5d4/print-events-to-sql-618dd5d4/:3:0","tags":["Active Directory","HTML"],"title":"Print Events to SQL","uri":"/printing/print-servers-print-queues-and-print-jobs/print-events-to-sql-618dd5d4/print-events-to-sql-618dd5d4/"},{"categories":["Printing"],"content":"Release Notes: 1.1 - Released as zip file which contains PowerShell script and SQL table schema. 1.0 - Initial public release ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/print-events-to-sql-618dd5d4/print-events-to-sql-618dd5d4/:4:0","tags":["Active Directory","HTML"],"title":"Print Events to SQL","uri":"/printing/print-servers-print-queues-and-print-jobs/print-events-to-sql-618dd5d4/print-events-to-sql-618dd5d4/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Print Job Management using Powershell Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/print-job-management-using-47ad26a7/print-job-management-using-47ad26a7/:1:0","tags":["Active Directory","HTML"],"title":"Print Job Management using Powershell","uri":"/printing/print-servers-print-queues-and-print-jobs/print-job-management-using-47ad26a7/print-job-management-using-47ad26a7/"},{"categories":["Printing"],"content":"Output from Technet Gallery Print Job Management using Powershell Both Windows 8.1 and Server 2012 R2 come with a module called “PrintManagement”. It includes all cmdlets needed to manage local and remote printers. for Windows 7 and Server 2008R2 we have to use WMI Powershell scripting. This was the reason to have this advanced powwrshell function to manage Print Jobs. Using this function you will be able to to the following: To Delete Printjobs with status ‘Error’ of all Print Queues on PrintServer: Server1,Server2,Server3 PS C:\u0026gt; Get-LHSPrintJob -ComputerName Server1,Server,Server3 | where {$_.Status -eq ‘Error’} | Foreach-Object { $_.Delete() } To Delete all Printjobs of all Print Queues older than 5 Days from PrintServer Server1 Get-LHSPrintJob -ComputerName Server1 |  Where { $_.ConvertToDateTime($_.TimeSubmitted) -lt (Get-Date).AddDays(-5) } | Foreach-Object { $_.Delete() } We can also filter Printer Names using the Parameter -PrinterName using wildcard (*) Get-LHSPrintJob -ComputerName Server1 -PrinterName ‘d363*’ Function Get-LHSPrintJob { \u003c# .SYNOPSIS Get PrintJobs on local or remote Computer. .DESCRIPTION Get PrintJobs on local or remote Computer using WMI .PARAMETER ComputerName The computer name(s) to retrieve the info from. Default to local Computer .PARAMETER PrinterName An existing Print Queue Name. Wildcard (*) support. Default to '*' (all Print Queues) .PARAMETER Credential Alternate Credential to connect to the remote Computer .EXAMPLE Get-LHSPrintJob -ComputerName Server1 -PrinterName 'd363*' Wildcard support, to list all PrintJobs for all Print Queues with name beginning with 'd363'. .EXAMPLE PS C:\\\u003e Get-LHSPrintJob -ComputerName Server1 | where {$_.Status -eq 'Error'} To list all Printjobs of all Print Queues with Status:Error from PrintServer Server1 .EXAMPLE Get-LHSPrintJob -ComputerName Server1 | Where { $_.ConvertToDateTime($_.TimeSubmitted) -lt (Get-Date).AddDays(-5) } To list all Printjobs of all Print Queues older than 5 Days from PrintServer Server1 .EXAMPLE PS C:\\\u003e Get-LHSPrintJob -ComputerName Server1 | where {$_.Status -eq 'Error'} | Foreach-Object { $_.Delete() } To Delete Printjobs with status 'Error' of all Print Queues on PrintServer Server1 .INPUTS System.String, you can pipe ComputerNames to this Function .OUTPUTS TypeName: System.Management.ManagementObject#root\\CIMV2\\Win32_PrintJob .NOTES use |select * to see all Properties AUTHOR: Pasquale Lantella LASTEDIT: 16.02.2015 KEYWORDS: PrintJob .LINK Get-WmiObject #Requires -Version 2.0 #\u003e [cmdletbinding()] [OutputType('System.Management.ManagementObject#root\\CIMV2\\Win32_PrintJob')] Param( [Parameter(Position=0,Mandatory=$False,ValueFromPipeline=$True, HelpMessage='An array of computer names. The default is the local computer.')] [alias(\"CN\")] [string[]]$ComputerName = $Env:COMPUTERNAME, [Parameter(Position=1)] [string]$PrinterName = '*', [parameter(Position=2)] [Alias('RunAs')] [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty ) BEGIN { Set-StrictMode -Version Latest ${CmdletName} = $Pscmdlet.MyInvocation.MyCommand.Name # create WMI filter # we need special handling to filter for Printer Names If ($PrinterName -match [Regex]::Escape('*'), \"*\") { # replace wildcard as WMI uses '%' $PrinterName = \"$PrinterName\" -replace [Regex]::Escape('*'), '%' [String]$WMIFilter = \"Name like '\" + \"$PrinterName\" + \"'\" Write-Debug \"`$WMIFilter contains: $WMIFilter\" } Else { #we don´t have wildcards and want to filter for the exact name [String]$WMIFilter = \"Name like '\" + \"$PrinterName\" + \"'\" Write-Debug \"`$WMIFilter contains: $WMIFilter\" } } # end BEGIN PROCESS { ForEach ($Computer in $ComputerName) { IF (Test-Connection -ComputerName $Computer -Count 2 -Quiet) { $WMIParam = @{ ComputerName = $Computer; Class = 'Win32_Printjob'; Namespace = 'root\\CIMV2'; ErrorAction = 'Stop'; } If ($PSBoundParameters['Credential']) { $WMIParam.Credential = $Credential; } Try { Get-WmiObject @WMIParam -Filter $WMIFilte","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/print-job-management-using-47ad26a7/print-job-management-using-47ad26a7/:2:0","tags":["Active Directory","HTML"],"title":"Print Job Management using Powershell","uri":"/printing/print-servers-print-queues-and-print-jobs/print-job-management-using-47ad26a7/print-job-management-using-47ad26a7/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Print Server Inventory Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/print-server-inventory-fb2e8403/print-server-inventory-fb2e8403/:1:0","tags":["Active Directory","HTML"],"title":"Print Server Inventory","uri":"/printing/print-servers-print-queues-and-print-jobs/print-server-inventory-fb2e8403/print-server-inventory-fb2e8403/"},{"categories":["Printing"],"content":"Output from Technet Gallery This powershell script will allow you to create an excel file on you computer with the following information about the printers on any given server: Printer Name Location Comment IP Address Driver Name Shared Share Name Please be aware that while running the script you must have administrator or power user rights on the print server. You also will not want to use the computer while running the script. If you accidently type into the excel document as it is completing the script will fail. Also, if you have more that one print server as we do, you can just repeat the code below the first section of code for the new print server and it will run. # Print server inventory script # Set print server name $Printserver = \"PRINTSERVER\" # Create new Excel workbook $Excel = new-Object -comobject Excel.Application $Excel.visible = $True $Excel = $Excel.Workbooks.Add() $Sheet = $Excel.Worksheets.Item(1) $Sheet.Cells.Item(1,1) = \"Printer Name\" $Sheet.Cells.Item(1,2) = \"Location\" $Sheet.Cells.Item(1,3) = \"Comment\" $Sheet.Cells.Item(1,4) = \"IP Address\" $Sheet.Cells.Item(1,5) = \"Driver Name\" $Sheet.Cells.Item(1,6) = \"Shared\" $Sheet.Cells.Item(1,7) = \"Share Name\" $intRow = 2 $WorkBook = $Sheet.UsedRange $WorkBook.Font.Bold = $True # Get printer information $Printers = Get-WMIObject Win32_Printer -computername $Printserver foreach ($Printer in $Printers) { $Sheet.Cells.Item($intRow, 1) = $Printer.Name $Sheet.Cells.Item($intRow, 2) = $Printer.Location $Sheet.Cells.Item($intRow, 3) = $Printer.Comment $Ports = Get-WmiObject Win32_TcpIpPrinterPort -computername $Printserver foreach ($Port in $Ports) { if ($Port.Name -eq $Printer.PortName) { $Sheet.Cells.Item($intRow, 4) = $Port.HostAddress } } $Sheet.Cells.Item($intRow, 5) = $Printer.DriverName $Sheet.Cells.Item($intRow, 6) = $Printer.Shared $Sheet.Cells.Item($intRow, 7) = $Printer.ShareName $intRow = $intRow + 1 } $WorkBook.EntireColumn.AutoFit() $intRow = $intRow + 1 $Sheet.Cells.Item($intRow,1).Font.Bold = $True $Sheet.Cells.Item($intRow,1) = \"Print server inventory\" ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/print-server-inventory-fb2e8403/print-server-inventory-fb2e8403/:2:0","tags":["Active Directory","HTML"],"title":"Print Server Inventory","uri":"/printing/print-servers-print-queues-and-print-jobs/print-server-inventory-fb2e8403/print-server-inventory-fb2e8403/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Printer Health Check Up Repor Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/printer-health-check-up-29da22b2/printer-health-check-up-29da22b2/:1:0","tags":["Active Directory","HTML"],"title":"Printer Health Check Up Repor","uri":"/printing/print-servers-print-queues-and-print-jobs/printer-health-check-up-29da22b2/printer-health-check-up-29da22b2/"},{"categories":["Printing"],"content":"Output from Technet Gallery This script is done for team one who monitors the printers across the networks. This report will provide you the below status Printer Full Name Location (Provided if its updated in comment or in Location) Description of the Printer Identifies the Paper Problem Check Toner Status Check Toner Availability Printer Door Issues Availability Power Saving Mode Queue Status Any Error Mode Out Of Paper Any User Intervention Required? Paper Jam Number of Jobs Team can execute the report before business day and avoid opertional tickets. You can customize the script as per your requirement Note: I opted .NET class to fetch printer information \u003c# Refer Usage at line 55 #\u003e Function Get-PrinterInformation{ [cmdletBinding()] param( [parameter(Mandatory=$true, ValueFromPipeline=$true, ValueFromPipelinebypropertyName=$true, helpmessage=\"Provide Print Server Name\")] [String[]]$PrintServerName, [parameter(Mandatory=$true, ValueFromPipeline=$true, ValueFromPipelinebypropertyName=$true, helpmessage=\"Provide Printer Name\")] [String[]]$PrinterName ) BEGIN {} PROCESS { Add-Type -AssemblyName System.printing $PrintServer = New-Object System.Printing.PrintServer(\"\\\\$($PrintServerName)\") foreach($printer in $PrinterName){ $printerinformation = $PrintServer.GetPrintQueue($printer) $property = @{'Printer Name' = $printer; 'Printer Full Name' = $printerinformation.FullName; 'Location' = $printerinformation.Comment; 'Description' = $printerinformation.Description; 'Paper Problem'= $printerinformation.HasPaperProblem; 'Toner Available' = $printerinformation.HasToner; 'Door Issues' = $printerinformation.IsDoorOpened; 'Is Not Available'= $printerinformation.IsNotAvailable; 'Is PowerSaver On' = $printerinformation.IsPowerSaveOn; 'Is Toner Low' = $printerinformation.IsTonerLow; 'Queue Status' = $printerinformation.QueueStatus; 'Is in Error' = $printerinformation.IsInError; 'Is Manual Feed Required' = $printerinformation.IsManualFeedRequired; 'Is Out Of Paper' = $printerinformation.IsOutOfPaper; 'Need Intervention' = $printerinformation.NeedUserIntervention; 'Is Paper Jammed' = $printerinformation.IsPaperJammed; 'Default Priority' = $printerinformation.DefaultPriority; 'Is Printing' = $printerinformation.IsPrinting; 'Number Of Jobs' = $printerinformation.NumberOfJobs;} $object = New-Object -TypeName PSObject -Property $property Write-Output $object } } END {} } \u003c# .USAGE Get-PrinterInformation -PrintServerName 'Something' -PrinterName $PrinterList | Export-Csv C:\\PrintInfo.csv - For Multiple Printers from Sam Get-PrinterInformation -PrintServerName 'Something' -PrinterName 'Something' $html = Get-PrinterInformation -PrintServerName 'Something' -PrinterName 'Something' | ConvertTo-Html -Fragment ConvertTo-Html -Body $html -CssUri C:\\style.CSS | Out-File C:\\Temp\\File.html Invoke-Item C:\\Temp\\File.Html Note: You can use NET VIEW PRINTSERVERNAME to get the list. More Precise Open CMD prompt and type Net View \"PRINTSERVERNAME\" | find /i \"Print\" #\u003e ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/printer-health-check-up-29da22b2/printer-health-check-up-29da22b2/:2:0","tags":["Active Directory","HTML"],"title":"Printer Health Check Up Repor","uri":"/printing/print-servers-print-queues-and-print-jobs/printer-health-check-up-29da22b2/printer-health-check-up-29da22b2/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Printer info Lookup Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/printer-info-lookup-d3340c8b/printer-info-lookup-d3340c8b/:1:0","tags":["Active Directory","HTML"],"title":"Printer info Lookup","uri":"/printing/print-servers-print-queues-and-print-jobs/printer-info-lookup-d3340c8b/printer-info-lookup-d3340c8b/"},{"categories":["Printing"],"content":"Output from Technet Gallery $name = Read-Host \"Please Enter Printer Name you are searching for\" $PrintServList = 'Your Print Server Name Goes Here' #Change this field ForEach ($PrintSrv in $PrintServList) { if ((Test-Connection -computername $PrintSrv -Count 2 -Quiet) -eq $true) { Write-Host \"Looking for Printer info on $PrintSrv\" $Action = Get-WmiObject Win32_Printer -ComputerName $PrintSrv -ErrorAction SilentlyContinue | Where-Object {$_.Name -eq $Name} | Select Name, SystemName, Location, Comment, DriverName | Format-Table -AutoSize If ((Get-WmiObject Win32_Printer -ComputerName $PrintSrv).name -eq $Name){$Action} Else {Write-host \" Printer Not Found on Server\" -ForegroundColor Red} } Else {Write-Warning \"Print Server $PrintSrv Down, Contact Network Admin!!!\"} } Write-Host \"The search is complete, press any key to exit\" $x = $host.UI.RawUI.ReadKey(\"NoEcho,IncludeKeyDown\") A Simple Powershell Script that allows the user to input a Printer Name and search for the printer information against Multiple print Servers. It also checks the status of the Print Server to warn a Technician there may be connectivity issues. The Script is ran from a Technician’s computer to be ran against multiple print servers. The information it reports is only as reliable as the information put into the Printer Description on the Print Server. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/printer-info-lookup-d3340c8b/printer-info-lookup-d3340c8b/:2:0","tags":["Active Directory","HTML"],"title":"Printer info Lookup","uri":"/printing/print-servers-print-queues-and-print-jobs/printer-info-lookup-d3340c8b/printer-info-lookup-d3340c8b/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Printers Inventory Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/printers-inventory-c83748c6/printers-inventory-c83748c6/:1:0","tags":["Active Directory","HTML"],"title":"Printers Inventory","uri":"/printing/print-servers-print-queues-and-print-jobs/printers-inventory-c83748c6/printers-inventory-c83748c6/"},{"categories":["Printing"],"content":"Output from Technet Gallery @===Printer Inventory===@ This script build to collect Printer details from local, remote or Printer server.Which gives us - Print Server,Printer Name,Port Name,Share Name,Driver Name,Driver Version,Driver,Location,Shared -Details Based on user inputs machine name will be taken. @===Amol===@ Code from main script —— ForEach ($Printserver in $Printservers) { $Printers = Get-WmiObject Win32_Printer -ComputerName $Printserver ForEach ($Printer in $Printers) { if ($Printer.Name -notlike \"Microsoft XPS*\") { $Sheet.Cells.Item($intRow, 1) = $Printserver $Sheet.Cells.Item($intRow, 2) = $Printer.Name If ($Printer.PortName -notlike \"*\\*\") { $Ports = Get-WmiObject Win32_TcpIpPrinterPort -Filter \"name = '$($Printer.Portname)'\" -ComputerName $Printserver ForEach ($Port in $Ports) { $Sheet.Cells.Item($intRow, 3) = $Port.HostAddress } } $Sheet.Cells.Item($intRow, 4) = $Printer.ShareName $Sheet.Cells.Item($intRow, 5) = $Printer.DriverName #################### ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/printers-inventory-c83748c6/printers-inventory-c83748c6/:2:0","tags":["Active Directory","HTML"],"title":"Printers Inventory","uri":"/printing/print-servers-print-queues-and-print-jobs/printers-inventory-c83748c6/printers-inventory-c83748c6/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Printers on Print Server Repor Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/printers-on-print-server-10a36018/printers-on-print-server-10a36018/:1:0","tags":["Active Directory","HTML"],"title":"Printers on Print Server Repor","uri":"/printing/printer-ports-and-printer-drivers/printers-on-print-server-10a36018/printers-on-print-server-10a36018/"},{"categories":["Printing"],"content":"Output from Technet Gallery A simple script to run against a networks Print Server(s) and generates a CSV format report of what printers are installed on that print server, the location, Comments, and Driver Name. You can add in PortName in the selection section and it should return the IP Address if someone has not changed the name from the IP Address to the Printer Name, which is what was done in my enviroment I am working in. It is intended to be ran from a technician’s computer to a remote print server and can be ran against multiple print servers with out adding more code. At $PrintSrvList tha is where you will put in the desired print servers or you can modify the code to Import-CSV files. $new = Get-Date -Format MMM.dd.yyyy.hh.mm $PrintSrvList = 'Put Printers Servers Here' #Change this field ForEach ($PRTSrv in $PrintSrvList) { if ((Test-Connection -computername $PRTSrv -Count 2 -Quiet) -eq $true) { Write-Host \"Looking for Printer info on $PRTSrv\" Get-WmiObject Win32_Printer -ComputerName $PRTSrv -ErrorAction SilentlyContinue | Select Name, SystemName, Location, Comment, DriverName | Export-Csv .\\Printers-Server.$new.csv -Append } Else {Write-Warning \"Print Server $PRTSrv Down, Contact Network Admin!!!\"} } Write-Host \"The search is complete, press any key to exit\" $x = $host.UI.RawUI.ReadKey(\"NoEcho,IncludeKeyDown\") ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/printers-on-print-server-10a36018/printers-on-print-server-10a36018/:2:0","tags":["Active Directory","HTML"],"title":"Printers on Print Server Repor","uri":"/printing/printer-ports-and-printer-drivers/printers-on-print-server-10a36018/printers-on-print-server-10a36018/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Printing the contents of a directory and subdirectories recursively Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/client-side-printing/24642b75-628d-4559-8308-60279a9a561d/24642b75-628d-4559-8308-60279a9a561d/:1:0","tags":["Active Directory","HTML"],"title":"Printing the contents of a directory and subdirectories recursively","uri":"/printing/client-side-printing/24642b75-628d-4559-8308-60279a9a561d/24642b75-628d-4559-8308-60279a9a561d/"},{"categories":["Printing"],"content":"Output from Technet Gallery ","date":"2019-12-01","objectID":"/printing/client-side-printing/24642b75-628d-4559-8308-60279a9a561d/24642b75-628d-4559-8308-60279a9a561d/:2:0","tags":["Active Directory","HTML"],"title":"Printing the contents of a directory and subdirectories recursively","uri":"/printing/client-side-printing/24642b75-628d-4559-8308-60279a9a561d/24642b75-628d-4559-8308-60279a9a561d/"},{"categories":["Printing"],"content":"Description The purpose of this script is to allow the user to simply enter a path and hit return and have the script silently print the contents of that directory and its subdirectories via the default printer. I am printing only Excel workbooks, Visio drawings, JPEG images and PDF files here, but you should be able to easily modify it to deal with other file types. I am hoping this script will be helpful to you. If you spot any errors or would like to make any suggestions, you are very welcome. I am open to questions, but please note that my knowledge of this language is somewhat limited. Credit goes to jv, who is much more knowledgable than myself, for helping me with this script. Kind regards, James Finch (MCDST) ","date":"2019-12-01","objectID":"/printing/client-side-printing/24642b75-628d-4559-8308-60279a9a561d/24642b75-628d-4559-8308-60279a9a561d/:3:0","tags":["Active Directory","HTML"],"title":"Printing the contents of a directory and subdirectories recursively","uri":"/printing/client-side-printing/24642b75-628d-4559-8308-60279a9a561d/24642b75-628d-4559-8308-60279a9a561d/"},{"categories":["Printing"],"content":"Script Visual Basic 'Declare shell objects Set objShell = CreateObject(\"Shell.Application\") Set WshShell = CreateObject(\"WScript.Shell\") Set objFSO = CreateObject(\"Scripting.FileSystemObject\") 'Excel object for printing workbooks Set Excel = WScript.CreateObject(\"Excel.Application\") 'Get start directory from user path = InputBox(\"Please enter a path:\") If path \u003c\u003e \"\" Then 'Get directory object \u0026 items Set objFolder = objFSO.GetFolder(path) Set shFolder = objShell.Namespace(path) Set colItems = shFolder.Items 'Iterate through items collection, printing documents For i = 0 To colItems.Count - 1 'Grab extension str = Right(colItems.Item(i).Name, 4) 'Print Word documents, Visio drawings and PDFs using InvokeVerbEx(\"Print\") If str = \".doc\" Or str = \".vsd\" Or _ str = \".pdf\" Then colItems.Item(i).InvokeVerbEx(\"Print\") End If 'Print a full workbook by iterating through worksheets If str = \".xls\" Then 'Set the workbook object by passing the full path to method Open Set workbook = Excel.Workbooks.Open(path \u0026 hfis(ai) \u0026 _ \"\\\" \u0026 colItems.Item(i).Name,false,true) 'Print all non-blank worksheets iteratively For Each ws In workbook.Sheets ws.Printout Next workbook.Close End If 'Print JPEGs 'silently' by passing them to Picture and Fax Viewer via command.com If str = \".jpg\" Then 'Resolve the long path into a short, DOS-compatible path str = WScript.CreateObject(\"Scripting.FileSystemObject\").GetFile(path \u0026 hfis(ai) \u0026 _ \"\\\" \u0026 colItems.Item(i).Name).ShortPath 'Pass file to Paint WshShell.Run \"rundll32 C:\\WINDOWS\\system32\\shimgvw.dll,ImageView_PrintTo /pt \" \u0026 str End If Next '* RECURSE THROUGH SUBDIRECTORIES * PrintSubfolders objFSO.GetFolder(path) Sub PrintSubFolders(subDir) For Each sd In subDir.SubFolders Set sdFolder = objShell.Namespace(sd.Path) Set colItems = sdFolder.Items For i = 0 To colItems.Count - 1 str = Right(colItems.Item(i).Name, 4) If str = \".doc\" Or str = \".vsd\" Or _ str = \".pdf\" Then colItems.Item(i).InvokeVerbEx(\"Print\") End If If str = \".xls\" Then Set workbook = Excel.Workbooks.Open(sd.Path \u0026 _ \"\\\" \u0026 colItems.Item(i).Name,false,true) For Each ws In workbook.Sheets ws.Printout Next workbook.Close End If If str = \".jpg\" Then str = WScript.CreateObject(\"Scripting.FileSystemObject\").GetFile(sd.Path \u0026 _ \"\\\" \u0026 colItems.Item(i).Name).ShortPath WshShell.Run \"rundll32 C:\\WINDOWS\\system32\\shimgvw.dll,ImageView_PrintTo /pt \" \u0026 str End If Next PrintSubFolders sd Next End Sub MsgBox(\"Done.\") Else 'User pressed Cancel MsgBox(\"Cancelled.\") End If Note that calling InvokeVerbEx(“Print”) is basically equal to right-clicking on a file from within Windows Explorer and selecting Print. Therefore you can call this on any file so long as you have an application on your computer capable of opening it and sending it to the printer. Also note that in this line: Visual Basic WshShell.Run \"rundll32 C:\\WINDOWS\\system32\\shimgvw.dll,ImageView_PrintTo /pt \" \u0026 str str can be the Name of any file supported by Windows Picture and Fax Viewer. Please rate this article if you find it helpful. ","date":"2019-12-01","objectID":"/printing/client-side-printing/24642b75-628d-4559-8308-60279a9a561d/24642b75-628d-4559-8308-60279a9a561d/:4:0","tags":["Active Directory","HTML"],"title":"Printing the contents of a directory and subdirectories recursively","uri":"/printing/client-side-printing/24642b75-628d-4559-8308-60279a9a561d/24642b75-628d-4559-8308-60279a9a561d/"},{"categories":["Printing"],"content":"Original Links Original Technet URL PrintServerManagement.ps1 Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/printservermanagementps1-7676ed28/printservermanagementps1-7676ed28/:1:0","tags":["Active Directory","HTML"],"title":"PrintServerManagement.ps1","uri":"/printing/print-servers-print-queues-and-print-jobs/printservermanagementps1-7676ed28/printservermanagementps1-7676ed28/"},{"categories":["Printing"],"content":"Output from Technet Gallery After a recent server upgrade I was disappointed to see a lack of PowerShell functions to handle printers. Specifically a lack of support for accessing printers in a clustered environment. After reading the very short list of posts from the Microsoft Printing Team, I wrote up my own. The code is based on their Printer Management post, I made some adjustments to it to handle accessing print queues on a remote server, as well as loading the GAC properly. I had an issue on my x64 workstation where System.Print was giving me an error, you can read about it in the post I mentioned earlier. The only sure-fire way seemed to be loading the .dll directly and letting powershell handle everything for me. I hope you enjoy them, they are quite handy I’ve come to rely on them quite a bit since writing them. Function Get-Printers { \u003c# .SYNOPSIS Get a list of printers from the specified print server .DESCRIPTION This function returns the Name of each printer installed on the specified print server. .PARAMETER ComputerName Name of the print server .EXAMPLE Get-Printers -ComputerName ps .LINK https://code.google.com/p/mod-posh/wiki/PrintServerManagement#Get-Printers #\u003e [CmdletBinding()] Param ( [String]$ComputerName ) Begin { $Host.Runspace.ThreadOptions = \"ReuseThread\" if ((Get-WmiObject -Class Win32_OperatingSystem).OSArchitecture -eq '64-bit') { $SystemPrinting = Get-ChildItem \"$($env:systemroot)\\assembly\\GAC_64\\System.Printing\" $SystemPrintingFile = Get-ChildItem -Name \"*system.printing*\" -Recurse -Path $SystemPrinting.FullName $SystemPrintingFile = \"$($SystemPrinting.FullName)\\$($SystemPrintingFile)\" } else { $SystemPrinting = Get-ChildItem \"$($env:systemroot)\\assembly\\GAC_32\\System.Printing\" $SystemPrintingFile = Get-ChildItem -Name \"*system.printing*\" -Recurse -Path $SystemPrinting.FullName $SystemPrintingFile = \"$($SystemPrinting.FullName)\\$($SystemPrintingFile)\" } $ErrorActionPreference = \"Stop\" Try { Add-Type -Path $SystemPrintingFile $PrintServer = New-Object System.Printing.PrintServer(\"\\\\$($ComputerName)\") $PrintQueues = $PrintServer.GetPrintQueues() } Catch { Write-Error $Error[0].Exception Break } $Printers = @() } Process { Foreach ($PrintQueue in $PrintQueues) { $ThisPrinter = New-Object -TypeName PSObject -Property @{ Name = $PrintQueue.Name } $Printers += $ThisPrinter } } End { Return $Printers } } Function Get-PrintQueue { \u003c# .SYNOPSIS Return the print queue for a given printer .DESCRIPTION This function returns the print queue for a specific printer from the print server. .PARAMETER ComputerName Name of the print server .PARAMETER Name Name of the print queue .EXAMPLE Get-PrintQueue -ComputerName ps -Name HPCLJ5500 .LINK https://code.google.com/p/mod-posh/wiki/PrintServertManagement#Get-PrintQueue #\u003e [CmdletBinding()] Param ( $ComputerName, $Name ) Begin { $Host.Runspace.ThreadOptions = \"ReuseThread\" if ((Get-WmiObject -Class Win32_OperatingSystem).OSArchitecture -eq '64-bit') { $SystemPrinting = Get-ChildItem \"$($env:systemroot)\\assembly\\GAC_64\\System.Printing\" $SystemPrintingFile = Get-ChildItem -Name \"*system.printing*\" -Recurse -Path $SystemPrinting.FullName $SystemPrintingFile = \"$($SystemPrinting.FullName)\\$($SystemPrintingFile)\" } else { $SystemPrinting = Get-ChildItem \"$($env:systemroot)\\assembly\\GAC_32\\System.Printing\" $SystemPrintingFile = Get-ChildItem -Name \"*system.printing*\" -Recurse -Path $SystemPrinting.FullName $SystemPrintingFile = \"$($SystemPrinting.FullName)\\$($SystemPrintingFile)\" } } Process { $ErrorActionPreference = \"Stop\" Try { Add-Type -Path $SystemPrintingFile $PrintServer = New-Object System.Printing.PrintServer(\"\\\\$($ComputerName)\") $PrintQueue = $PrintServer.GetPrintQueue($Name) } Catch { Write-Error $Error[0].Exception Break } } End { Return $PrintQueue } } Function Get-PrintJobs { \u003c# .SYNOPSIS Return the list of jobs on the current printer .DESCRIPTION This function returns a list of pending jobs on the specified print server for a given queue .PARAMETER ComputerNa","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/printservermanagementps1-7676ed28/printservermanagementps1-7676ed28/:2:0","tags":["Active Directory","HTML"],"title":"PrintServerManagement.ps1","uri":"/printing/print-servers-print-queues-and-print-jobs/printservermanagementps1-7676ed28/printservermanagementps1-7676ed28/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project 2010 PERT Add-in Original Technet Description URL Description Download: [Download Link](Download\\PERT Addin 2010.zip) ","date":"2019-12-01","objectID":"/project-server/2010-pert-add-in-1db7552a/2010-pert-add-in-1db7552a/:1:0","tags":["Active Directory","HTML"],"title":"Project 2010 PERT Add-in","uri":"/project-server/2010-pert-add-in-1db7552a/2010-pert-add-in-1db7552a/"},{"categories":["Project Server"],"content":"Output from Technet Gallery – English – After several requests and questions where was the PERT analysis in Project 2010, I decided to create an Add-in to fill this lack. The Add-in is multilingual, supports Portuguese, Spanish, Italian and English. To install, just unzip the file and click “Setup.exe” file. imageimage \" image – Português – Após vários pedidos e questionamentos aonde foi a análise PERT no Project 2010, resolvi criar um Add-in para suprir esta falta. O Add-in é multilingua, funciona tanto em português, espanhol, italiano e Inglês. Para instalar, basta descompactar o arquivo e clicar no arquivo “setup.exe”. imageimage \" image – Italiano – Dopo numerose richieste e domande sulla presenza dell’ analisi PERT in Project 2010, ho deciso di creare un Add-in per coprire questa mancanza. L’ Add-in è multilingua, supporta le lingue portoghese, spagnolo, inglese ed italiana. Per installarlo, scompattate il contenuto ed eseguite il file “Setup.exe” (Grazie Nicola Bortolini) imageimage \" image – Español – Después de varias peticiones y preguntas dónde estaba el análisis PERT en Project 2010, decidí crear un Add-in para cubrir esta carencia. El complemento es multilingüe, soporta portugués, español, italiano e Inglés. Para instalarlo, simplemente descomprimir el archivo y haga clic en “Setup.exe”. imageimage \" image ","date":"2019-12-01","objectID":"/project-server/2010-pert-add-in-1db7552a/2010-pert-add-in-1db7552a/:2:0","tags":["Active Directory","HTML"],"title":"Project 2010 PERT Add-in","uri":"/project-server/2010-pert-add-in-1db7552a/2010-pert-add-in-1db7552a/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project 2013 PERT Addin Original Technet Description URL Description Download: [Download Link](Download\\PERT Addin 2013.zip) ","date":"2019-12-01","objectID":"/project-server/2013-pert-addin-1f460074/2013-pert-addin-1f460074/:1:0","tags":["Active Directory","HTML"],"title":"Project 2013 PERT Addin","uri":"/project-server/2013-pert-addin-1f460074/2013-pert-addin-1f460074/"},{"categories":["Project Server"],"content":"Output from Technet Gallery – English – After several requests and questions where was the PERT analysis in Project 2013, I decided to create an Add-in to fill this lack. The Add-in is multilingual, supports Portuguese, Spanish, Italian and English. To install, just unzip the file and click “Setup.exe” file. imageimage \" image – Português – Após vários pedidos e questionamentos aonde foi a análise PERT no Project 2013, resolvi criar um Add-in para suprir esta falta. O Add-in é multilingua, funciona tanto em português, espanhol, italiano e Inglês. Para instalar, basta descompactar o arquivo e clicar no arquivo “setup.exe”. imageimage \" image – Italiano – Dopo numerose richieste e domande sulla presenza dell’ analisi PERT in Project 2013, ho deciso di creare un Add-in per coprire questa mancanza. L’ Add-in è multilingua, supporta le lingue portoghese, spagnolo, inglese ed italiana. Per installarlo, scompattate il contenuto ed eseguite il file “Setup.exe” (Grazie Nicola Bortolini) imageimage \" image – Español – Después de varias peticiones y preguntas dónde estaba el análisis PERT en Project 2013, decidí crear un Add-in para cubrir esta carencia. El complemento es multilingüe, soporta portugués, español, italiano e Inglés. Para instalarlo, simplemente descomprimir el archivo y haga clic en “Setup.exe”. imageimage \" image ","date":"2019-12-01","objectID":"/project-server/2013-pert-addin-1f460074/2013-pert-addin-1f460074/:2:0","tags":["Active Directory","HTML"],"title":"Project 2013 PERT Addin","uri":"/project-server/2013-pert-addin-1f460074/2013-pert-addin-1f460074/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project 2016 PERT Add-in Original Technet Description URL Description Download: [Download Link](Download\\PERT Addin 2016.zip) ","date":"2019-12-01","objectID":"/project-server/2016-pert-add-in-97c7e785/2016-pert-add-in-97c7e785/:1:0","tags":["Active Directory","HTML"],"title":"Project 2016 PERT Add-in","uri":"/project-server/2016-pert-add-in-97c7e785/2016-pert-add-in-97c7e785/"},{"categories":["Project Server"],"content":"Output from Technet Gallery – English – After several requests and questions where was the PERT analysis in Project 2016, I decided to create an Add-in to fill this lack. The Add-in is multilingual, supports Portuguese, Spanish, Italian and English. To install, just unzip the file and click “Setup.exe” file. imageimage \" image – Português – Após vários pedidos e questionamentos aonde foi a análise PERT no Project 2016, resolvi criar um Add-in para suprir esta falta. O Add-in é multilingua, funciona tanto em português, espanhol, italiano e Inglês. Para instalar, basta descompactar o arquivo e clicar no arquivo “setup.exe”. imageimage \" image – Italiano – Dopo numerose richieste e domande sulla presenza dell’ analisi PERT in Project 2016, ho deciso di creare un Add-in per coprire questa mancanza. L’ Add-in è multilingua, supporta le lingue portoghese, spagnolo, inglese ed italiana. Per installarlo, scompattate il contenuto ed eseguite il file “Setup.exe” (Grazie Nicola Bortolini) imageimage \" image – Español – Después de varias peticiones y preguntas dónde estaba el análisis PERT en Project 2016, decidí crear un Add-in para cubrir esta carencia. El complemento es multilingüe, soporta portugués, español, italiano e Inglés. Para instalarlo, simplemente descomprimir el archivo y haga clic en “Setup.exe”. imageimage \" image ","date":"2019-12-01","objectID":"/project-server/2016-pert-add-in-97c7e785/2016-pert-add-in-97c7e785/:2:0","tags":["Active Directory","HTML"],"title":"Project 2016 PERT Add-in","uri":"/project-server/2016-pert-add-in-97c7e785/2016-pert-add-in-97c7e785/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project 2016 unit tests for data consistency after a migration or dry run Original Technet Description URL Description Download: [Download Link](Download\\unittests project 2016 migration.sql) ","date":"2019-12-01","objectID":"/project-server/2016-unit-tests-for-data-1e518340/2016-unit-tests-for-data-1e518340/:1:0","tags":["Active Directory","HTML"],"title":"Project 2016 unit tests for data consistency after a migration or dry run","uri":"/project-server/2016-unit-tests-for-data-1e518340/2016-unit-tests-for-data-1e518340/"},{"categories":["Project Server"],"content":"Output from Technet Gallery this sql script allows quickly check data consistency at serveral carefully selected points (tests) between two ms project databases. This is handy to do after a migration from 2010 to 2013 or 2016 when you want to quickly test consistency of data between the old and the new environment. If you run queries on project 2010 you have to slightly modify the query and remove [pjrep.] from the queries as project 2010 does not have it. the script consist of multiple union queries (tests) that all have three fields: test message, test value and the measured value. The test is negative if the measured value differ more then 10% (change 0.1 to whatever fits your goals) from the test value. Script usage: run this script in one environment, take the measured MeasureValues and replace the test values. You have to do it per test. Example: for instance we have 1150 projects in one environment, we put it into the first query  select case when count(*) between 1150-100 and 1150+100 then ‘Project count OK’ else ‘Project count ERROR’ end Test, 1150 TestValue, count(*) MeasuredValue  from pjrep.[MSP_EpmProject_UserView] run the script with the fixed test values in the environment that you want to test. Example output: | Test | TestValue | MeasuredValue | | — | — | — | | Project count ERROR | 1150 | 10.609.000.000 | | Total Project work ERROR | 5367850 | 1.098.289.827.066 | | Average Projecten duration OK | 813 | 813.000.000 | | Total resource capacity ERROR | 15936380 | 10.628.439.460.000 | | Resources count ERROR | 1580 | 1.192.000.000 | | Task count ERROR | 94855 | 1.086.561.000.000 | | Assignements coun ERROR | 52726 | 704.120.000.000 | ","date":"2019-12-01","objectID":"/project-server/2016-unit-tests-for-data-1e518340/2016-unit-tests-for-data-1e518340/:2:0","tags":["Active Directory","HTML"],"title":"Project 2016 unit tests for data consistency after a migration or dry run","uri":"/project-server/2016-unit-tests-for-data-1e518340/2016-unit-tests-for-data-1e518340/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project and Project Online Power BI Report Pack Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/and-online-power-bi-report-d1fbca1b/and-online-power-bi-report-d1fbca1b/:1:0","tags":["Active Directory","HTML"],"title":"Project and Project Online Power BI Report Pack","uri":"/project-server/and-online-power-bi-report-d1fbca1b/and-online-power-bi-report-d1fbca1b/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This Power BI file contains reports for Microsoft’s Office 365 Project application that is built on the CDS and Project Online. This example report pack enables customers who use both Project (CDS) and Project Online to view data from both applications in one report. The report connections will need to be updated to access the target Project CDS environment. Set the CDSUrl parameter to the default Dynamics CDS org as this is where Project is deployed. To find the correct URL access Dynamics homepage (home.dynamics.com) and access Project, the URL need will similar to this https://orgXXXXXXXXX.dynamics.com. The account used as the data source will need read access to the entities used in the report pack: Bookable Resource Project Project Task Resource Assignment User Create a new access role and assign to the user account used to access the report as required. There is also a PWAUrl parameter that will need setting to the PWA URL. The account used as the data source will need access to the Project Reporting API - when promted, click Organizational account and sign in. This is the first version of the report pack for the new service, I plan to update this as the Project appliction evolves. ","date":"2019-12-01","objectID":"/project-server/and-online-power-bi-report-d1fbca1b/and-online-power-bi-report-d1fbca1b/:2:0","tags":["Active Directory","HTML"],"title":"Project and Project Online Power BI Report Pack","uri":"/project-server/and-online-power-bi-report-d1fbca1b/and-online-power-bi-report-d1fbca1b/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Burn and Forecast Repor Original Technet Description URL Description Download: [Download Link](Download\\Project Burn and Forecast Report.zip) ","date":"2019-12-01","objectID":"/project-server/burn-and-forecast-report-5e0f4b89/burn-and-forecast-report-5e0f4b89/:1:0","tags":["Active Directory","HTML"],"title":"Project Burn and Forecast Repor","uri":"/project-server/burn-and-forecast-report-5e0f4b89/burn-and-forecast-report-5e0f4b89/"},{"categories":["Project Server"],"content":"Output from Technet Gallery The User Guide for the Contoso Project Burn and Forecast Report demonstrates how to use the Project Burn and Forecast Report to estimate the projected spend rate (“Average Monthly Burn Rate”) based on the current spend plan, and it also allows you to forecast a spend plan based on a what-if spend rate in a budget-reduction scenario. The Contoso Project Burn and Forecast Report Source Code document describes how to add the Project Burn and Forecast Report to the Project Server 2010 v2 Demo Virtual Machine. The Project Burn and Forecast Report and supporting files are also provided in this download. The Project Server 2010 v2 Demo VM can be downloaded from theDownload Microsoft Project Server 2010 page on the TechNet Evaluation site. The Project Burn and Forecast Report was created by Emmanuel Fadullon, a Principal Consultant for Microsoft Consulting Services. ","date":"2019-12-01","objectID":"/project-server/burn-and-forecast-report-5e0f4b89/burn-and-forecast-report-5e0f4b89/:2:0","tags":["Active Directory","HTML"],"title":"Project Burn and Forecast Repor","uri":"/project-server/burn-and-forecast-report-5e0f4b89/burn-and-forecast-report-5e0f4b89/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Online - Add Related Projects To A Custom Field Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/online-add-related-e6a69a02/online-add-related-e6a69a02/:1:0","tags":["Active Directory","HTML"],"title":"Project Online - Add Related Projects To A Custom Field","uri":"/project-server/online-add-related-e6a69a02/online-add-related-e6a69a02/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This simple JavaScript solution starter enables you to select projects that are related and add those project names to a project level custom field all from a Project Detail Page. The script will need updating to reference the correct project level field internal name, but this is covered in the supporting blog post. A code snippet can be seen below - full code available in the download: JavaScript //get the project datafunction LoadProjectData() {var data = $.ajax({url: _spPageContextInfo.siteAbsoluteUrl + \"/_api/ProjectServer/Projects()?\" + \"\u0026$select=Name\", type: \"GET\", dataType: \"json\", headers: {Accept: \"application/json;odata=verbose\"}}); data.done(function (data,textStatus, jqXHR){ results = data.d.results; for (var i = 0, len = results.length; i \u003c len; i++) {var result = results[i]; projectData.push(result.Name); } populateSelectOptions(); }); data.fail(function (jqXHR,textStatus,errorThrown){ alert(\"Error retrieving project data: \" + jqXHR.responseText + \"\\n\\n Project data will not load\"); }); }; function populateSelectOptions() {var select = document.getElementById(\"availableProjects\"); Here is a link to the supporting blog post that details the requirements to use this solution starter script: https://pwmather.wordpress.com/2018/05/24/projectonline-add-related-projects-to-a-custom-field-javascript-jquery-ppm-office365-pmot-msproject/ The script is provided “As is” with no warranties etc. ","date":"2019-12-01","objectID":"/project-server/online-add-related-e6a69a02/online-add-related-e6a69a02/:2:0","tags":["Active Directory","HTML"],"title":"Project Online - Add Related Projects To A Custom Field","uri":"/project-server/online-add-related-e6a69a02/online-add-related-e6a69a02/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Online - PWA Stats and Snapsho Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/online-pwa-stats-and-eb56e6bb/online-pwa-stats-and-eb56e6bb/:1:0","tags":["Active Directory","HTML"],"title":"Project Online - PWA Stats and Snapsho","uri":"/project-server/online-pwa-stats-and-eb56e6bb/online-pwa-stats-and-eb56e6bb/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This simple JavaScript solution starter enables you to view certain stats for your PWA data such as Total Projects, In Progress, Late In Progress, Active Issues, Active Risks etc. It also enables the data to be captured in a SharePoint list on the PWA site to enable simple trend reporting. The script will need updating to reference the correct SharePoint Snapshot list, but this is covered in the supporting blog post. A code snippet can be seen below - full code available in the download: JavaScript //run on page load $(document).ready(function () { LoadProjectData(); LoadResourceData(); LoadIssueData(); LoadRiskData(); waitDialog = SP.UI.ModalDialog.showWaitScreenWithNoClose('Loading Data', 'Loading project, resource, issues and risks data'); }); //get the project data var urlProj = _spPageContextInfo.siteAbsoluteUrl + \"/_api/ProjectData/[en-US]/Projects()?\" + \"$filter=ProjectType ne 7\" + \"\u0026$select=ProjectId,ProjectPercentCompleted,ProjectFinishVariance\"; var allProjects = []; function LoadProjectData() { var data = $.ajax({url: urlProj, type: \"GET\", Here is a link to the supporting blog post that details the requirements to use this solution starter script: https://pwmather.wordpress.com/2018/07/02/projectonline-pwa-stats-with-snapshot-javascript-jquery-ppm-office365-pmot-msproject/ The script is provided “As is” with no warranties etc. ","date":"2019-12-01","objectID":"/project-server/online-pwa-stats-and-eb56e6bb/online-pwa-stats-and-eb56e6bb/:2:0","tags":["Active Directory","HTML"],"title":"Project Online - PWA Stats and Snapsho","uri":"/project-server/online-pwa-stats-and-eb56e6bb/online-pwa-stats-and-eb56e6bb/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Online / Project Server ‘Project on a page’ Original Technet Description URL Description Download: [Download Link](Download\\Projectonapage on project site.js) ","date":"2019-12-01","objectID":"/project-server/online-server-on-a-page-1b1f14f5/online-server-on-a-page-1b1f14f5/:1:0","tags":["Active Directory","HTML"],"title":"Project Online / Project Server 'Project on a page'","uri":"/project-server/online-server-on-a-page-1b1f14f5/online-server-on-a-page-1b1f14f5/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This JavaScript file displays project information on the associated Project Site in Project Server 2013 / Project Online. The script will display project information, project milestones, active issues and active risks on one page. A code snippet can be seen below: JavaScript \u003cscript type=\"text/javascript\" src=\"/sites/pwa/SiteCollectionDocuments/jquery-2.1.1.min.js\"\u003e\u003c/script\u003e \u003clink rel=\"stylesheet\" type=\"text/css\" href=\"//cdn.datatables.net/1.10.0/css/jquery.dataTables.css\"\u003e \u003cscript type=\"text/javascript\" charset=\"utf8\" src=\"//cdn.datatables.net/1.10.0/js/jquery.dataTables.js\"\u003e\u003c/script\u003e The script does require some jQuery libraries to work - these are detailed on the blog post below. The idea of this script is to reference the script file on project site via a content editor web part and link to the uploaded file. Don’t place the code directly on the project site or page, always reference the central file as it is easier to fix if you have any issues. For details see the blog post below: http://pwmather.wordpress.com/2014/10/26/project-on-a-page-for-microsoft-projectonline-ps2013-javascript-jquery-office365-sharepoint/ Also for this to work for Project Server On-prem the milestone query will need to be updated to use JSOM REST (/api/ProjectServer/) as the ProjectData ODATA feed has a bug with filtering for boolean fields. The query will need to be updated to use the REST fields - these are named different to the ODATA equivalents. The output can be seen below - better screen shots on the blogs post: The script is provided “As is” with no warranties etc. ","date":"2019-12-01","objectID":"/project-server/online-server-on-a-page-1b1f14f5/online-server-on-a-page-1b1f14f5/:2:0","tags":["Active Directory","HTML"],"title":"Project Online / Project Server 'Project on a page'","uri":"/project-server/online-server-on-a-page-1b1f14f5/online-server-on-a-page-1b1f14f5/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Online / Project Server - View Resource Calendar Exceptions Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/online-server-view-20760922/online-server-view-20760922/:1:0","tags":["Active Directory","HTML"],"title":"Project Online / Project Server - View Resource Calendar Exceptions","uri":"/project-server/online-server-view-20760922/online-server-view-20760922/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This JavaScript file enables the user to see the Resource Calendar Exceptions in Project Online / Project Server 2013. The example script can be added to a page in the PWA site collection using a content editor web part. A code snippet can be seen below: JavaScript \u003ch2\u003eResource Calendar Exception Checker\u003c/h2\u003e Select the Resource: \u003cselect id=\"idRES\"\u003e\u003c/select\u003e \u003ctable width=\"100%\" align=\"left\" cellpadding=\"0\" border=\"1\" class=\"stripe hover\" id=\"ResExceptions\" style=\"display:none\"\u003e \u003cthead\u003e\u003cth\u003eException Name\u003c/th\u003e\u003cth\u003eStart Date\u003c/th\u003e\u003cth\u003eFinish Date\u003c/th\u003e\u003cth\u003eRecurrence Type\u003c/th\u003e\u003cth\u003eRecurrence Frequency\u003c/th\u003e\u003cth\u003eDuration (Days)\u003c/th\u003e\u003c/thead\u003e \u003c/table\u003e \u003cscript type=\"text/javascript\"\u003e $(document).ready(function () { LoadResources(); The script does require some jQuery libraries to work - these are detailed on the blog post below. The idea of this script is to add the script to the PWA site via a content editor web part. For details see the blog post below: http://pwmather.wordpress.com/2015/05/01/projectonline-projectserver-view-resource-calendar-exceptions-javascript-jquery-office365-sharepoint/ A screenshot of the output can be seen below: The script is provided “As is” with no warranties etc. ","date":"2019-12-01","objectID":"/project-server/online-server-view-20760922/online-server-view-20760922/:2:0","tags":["Active Directory","HTML"],"title":"Project Online / Project Server - View Resource Calendar Exceptions","uri":"/project-server/online-server-view-20760922/online-server-view-20760922/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Online / Project Server 2013/16/19 - access SharePoint lists on a PDP Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/online-server-2013-access-627b10ef/online-server-2013-access-627b10ef/:1:0","tags":["Active Directory","HTML"],"title":"Project Online / Project Server 2013/16/19 - access SharePoint lists on a PDP","uri":"/project-server/online-server-2013-access-627b10ef/online-server-2013-access-627b10ef/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This simple JavaScript file enables the user to access the SharePoint Issues and Risks lists in Project Online / Project Server 2013. The example script is added to a Project Detail Page in the PWA site collection using a content editor web part. A code snippet can be seen below: JavaScript \u003cdiv id=\"divMessage\"\u003e \u003cbr/\u003e \u003cspan id=\"spanMessage\" style=\"color: #FF0000;\"\u003e\u003c/span\u003e \u003c/div\u003e \u003cp id=\"messages\"\u003e\u003c/p\u003e \u003cdiv id=\"buttons\"\u003e \u003cbutton type='button' id=\"riskBtn\" class='deselectedBtn' onclick=\"showRisks()\" \u003eDisplay Risks\u003c/button\u003e \u003cbutton type='button' id=\"issueBtn\" class='deselectedBtn' onclick=\"showIssues()\"\u003eDisplay Issues\u003c/button\u003e \u003c/div\u003e The script does require a jQuery library to work - these are detailed on the blog post below. The idea of this script is to add the script to the PWA Project Detail Page via a content editor web part. For details see the blog post below: http://pwmather.wordpress.com/2015/05/12/projectonline-projectserver-2013-access-sharepoint-lists-on-pdps-javascript-jquery-office365/ A screenshot of the output can be seen below: The script is provided “As is” with no warranties etc. ","date":"2019-12-01","objectID":"/project-server/online-server-2013-access-627b10ef/online-server-2013-access-627b10ef/:2:0","tags":["Active Directory","HTML"],"title":"Project Online / Project Server 2013/16/19 - access SharePoint lists on a PDP","uri":"/project-server/online-server-2013-access-627b10ef/online-server-2013-access-627b10ef/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Online / Project Server PDP tabs Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/online-server-pdp-tabs-c8012555/online-server-pdp-tabs-c8012555/:1:0","tags":["Active Directory","HTML"],"title":"Project Online / Project Server PDP tabs","uri":"/project-server/online-server-pdp-tabs-c8012555/online-server-pdp-tabs-c8012555/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This simple JavaScript solution starter enables you to display your Project Online Project Detail Pages (PDP) web parts on tabs. The code will need updating to work for your Project Online configuration as you will have different PDPs on the page. It is very simple to update. A code snippet can be seen below - full code available in the download: JavaScript $(document).ready(function () { $(\"#MSOZoneCell_WebPartWPQ4\").hide(); $(\"#MSOZoneCell_WebPartWPQ3\").appendTo(\"#details\"); $(\"#MSOZoneCell_WebPartWPQ4\").appendTo(\"#info\"); }); $(function() { $('#tabs').tabs(); }); Here is a link to the supporting blog post that details the requirements to use this solution starter script: https://pwmather.wordpress.com/2018/03/04/projectonline-projectserver-display-project-detail-page-web-parts-using-tabs-ppm-msproject-javascript-jquery/ The script is provided “As is” with no warranties etc. ","date":"2019-12-01","objectID":"/project-server/online-server-pdp-tabs-c8012555/online-server-pdp-tabs-c8012555/:2:0","tags":["Active Directory","HTML"],"title":"Project Online / Project Server PDP tabs","uri":"/project-server/online-server-pdp-tabs-c8012555/online-server-pdp-tabs-c8012555/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Online / Project Server update Name description on PDP Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/online-server-update-name-0f8bd826/online-server-update-name-0f8bd826/:1:0","tags":["Active Directory","HTML"],"title":"Project Online / Project Server update Name description on PDP","uri":"/project-server/online-server-update-name-0f8bd826/online-server-update-name-0f8bd826/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This simple JavaScript file enables you to change the Project Name field description on the Project Detail Pages to display a different description such as “Enter a name for the project”. The script does require a jQuery library to work - these are detailed on the blog post below. The idea of this script is to add the script to the PWA Project Detail Page via a content editor web part. For details see the blog post below: https://pwmather.wordpress.com/2015/09/22/projectonline-projectserver-2013-update-project-name-description-on-pdp-javascript-jquery/ A screenshot of the output can be seen below: The script is provided “As is” with no warranties etc ","date":"2019-12-01","objectID":"/project-server/online-server-update-name-0f8bd826/online-server-update-name-0f8bd826/:2:0","tags":["Active Directory","HTML"],"title":"Project Online / Project Server update Name description on PDP","uri":"/project-server/online-server-update-name-0f8bd826/online-server-update-name-0f8bd826/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Online / Project Server update Owner label on PDP Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/online-server-update-owner-7ef2671a/online-server-update-owner-7ef2671a/:1:0","tags":["Active Directory","HTML"],"title":"Project Online / Project Server update Owner label on PDP","uri":"/project-server/online-server-update-owner-7ef2671a/online-server-update-owner-7ef2671a/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This simple JavaScript file enables you to change the Owner field / label on the Project Detail Pages to display a different label such as Project Manager. The script does require a jQuery library to work - these are detailed on the blog post below. The idea of this script is to add the script to the PWA Project Detail Page via a content editor web part. For details see the blog post below: http://pwmather.wordpress.com/2015/06/12/projectonline-projectserver-2013-update-owner-label-on-pdp-javascript-jquery/ A screenshot of the output can be seen below: The script is provided “As is” with no warranties etc. ","date":"2019-12-01","objectID":"/project-server/online-server-update-owner-7ef2671a/online-server-update-owner-7ef2671a/:2:0","tags":["Active Directory","HTML"],"title":"Project Online / Project Server update Owner label on PDP","uri":"/project-server/online-server-update-owner-7ef2671a/online-server-update-owner-7ef2671a/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Online Content Pack with Dynamic Row Level Security Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/online-content-pack-with-64761eb9/online-content-pack-with-64761eb9/:1:0","tags":["Active Directory","HTML"],"title":"Project Online Content Pack with Dynamic Row Level Security","uri":"/project-server/online-content-pack-with-64761eb9/online-content-pack-with-64761eb9/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This content packs builds on Microsoft’s release for Project Online and adds in Dynamic Row Level Security. When fully configured this automatically filters the content pack to display only the projects owned by the viewer. Further details are availalbe here. Please note at the time of publishing a Power BI Pro licence is required to enable the Row Level Security feature. ","date":"2019-12-01","objectID":"/project-server/online-content-pack-with-64761eb9/online-content-pack-with-64761eb9/:2:0","tags":["Active Directory","HTML"],"title":"Project Online Content Pack with Dynamic Row Level Security","uri":"/project-server/online-content-pack-with-64761eb9/online-content-pack-with-64761eb9/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Online Power BI Project Compliance Report Pack Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/online-power-bi-compliance-b45b657c/online-power-bi-compliance-b45b657c/:1:0","tags":["Active Directory","HTML"],"title":"Project Online Power BI Project Compliance Report Pack","uri":"/project-server/online-power-bi-compliance-b45b657c/online-power-bi-compliance-b45b657c/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This Power BI file contains reports for Microsoft’s Office 365 PPM tool Project Online. This report pack contains reports to help check that your projects are compliant. There is a summary page to give an overview across projects then a detailed page for the selected project. The report connections will need to be updated to access the target PWA instance, these steps for updating the parameter are covered in the supporting blog post here: https://pwmather.wordpress.com/2018/10/22/projectonline-ppm-powerbi-project-compliance-report-pack-bi-reporting-powerquery-dax-office365/ The blog post also contains screen shots of the reports included. ","date":"2019-12-01","objectID":"/project-server/online-power-bi-compliance-b45b657c/online-power-bi-compliance-b45b657c/:2:0","tags":["Active Directory","HTML"],"title":"Project Online Power BI Project Compliance Report Pack","uri":"/project-server/online-power-bi-compliance-b45b657c/online-power-bi-compliance-b45b657c/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Online Power BI Report Pack v1 Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/online-power-bi-report-de969b81/online-power-bi-report-de969b81/:1:0","tags":["Active Directory","HTML"],"title":"Project Online Power BI Report Pack v1","uri":"/project-server/online-power-bi-report-de969b81/online-power-bi-report-de969b81/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This Power BI file contains reports for Microsoft’s office 365 PPM tool Project Online. This is the first release of the report pack, I plan to update this in the near future and publish later versions. The report connections will need to be updated to access the target PWA instance, these steps for updating the parameter are covered in the supporting blog post here: https://pwmather.wordpress.com/2017/01/03/projectonline-ppm-powerbi-report-pack-bi-reporting-powerquery-dax-office365/ The blog post also contains screen shots of each report included. ","date":"2019-12-01","objectID":"/project-server/online-power-bi-report-de969b81/online-power-bi-report-de969b81/:2:0","tags":["Active Directory","HTML"],"title":"Project Online Power BI Report Pack v1","uri":"/project-server/online-power-bi-report-de969b81/online-power-bi-report-de969b81/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Online Power BI Report Pack v2 Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/online-power-bi-report-abcb3c3b/online-power-bi-report-abcb3c3b/:1:0","tags":["Active Directory","HTML"],"title":"Project Online Power BI Report Pack v2","uri":"/project-server/online-power-bi-report-abcb3c3b/online-power-bi-report-abcb3c3b/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This Power BI file contains reports for Microsoft’s Office 365 PPM tool Project Online. This is the second version of the report pack. The report connections will need to be updated to access the target PWA instance, these steps for updating the parameter are covered in the supporting blog post here: https://pwmather.wordpress.com/2017/10/31/projectonline-ppm-powerbi-report-pack-v2-bi-reporting-powerquery-dax-office365/ The blog post also contains screen shots of each report included. ","date":"2019-12-01","objectID":"/project-server/online-power-bi-report-abcb3c3b/online-power-bi-report-abcb3c3b/:2:0","tags":["Active Directory","HTML"],"title":"Project Online Power BI Report Pack v2","uri":"/project-server/online-power-bi-report-abcb3c3b/online-power-bi-report-abcb3c3b/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Online Project Level HTML fields to SP Lis Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/online-level-html-fields-5dc31a38/online-level-html-fields-5dc31a38/:1:0","tags":["Active Directory","HTML"],"title":"Project Online Project Level HTML fields to SP Lis","uri":"/project-server/online-level-html-fields-5dc31a38/online-level-html-fields-5dc31a38/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This PowerShell script will use the Project Reporting OData API to get all of the published projects in the Project Online PWA Site Collection, then for each project it will get the project level multiple lines of text fields that include the HTML from the REST API and then create a list item on the specified SharePoint list. The user setting up the script will need to update the source PWA instance URL, username, password and list name. The example script will need updating to meet the requirements for your PWA instance, see the blog post for details. The account will need access to the OData API in PWA, full read access to all projects and edit access to the target SharePoint list. The SharePoint list will also need to be created beforehand with the required columns. A code snippet can be seen below - full code in the download: #add SharePoint Online DLL - update the location if required $programFiles = [environment]::getfolderpath(\"programfiles\") add-type -Path $programFiles'\\SharePoint Online Management Shell\\Microsoft.Online.SharePoint.PowerShell\\Microsoft.SharePoint.Client.dll' #set the environment details $PWAInstanceURL = \"https://tenant.sharepoint.com/sites/pwa\" $username = \"admin@tenant.onmicrosoft.com\" $password = \"password\" $securePass = ConvertTo-SecureString $password -AsPlainText -Force #create the SharePoint list on the PWA site and add the correct columns based on the data required $listname = \"ProjectMutliLineFields\" $projectList = @() For the script to work, the SharePoint Online client DLL is required for the SharePoint Online credentials class. A supporting blog post can be seen here: https://pwmather.wordpress.com/2018/01/27/projectonline-project-level-html-fields-to-a-sharepoint-list-powershell-ppm-office365/ The script is provided “As is” with no warranties etc. ","date":"2019-12-01","objectID":"/project-server/online-level-html-fields-5dc31a38/online-level-html-fields-5dc31a38/:2:0","tags":["Active Directory","HTML"],"title":"Project Online Project Level HTML fields to SP Lis","uri":"/project-server/online-level-html-fields-5dc31a38/online-level-html-fields-5dc31a38/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Online Project User Sync to Project Si Original Technet Description URL Description Download: [Download Link](Download\\ProjectOnline - SyncProjectTeamtoProjectSite.ps1) ","date":"2019-12-01","objectID":"/project-server/online-user-sync-to-7a75ef77/online-user-sync-to-7a75ef77/:1:0","tags":["Active Directory","HTML"],"title":"Project Online Project User Sync to Project Si","uri":"/project-server/online-user-sync-to-7a75ef77/online-user-sync-to-7a75ef77/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This solution starter PowerShell script will add the users from the project team into the associated Project Site in Project Online. The solution starter example will action this for the specified project. For production use this could easily be made dynamic to iterate over all / specified projects and project sites. This solution starter code would be a good example to enable user synchronisation for project sites that are not in the Project Online PWA site collection. A code snippet can be seen below (full code in the download): #add SharePoint Online DLL - update the location if required $programFiles = [environment]::getfolderpath(\"programfiles\") add-type -Path $programFiles'\\SharePoint Online Management Shell\\Microsoft.Online.SharePoint.PowerShell\\Microsoft.SharePoint.Client.dll' #set the environment details $PWAInstanceURL = \"PWAURL\" $username = \"username\" $password = \"password\" $securePass = ConvertTo-SecureString $password -AsPlainText -Force #example project details $exampleProjectGUID = 'Target project guid' $exampleProjectSiteURL = 'TargetProjectSiteUrl' $groupName = 'Target SP permission group' try { Function GetProjectTeamMembers { #get all of the team members - will include resources that are not users too. $team = @() #set the REST URL project $url = $PWAInstanceURL + \"/_api/ProjectServer/Projects('$exampleProjectGUID')/ProjectResources()?`$Select=Id\" #get all of the data from the REST URL for the Project Team while ($url){ [Microsoft.SharePoint.Client.SharePointOnlineCredentials]$spocreds =  The example script will need updating for your PWA instance - the DLL location, PWA URL, username, password and example project details. A support blog post can be found here: https://pwmather.wordpress.com/2017/07/07/projectonline-project-user-sync-to-project-sites-ppm-o365-powershell-sharepoint/ The script is provided “As is” with no warranties etc. Fully test this on a non-production PWA instance first and update to be production standard code if running this in a production instance. ","date":"2019-12-01","objectID":"/project-server/online-user-sync-to-7a75ef77/online-user-sync-to-7a75ef77/:2:0","tags":["Active Directory","HTML"],"title":"Project Online Project User Sync to Project Si","uri":"/project-server/online-user-sync-to-7a75ef77/online-user-sync-to-7a75ef77/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Online Snapshot example with PowerShell Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/online-snapshot-example-0437b680/online-snapshot-example-0437b680/:1:0","tags":["Active Directory","HTML"],"title":"Project Online Snapshot example with PowerShell","uri":"/project-server/online-snapshot-example-0437b680/online-snapshot-example-0437b680/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This PowerShell script will use the Project Reporting OData API to get all of the specified project data in the PWA Site Collection then create a list item on the specified SharePoint list. The user setting up the script will need to update the source PWA instance URL, username, password and list name. This can be used to capture the data on a schedule to enable snapshot / trend reports to be created. The example script will need updating to meet the requirements on your PWA instance, see the blog post for details. The account will need access to the OData API in PWA and edit access to the target SharePoint list. The SharePoint list will also need to be created beforehand with the required columns. A code snippet can be seen below: #add SharePoint Online DLL - update the location if required $programFiles = [environment]::getfolderpath(\"programfiles\") add-type -Path $programFiles'\\SharePoint Online Management Shell\\Microsoft.Online.SharePoint.PowerShell\\Microsoft.SharePoint.Client.dll' #set the environment details $PWAInstanceURL = \"https://tenant.sharepoint.com/sites/pwa\" $username = \"admin@tenant.onmicrosoft.com\" $password = \"password\" $securePass = ConvertTo-SecureString $password -AsPlainText -Force #create the SharePoint list on the PWA site and add the correct columns based on the data required $listname = \"ProjectSnapShots\" $results1 = @() For the script to work, the SharePoint Online client DLL is required for the SharePoint Online credentials class. This example is for Project Online but could easily be modified for Project Server 2013 / 2016. A supporting blog post can be seen here: https://pwmather.wordpress.com/2016/08/26/projectonline-data-capture-snapshot-capability-with-powershell-sharepoint-office365-ppm-bi/ The script is provided “As is” with no warranties etc. ","date":"2019-12-01","objectID":"/project-server/online-snapshot-example-0437b680/online-snapshot-example-0437b680/:2:0","tags":["Active Directory","HTML"],"title":"Project Online Snapshot example with PowerShell","uri":"/project-server/online-snapshot-example-0437b680/online-snapshot-example-0437b680/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Online Timesheet Excel Repor Original Technet Description URL Description Download: [Download Link](Download\\Project Online Timesheet Report.zip) ","date":"2019-12-01","objectID":"/project-server/online-timesheet-excel-3b165651/online-timesheet-excel-3b165651/:1:0","tags":["Active Directory","HTML"],"title":"Project Online Timesheet Excel Repor","uri":"/project-server/online-timesheet-excel-3b165651/online-timesheet-excel-3b165651/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This file contains an Excel template that provides Timesheet reporting for Project Online. The report uses the standard oData feed and provides the ability to filter by Timesheet Period, Resource Name and Project Name. Details of how to enter the correct URL for the oData feed are included in the download, alongside the Excel template. **** ","date":"2019-12-01","objectID":"/project-server/online-timesheet-excel-3b165651/online-timesheet-excel-3b165651/:2:0","tags":["Active Directory","HTML"],"title":"Project Online Timesheet Excel Repor","uri":"/project-server/online-timesheet-excel-3b165651/online-timesheet-excel-3b165651/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Online Work and Capacity Graphs Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/online-work-and-capacity-30a67204/online-work-and-capacity-30a67204/:1:0","tags":["Active Directory","HTML"],"title":"Project Online Work and Capacity Graphs","uri":"/project-server/online-work-and-capacity-30a67204/online-work-and-capacity-30a67204/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This Power BI template file provides resource work and capacity charts for Project Online resources. It makes use of a DAX measure to ensure a full set of contiguous timephased work values and hence provides for readable line charts. Combined with a filter based upon resource names it’s easy to see when resources are overloaded! It uses standard Project Online data fields and so will work out of the box with all Project Online and Project Server (2013/2016) solutions. ","date":"2019-12-01","objectID":"/project-server/online-work-and-capacity-30a67204/online-work-and-capacity-30a67204/:2:0","tags":["Active Directory","HTML"],"title":"Project Online Work and Capacity Graphs","uri":"/project-server/online-work-and-capacity-30a67204/online-work-and-capacity-30a67204/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Online/Server 2013: Timephased Work Management with CSOM - Starter Ki Original Technet Description URL Description Download: [Download Link](Download\\Neos-SDI Project Online Starter Kit.zip) ","date":"2019-12-01","objectID":"/project-server/onlineserver-2013-e1950d29/onlineserver-2013-e1950d29/:1:0","tags":["Active Directory","HTML"],"title":"Project Online/Server 2013: Timephased Work Management with CSOM - Starter Ki","uri":"/project-server/onlineserver-2013-e1950d29/onlineserver-2013-e1950d29/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This project illustrates how to use Project Server 2013 CSOM for: Reading Project and Tasks Adding Tasks, and Timephased Assignment Adding Timephased Actual on Assignment  It’s a simple console application, and work on Project Online, as well as Project On Prem. All methods are commented, specially where things seems not obvious.  This project is intented to be a helper for your development, because the Project Server 2013 SDK is not fully documented. On the Support Forum in Technet, a lot of questions are often asked, related to this area of development. So I hope that this project will save (a bit of) your time. The pre requisite are: Having a Project Server 2013 instance on line or On Premise Having at list One project The periods must be created, and the Timesheet for the current period must be created (simply click on the TimeSheet link on PWA). This issue will be solved soon. The current user must be defined as a resource On your development machine, VS2013, Project Server 2013 SDK, and the SharePoint Server 2013 Client Components SDK. Normally, all dependencies are included in the Libraries folder. Some of these assemblies must be in GAC If you need more info, contact me: mail: mailto://sylvain.gross@neos-sdi.com twitter: @SylvainGrossNeo If you have some suggestions, or improvement proposal, don’t hesitate to contact me. This app may contain some bugs or “undiscovered behaviour” ;-), it’s not intended to be used as is in Production. Your feedback are welcome to improve this code. You can also contact me if you have difficulties to create a Project Online tenant, or Project Server environment. C# using System; using System.Collections.Generic; using System.Linq; using System.Web; using Microsoft.ProjectServer.Client; using Microsoft.SharePoint.Client; //using NeosSDI.ProjectOnline.Business; namespace NeosSDI.ProjectOnline.CSOM { public class ProjectCSOMManager { // Change this value if you are on prem and not Online private static bool IsProjectOnline = true; private static int timeOut = 20; private static string projName = \"yourtenant\"; // define the name of your tenant here private static string connectUserName = \"administrator\"; // user name with the domaine private static string connectPwd = \"YOUR PWD\"; // your pwd private static string projDomain = string.Format(\"{0}.onmicrosoft.com\", projName); // Set the Project Server client context. private static ProjectContext projContext; private static string PwaPath { get { // Change here the name of the PWA instance: PWA should be the must common case. if (IsProjectOnline) return string.Format(\"https://{0}.sharepoint.com/sites/pwa\", projName); else return \"http://2013-sp/pwa\"; } } /// \u003csummary\u003e /// This method performs a very simple operation: Read Projects, and the Tasks of these projets /// Result is stored in the ProjectContext, and returned to the client. /// Step by step, we have to: /// - Manage authentification, for Project Online, or Project On Prem /// - Create the Query, to ask for the projects, and to include some additionnal properties (dates, tasks...) /// - Execute the Query /// \u003c/summary\u003e /// \u003creturns\u003e\u003c/returns\u003e public static ProjectContext ReadProjects() { try { projContext = new ProjectContext(PwaPath); if (IsProjectOnline) projContext.ExecutingWebRequest += ClaimsHelper.clientContext_ExecutingWebRequest; else projContext.Credentials = new System.Net.NetworkCredential(\"alexd\", \"pass@word1\", \"contoso\"); // Use IncludeWithDefaultProperties to force CSOM to load the Tasks collection, otherwize we have a (very) lazy loading // Careful: the Load method does not perform the Load ! It prepare the context before the ExecuteQuery is run. projContext.Load(projContext.Projects, c =\u003e c.IncludeWithDefaultProperties(pr =\u003e pr.StartDate, pr =\u003e pr.FinishDate, pr =\u003e pr.Tasks)); // Actual execution of the Load - AFter this method, the Projects collection contains data, and the properties which are specified below. projContext.ExecuteQuery(); } ca","date":"2019-12-01","objectID":"/project-server/onlineserver-2013-e1950d29/onlineserver-2013-e1950d29/:2:0","tags":["Active Directory","HTML"],"title":"Project Online/Server 2013: Timephased Work Management with CSOM - Starter Ki","uri":"/project-server/onlineserver-2013-e1950d29/onlineserver-2013-e1950d29/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Power BI Report Pack Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/power-bi-report-pack-4506f183/power-bi-report-pack-4506f183/:1:0","tags":["Active Directory","HTML"],"title":"Project Power BI Report Pack","uri":"/project-server/power-bi-report-pack-4506f183/power-bi-report-pack-4506f183/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This Power BI file contains reports for Microsoft’s Office 365 Project application that is built on the CDS. The report connections will need to be updated to access the target Project CDS environment. Set the CDSUrl parameter to the default Dynamics CDS org as this is where Project is deployed. To find the correct URL access Dynamics homepage (home.dynamics.com) and access Project, the URL need will similar to this https://orgXXXXXXXXX.dynamics.com. The account used as the data source will need read access to the entities used in the report pack: Bookable Resource Project Project Task Project Task Dependency Project Bucket Project Team Member Resource Assignment User Create a new access role and assign to the user account used to access the report as required. This is the first version of the report pack for the new service, I plan to update this as the Project appliction evolves. ","date":"2019-12-01","objectID":"/project-server/power-bi-report-pack-4506f183/power-bi-report-pack-4506f183/:2:0","tags":["Active Directory","HTML"],"title":"Project Power BI Report Pack","uri":"/project-server/power-bi-report-pack-4506f183/power-bi-report-pack-4506f183/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Roadmap Power BI Report Pack Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/roadmap-power-bi-report-8eaae91e/roadmap-power-bi-report-8eaae91e/:1:0","tags":["Active Directory","HTML"],"title":"Project Roadmap Power BI Report Pack","uri":"/project-server/roadmap-power-bi-report-8eaae91e/roadmap-power-bi-report-8eaae91e/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This Power BI file contains reports for Microsoft’s Office 365 Project Online Project Roadmap feature. The report connections will need to be updated to access the target Project Roadmap CDS environment, these steps for updating the parameter are covered in the supporting blog post here: https://pwmather.wordpress.com/2019/01/30/project-roadmap-powerbi-report-pack-ppm-projectmanagement-msproject-projectonline-office365-powerplatform-dynamics365/ This does use the Power BI Common Data Service for Apps (Beta) connector - so this connector could change when released and the report might require some re-work. ","date":"2019-12-01","objectID":"/project-server/roadmap-power-bi-report-8eaae91e/roadmap-power-bi-report-8eaae91e/:2:0","tags":["Active Directory","HTML"],"title":"Project Roadmap Power BI Report Pack","uri":"/project-server/roadmap-power-bi-report-8eaae91e/roadmap-power-bi-report-8eaae91e/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Server / Project Online Project Cost and Work Report Exampl Original Technet Description URL Description Download: [Download Link](Download\\Projects Cost and Work - Charts.js) ","date":"2019-12-01","objectID":"/project-server/server-online-cost-and-83bbff27/server-online-cost-and-83bbff27/:1:0","tags":["Active Directory","HTML"],"title":"Project Server / Project Online Project Cost and Work Report Exampl","uri":"/project-server/server-online-cost-and-83bbff27/server-online-cost-and-83bbff27/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This JavaScript file enables the user to see project cost and work on a column chart in Project Online / Project Server 2013. The example script can be added to a page in the PWA site collection using a content editor web part. A code snippet can be seen below: JavaScript \u003ch2\u003eProject Cost and Work\u003c/h2\u003e Select the EPT: \u003cselect id=\"idEPT\"\u003e\u003c/select\u003e \u003c!--\u003cinput type=\"button\" id=\"idApplyButton\" value=\"Display Projects\" \u003e--\u003e \u003ch3\u003eProject Cost Chart\u003c/h3\u003e \u003cdiv id=\"costChart\" style=\"min-width: 400px; height: 600px; margin: 0 auto\"\u003e\u003c/div\u003e \u003ch3\u003eProject Work Chart\u003c/h3\u003e \u003cdiv id=\"workChart\" style=\"min-width: 400px; height: 600px; margin: 0 auto\"\u003e\u003c/div\u003e \u003cscript type=\"text/javascript\"\u003e $(document).ready(function () { LoadEPTs(); }); function LoadEPTs() {  The script requires jQuery to work and also makes use of a charting library called Highcharts.Highcharts is not free for commercial use, see the link below: http://shop.highsoft.com/faq/non-commercial#what-is-non-commercial If you do use this library in scripts or applications that you sell / anything commercial you will need to purchase the correct licence to do so. Other charting libraries can be used, just update the code as required based on the chosen chart library. For more details on this script see the blow post below: http://pwmather.wordpress.com/2015/02/25/projectonline-projectserver-project-cost-and-work-report-javascript-jquery-office365-sharepoint-bi-ppm/ A screenshot of the report can be seen below: The script is provided “As is” with no warranties etc. ","date":"2019-12-01","objectID":"/project-server/server-online-cost-and-83bbff27/server-online-cost-and-83bbff27/:2:0","tags":["Active Directory","HTML"],"title":"Project Server / Project Online Project Cost and Work Report Exampl","uri":"/project-server/server-online-cost-and-83bbff27/server-online-cost-and-83bbff27/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Server / Project Online Project Site Finder Original Technet Description URL Description Download: [Download Link](Download\\Project Site Finder.js) ","date":"2019-12-01","objectID":"/project-server/server-online-finder-56968921/server-online-finder-56968921/:1:0","tags":["Active Directory","HTML"],"title":"Project Server / Project Online Project Site Finder","uri":"/project-server/server-online-finder-56968921/server-online-finder-56968921/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This JavaScript file enables the user to quickly find / navigate to the Project Site in Project Server 2013 / Project Online. The script can be added to the PWA site collection, for example on the PWA homepage for easy access. A code snippet can be seen below: JavaScript \u003cscript type=\"text/javascript\" src=\"/sites/pwa/SiteCollectionDocuments/JSFiles/jquery-2.1.1.min.js\"\u003e\u003c/script\u003e \u003clink rel=\"stylesheet\" type=\"text/css\" href=\"//cdn.datatables.net/1.10.0/css/jquery.dataTables.css\"\u003e \u003cscript type=\"text/javascript\" charset=\"utf8\" src=\"//cdn.datatables.net/1.10.0/js/jquery.dataTables.js\"\u003e\u003c/script\u003e The script does require some jQuery libraries to work - these are detailed on the blog post below. The idea of this script is to add the script to the PWA site via a content editor web part. For details see the blog post below: http://pwmather.wordpress.com/2014/12/01/projectonline-projectserver-project-site-finder-javascript-jquery-office365-sharepoint/ A screenshot of the output can be seen below: Type part of the project name and click “Find Project” The script is provided “As is” with no warranties etc. ","date":"2019-12-01","objectID":"/project-server/server-online-finder-56968921/server-online-finder-56968921/:2:0","tags":["Active Directory","HTML"],"title":"Project Server / Project Online Project Site Finder","uri":"/project-server/server-online-finder-56968921/server-online-finder-56968921/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Server 2010 / 2013 - Publish all projects Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/server-2010-publish-all-45ba385b/server-2010-publish-all-45ba385b/:1:0","tags":["Active Directory","HTML"],"title":"Project Server 2010 / 2013 - Publish all projects","uri":"/project-server/server-2010-publish-all-45ba385b/server-2010-publish-all-45ba385b/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This PowerShell script will publish all projects in Project Server when run with an account that is an administrator in Project Server. This can either be run on demand or set to run on a schedule using the Windows Task Scheduler. If you want all projects to be published, run on demand / set the windows scheduled task to run using the Project Server adminstrator account. The script will only access the projects that the user running the script has permission to. A code snippet can be seen below: $svcPSProxy = New-WebServiceProxy -uri \"http://vm353/pwatest/_vti_bin/PSI/Project.asmx?wsdl\" -useDefaultCredential $EPMTYGUID = [system.guid]::empty $ProjectList = $svcPSProxy.ReadProjectStatus(\"$EPMTYGUID\",\"WorkingStore\",\"\", \"0\").Project | format-table proj_uid -hidetableheaders | out-string -stream foreach ($projectUid in $projectList) { if ($projectUid -ne \"\") { $G = [System.Guid]::NewGuid() $svcPSProxy.QueuePublish(\"$G\", $projectUid, \"true\",\"\")}} The script will need to be updated with the correct PWA URL for the WebServiceProxy. For further details on this script please see the following post: http://pwmather.wordpress.com/2012/05/31/updated-publish-all-projects-in-projectserver-using-powershell-msproject-ps2010-sp2010/ For a JavaScript based version for Project Online / Project Server 2013, see the script below: http://gallery.technet.microsoft.com/scriptcenter/Server-2013-Online-Publish-15215a56 ","date":"2019-12-01","objectID":"/project-server/server-2010-publish-all-45ba385b/server-2010-publish-all-45ba385b/:2:0","tags":["Active Directory","HTML"],"title":"Project Server 2010 / 2013 - Publish all projects","uri":"/project-server/server-2010-publish-all-45ba385b/server-2010-publish-all-45ba385b/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Server 2010 / 2013 - Publish single project by UID Original Technet Description URL Description Download: [Download Link](Download\\PUBLISH BY UID EXAMPLE.PS1) ","date":"2019-12-01","objectID":"/project-server/server-2010-2013-publish-a8772725/server-2010-2013-publish-a8772725/:1:0","tags":["Active Directory","HTML"],"title":"Project Server 2010 / 2013 - Publish single project by UID","uri":"/project-server/server-2010-2013-publish-a8772725/server-2010-2013-publish-a8772725/"},{"categories":["Project Server"],"content":"Output from Technet Gallery Windows Shell Script $svcPSProxy = New-WebServiceProxy -uri \"http://[your PWA project before/default.asmx]/_vti_bin/PSI/Project.asmx?wsdl\" -useDefaultCredential $job = [system.guid]::NewGuid() $svcPSProxy.QueuePublish($job, \"put UID hier e.g. 4A2A5C24-E5EF-4196-A227-0A69DCA6CF8F\", \"true\",\"\") In case you want to publish on project server just a single project by using it PROJECTUID UID, this powershell script is a good one. we used this script to validate effect of publishing on update of some task and project properties in the reporting database. See the script to update your project server instance and project uid. The script uses standard project PSI interface QueuePublish function takes the following parameters Jobuid , projectuid , fullpublish (true or false) , if true it removes previous data in the pubished database ","date":"2019-12-01","objectID":"/project-server/server-2010-2013-publish-a8772725/server-2010-2013-publish-a8772725/:2:0","tags":["Active Directory","HTML"],"title":"Project Server 2010 / 2013 - Publish single project by UID","uri":"/project-server/server-2010-2013-publish-a8772725/server-2010-2013-publish-a8772725/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Server 2010 / 2013 - Publish specified projects Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/server-2010-publish-537857d8/server-2010-publish-537857d8/:1:0","tags":["Active Directory","HTML"],"title":"Project Server 2010 / 2013 - Publish specified projects","uri":"/project-server/server-2010-publish-537857d8/server-2010-publish-537857d8/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This PowerShell script will publish the projects specified in a text file. The projects will be published to Project Server when run with an account that has access to the specified projects in Project Server. This can either be run on demand or set to run on a schedule using the Windows Task Scheduler. The script will only access the projects that the user running the script has permission to. A code snippet can be seen below: $projectList = Get-Content C:\\projectstobepub.txt $svcPSProxy = New-WebServiceProxy -uri \"http://vm353/pwatest/_vti_bin/PSI/Project.asmx?wsdl\" -useDefaultCredential foreach ($project in $projectList) { $EPMTYGUID = [system.guid]::empty $projectUids = $svcPSProxy.ReadProjectStatus(\"$EPMTYGUID\",\"WorkingStore\",$project, \"0\").Project | format-table proj_uid -hidetableheaders | out-string -stream foreach ($projectUid in $projectUids) { if ($projectUid -ne \"\") { $job = [system.guid]::NewGuid() $svcPSProxy.QueuePublish($job, $projectUid, \"true\",\"\") } } } The script will need to be updated with the correct PWA URL for the WebServiceProxy and text file. For further details on this script please see the following post: http://pwmather.wordpress.com/2012/10/22/publish-specified-projects-in-projectserver-using-powershell-msproject-ps2010-sp2010/ ","date":"2019-12-01","objectID":"/project-server/server-2010-publish-537857d8/server-2010-publish-537857d8/:2:0","tags":["Active Directory","HTML"],"title":"Project Server 2010 / 2013 - Publish specified projects","uri":"/project-server/server-2010-publish-537857d8/server-2010-publish-537857d8/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Server 2010 / 2013 High-level Audit Export exampl Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/server-2010-high-level-e9c6ad09/server-2010-high-level-e9c6ad09/:1:0","tags":["Active Directory","HTML"],"title":"Project Server 2010 / 2013 High-level Audit Export exampl","uri":"/project-server/server-2010-high-level-e9c6ad09/server-2010-high-level-e9c6ad09/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This PowerShell script accesses the Project Server queue data and exports this into a text file in the specified location. Execute the script on a daily schedule using the Windows Task Scheduler to capture high-level audit details for Project Server. The script will need to be updated with the correct export location (filename variable) and the correct PWA URL in the WebServiceProxy. A code snippet can be seen below: $Today = Get-Date $Yesterday = $Today.AddDays(-1).ToString(\"yyyy-MM-d\") $Filename = \"C:\\PSAuditExport\\QueueExport-\" $filetype = \".txt\" $svcPSProxy = New-WebServiceProxy -uri \"http://vm353/pwa/_vti_bin/PSI/QueueSystem.asmx?wsdl\" -useDefaultCredential $svcPSProxy.ReadAllJobStatusSimple(\"$Yesterday 00:00:01\", \"$Yesterday 23:59:59\", \"200\", \"0\", \"QueueCompletedTime\" ,\"Ascending\").Status | Export-CSV $Filename$Yesterday$filetype -Delimiter \"|\"  For details on using this script please see the following post: http://pwmather.wordpress.com/2012/03/05/projectserver-2010-2007-high-level-audit-export-via-powershell-msproject-ps2010-epm/ ","date":"2019-12-01","objectID":"/project-server/server-2010-high-level-e9c6ad09/server-2010-high-level-e9c6ad09/:2:0","tags":["Active Directory","HTML"],"title":"Project Server 2010 / 2013 High-level Audit Export exampl","uri":"/project-server/server-2010-high-level-e9c6ad09/server-2010-high-level-e9c6ad09/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Server 2010 Bulk Edit Tool Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/server-2010-bulk-edit-tool-688f4dea/server-2010-bulk-edit-tool-688f4dea/:1:0","tags":["Active Directory","HTML"],"title":"Project Server 2010 Bulk Edit Tool","uri":"/project-server/server-2010-bulk-edit-tool-688f4dea/server-2010-bulk-edit-tool-688f4dea/"},{"categories":["Project Server"],"content":"Output from Technet Gallery Changing custom fields or other project fields for a single project is easy using Project Professional or PWA. Changing the same fields on multiple projects, however, can be a challenge. Using either Project Professional or PWA, each project must be edited individually, making “bulk editing” a tedious and time consuming task. The Bulk Edit Tool solution starter provides a solution for this problem. The solution is accessible via the PWA ribbon in Project Center. Please note, this Bulk Edit tool was relased as part of Solution starter 2010. Since its been rertired and not available on technet site any more, i am uploading the last tested version i am using for others. ","date":"2019-12-01","objectID":"/project-server/server-2010-bulk-edit-tool-688f4dea/server-2010-bulk-edit-tool-688f4dea/:2:0","tags":["Active Directory","HTML"],"title":"Project Server 2010 Bulk Edit Tool","uri":"/project-server/server-2010-bulk-edit-tool-688f4dea/server-2010-bulk-edit-tool-688f4dea/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Server 2010/2013: Delete projects based on SQL query Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/server-20102013-delete-e1e416bc/server-20102013-delete-e1e416bc/:1:0","tags":["Active Directory","HTML"],"title":"Project Server 2010/2013: Delete projects based on SQL query","uri":"/project-server/server-20102013-delete-e1e416bc/server-20102013-delete-e1e416bc/"},{"categories":["Project Server"],"content":"Output from Technet Gallery \u003c# .SYNOPSIS Delete a specified list of projects in Microsoft Project Server 2010 or 2013 .DESCRIPTION The list of projects to be deleted is queried from the Reporting database (project database with 2013) by a query connecting to the standard view MSP_EMPProject_User_View It can be filtered by any column contained in this view After the list of Project UIDs is retrieved the script makes a connection to the PSI Projects WebService to initiate a delete of all the projects. The delete requests enter the Project Server queue and will be executed there. .PARAMETER ProjectServerURL URL of the Project Server instance to be connected to (example: http://projectserver/pwa .PARAMETER DatabaseServer Name of the SQL Server (or database instance) containing the Reporting database (example: SQLSRV1\\INSTANCE1) .PARAMETER ProjectDB Name of the ProjectServer Database (example: PWA_Reporting) .PARAMETER WhereClause WHERE CLAUSE to specify the list of projects to be deleted (optional Parameter). (example: \"WHERE [PROJECT STATUS] = 'active' or [ProjectPercentCompleted] = 100\" (double quotes needed) .EXAMPLE .\\SOLVIN_EasyDeleteProjects.ps1 -ProjectServerURL http://projectserver/pwa -DatabaseServer SQLSRV1 -ProjectDB PWA_Reporting Delete all projects .NOTES You need to have Read permissions to the Project Server Database and Project Server Administrative permissions to run this Script. #\u003e #define parameters PARAM( [parameter(Mandatory=$true)] [string] $ProjectServerURL , [parameter(Mandatory=$true)] [string] $DatabaseServer , [parameter(Mandatory=$true)] [string] $ProjectDB , [string] $WhereClause ) # connect to windows authentication using current username/password $connection= new-object system.data.sqlclient.sqlconnection #Set new object to connect to sql database $connection.ConnectionString =\"server=$DatabaseServer;database=$ProjectDB;trusted_connection=True\" # Connectiongstring setting for local machine database with window authentication Write-host \"connection information:\" $connection #List connection information Write-host \"connect to database successful.\" $connection.open() #Connecting successful #########query drop paths############################################################ $SqlCmd = New-Object System.Data.SqlClient.SqlCommand #setting object to use sql commands $SqlQuery = \"SELECT [ProjectUID],projectname FROM [dbo].[MSP_EpmProject_UserView] puv $WhereClause \" #setting query $SqlCmd.CommandText = $SqlQuery # get query $SqlAdapter = New-Object System.Data.SqlClient.SqlDataAdapter # $SqlAdapter.SelectCommand = $SqlCmd $SqlCmd.Connection = $connection $DataSet = New-Object System.Data.DataSet $SqlAdapter.Fill($DataSet) $connection.Close() $svcPSProxy = New-WebServiceProxy -uri \"$ProjectServerURL/_vti_bin/PSI/Project.asmx?wsdl\" -useDefaultCredential $svcPSProxy foreach ($row in $DataSet.Tables[0]) { if ($row.ItemArray.Count -gt 0) { Write-Host \"Deleting project\" $row[1] $projId = [System.Guid]$row[0] $svcPSProxy.QueueDeleteProjects([System.Guid]::NewGuid() , \"true\", $projId, \"true\") } } On special request of a lady who wants to do some cleaning…. This script can be used to (bulk) delete projects from a Project Server 2010 or 2013 system. List of projects comes out of the SQL database and can be tailored with a SQL query. Project sites will also be deleted. Projects are deleted through the queue from draft and published database/tables. Archive versions will remain untouched. Be careful ! ","date":"2019-12-01","objectID":"/project-server/server-20102013-delete-e1e416bc/server-20102013-delete-e1e416bc/:2:0","tags":["Active Directory","HTML"],"title":"Project Server 2010/2013: Delete projects based on SQL query","uri":"/project-server/server-20102013-delete-e1e416bc/server-20102013-delete-e1e416bc/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Server 2013 / Project Online Publish all projects Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/server-2013-online-publish-15215a56/server-2013-online-publish-15215a56/:1:0","tags":["Active Directory","HTML"],"title":"Project Server 2013 / Project Online Publish all projects","uri":"/project-server/server-2013-online-publish-15215a56/server-2013-online-publish-15215a56/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This JavaScript file can be added to a Project Web App page to enable the user to publish all projects they have access to in one go. This will work for Project Server 2013 and Project Online. A code snippet can be seen below: JavaScript \u003cscript type=\"text/javascript\"\u003e var projContext; var projects; var waitDialog; function GetProjects() { projContext = PS.ProjectContext.get_current(); projects = projContext.get_projects(); projContext.load(projects); projContext.executeQueryAsync(onQuerySucceeded, onQueryFailed); The script does require jQuery and references to SharePoint JavaScript libraries to work - these are detailed on the blog post below. The idea of this script is to create a new page in the Project Web App then add the script to the page via a content editor web part. For details see the blog post below: http://pwmather.wordpress.com/2014/04/17/projectserver-projectonline-publish-all-projects-javascript-jquery-sharepointonline-office365-ps2013/ ","date":"2019-12-01","objectID":"/project-server/server-2013-online-publish-15215a56/server-2013-online-publish-15215a56/:2:0","tags":["Active Directory","HTML"],"title":"Project Server 2013 / Project Online Publish all projects","uri":"/project-server/server-2013-online-publish-15215a56/server-2013-online-publish-15215a56/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Server 2013 add tasks to multiple projects from CSV Fil Original Technet Description URL Description Download: [Download Link](Download\\Project Server 2013-AddNamedTaskstoProjectFromCSV.ps1) ","date":"2019-12-01","objectID":"/project-server/server-2013-add-tasks-to-72c2697a/server-2013-add-tasks-to-72c2697a/:1:0","tags":["Active Directory","HTML"],"title":"Project Server 2013 add tasks to multiple projects from CSV Fil","uri":"/project-server/server-2013-add-tasks-to-72c2697a/server-2013-add-tasks-to-72c2697a/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This borrows from Jim E. Cox’s work. You will need to create an MSDOS CSV File for this (Not a comma delimited file) As is this is designed for only 2 columns Column 1 is the project GUID and Column 2 is the task name. (you must have the GUID of the project like this: Proejct 1: Task 1 Project 1: task 2 Project 2: taks 1 Project 2: task 2 Etc You can add more columns, such as date, if you want other fields. Also note the date field in the tasks. This will create one summary task per project then all subsequent tasks are listed under that. Also this postions the tasks at the end of the project. I started out in my testing with some sleep commands but as you see they are commented out because I ended up not needing them in my environment. I added about 3,000 total tasks into 600 different projects in about an hour. cls \u003c# This borrows from Jim E. Cox's work. You will need to create an MSDOS CSV File for this (Not a comma delimited file) As is this is designed for only 2 columns Column 1 is the project GUID and Column 2 is the task name. (you must have hte GUID of the project You can add more columns if you want other fields. Also note the date field in the tasks. This will create one summary task per project then all subsequent tasks are listed under that. Also this postions the tasks at the end of the project. I started out in my testing with some sleep commands but as you see they are commented out because I ended up not needing them in my environment. I added about 3,000 total tasks into 600 different projects in about an hour. #\u003e #Lets open the CSV (CSV is faser than Excel) $TaskList = Import-CSV \"C:\\test.csv\" $PriorProjGUID = \"\" FOREACH ($Task in $TaskList) { # Get the project GUID from the file. \"ProjectGUID\" is the header name of the column in the CSV File # And we will grab the task name as well since we are here $ProjGUID = $Task.ProjectGUID $TaskName = $Task.TaskName # Lets do this while the project is the same If ($ProjGUID -ne $PriorProjGUID) { #let's save, publish and checkin the project if there is a new one in the list If ($PriorProjGUID -ne \"\") { # Add the above dataset to project and publish and check in $ProjSvcProxy.QueueAddToProject($NewJobGuid, $SessionGUID, $ProjDataSet, $false); $ProjSvcProxy.QueuePublish($NewJobGuid, $PriorProjGuid, \"true\",\"\") ## Start-sleep 20 $ProjSvcProxy.QueueCheckInProject($NewJobGuid, $PriorProjGuid, $false, $SessionGuid, $SessionDescr); } #Let's set the project name to the prior projct name so we can track our loop $PriorProjGUID = $ProjGUID # we will open the project in this seciton first we have to set session variables and the like # Set our variables $SessionGuid = [System.Guid]::NewGuid() $SessionDescr = \"Add tasks session\" #$NewJobGuid = [System.Guid]::NewGuid() $EPMTYGUID = [system.guid]::empty $PWAUrl = “http://msps.itcs.URL.com/pwa” # initiate the PSI Web Services #Project Web Service $ProjSvcURL = $PWAUrl + \"/_vti_bin/PSI/Project.asmx?wsdl\" $ProjSvcProxy = New-WebServiceProxy -uri $ProjSvcURL -useDefaultCredential #-credential $Credential $QSvcUrl = $pwaUrl + \"/_vti_bin/PSI/QueueSystem.asmx?wsdl\" $QSvcProxy = New-WebServiceProxy -uri $QSvcUrl -useDefaultCredential #-credential $Credential # Now let's check the project out $ProjSvcProxy.CheckOutProject(\"$ProjGuid\", $sessionGuid, $SessionDescr); #give it a chance to check out ##Start-sleep 30 # Add tasks. $ProjDataset = New-Object Microsoft.PowerShell.Commands.NewWebserviceProxy.AutogeneratedTypes.WebServiceProxy1_vti_bin_PSI_Project_asmx_wsdl.ProjectDataSet #create a summary task $NewTaskGuid = [System.Guid]::NewGuid() $NewTaskRow1 = $ProjDataSet.Task.NewTaskRow(); $NewTaskRow1.PROJ_UID = $ProjGuid; $NewTaskRow1.TASK_UID = $NewTaskGuid; $NewTaskRow1.Task_IS_SUMMARY = 1; $NewTaskRow1.Task_OUTLINE_LEVEL = 1; $NewTaskRow1.TASK_DUR_FMT = 53; $NewTaskRow1.TASK_NAME = \"EPR-ID: Asset Tasks\"; $NewTaskRow1.Task_DUR_IS_EST = 1; $ProjDataSet.Task.AddTaskRow($NewTaskRow1); } $NewTaskGuid = [System.Guid]::Ne","date":"2019-12-01","objectID":"/project-server/server-2013-add-tasks-to-72c2697a/server-2013-add-tasks-to-72c2697a/:2:0","tags":["Active Directory","HTML"],"title":"Project Server 2013 add tasks to multiple projects from CSV Fil","uri":"/project-server/server-2013-add-tasks-to-72c2697a/server-2013-add-tasks-to-72c2697a/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Server 2013 Audit Export with automated maintenance for multiple PWAs Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/server-2013-audit-export-c2d7f4f3/server-2013-audit-export-c2d7f4f3/:1:0","tags":["Active Directory","HTML"],"title":"Project Server 2013 Audit Export with automated maintenance for multiple PWAs","uri":"/project-server/server-2013-audit-export-c2d7f4f3/server-2013-audit-export-c2d7f4f3/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This script is higly inspired by the sample uploaded by PWMather. It was sent and recommended to me by a Microsoft engineer working on one of our cases. I did however have a few problems with just copying and pasting it to production. Main things that were missing for me were: Automatically detecting the PWAs (we have more than 20 and I didn’t want to add a task for each of them) Automatic export files purging Ensuring exported data completness in case the scheduler task doesn’t run ocasionally As I had to implement those anyway I thought I might share the effect. The script is meant to be run by the Task Scheduler every day. #initial variables $auditExportRootFolder=\"c:\\Logs\\ProjectServer\\QueueAudit\" $wsSuffix=\"/_vti_bin/PSI/QueueSystem.asmx?wsdl\" $ExportFilePrefix=\"QueueAudit-\" $maxRows=10000 $includeDaysOnFirstRun=7 $logRetentionInDays=90 $currentDate=get-date #get current user (meaning the one we select in windows Scheduler to run the task) $scriptUser=\"{0}\\{1}\" -f $env:USERDOMAIN, $env:USERNAME #get list of PWA URL OBJECTS which have certain properties we can use later $pwaUrls=Get-SPProjectWebInstance | % Url #end date will always be yesterday so we can set it for all PWAs $endDate=(get-Date).AddDays(-1).Date $endDateStr=$endDate.ToString(\"yyyy-MM-dd\") #make sure the root folder for logs exists If(!(test-path $auditExportRootFolder)) { New-Item -ItemType Directory -Force -Path $auditExportRootFolder } #process PWAs (at last) foreach ($pwaUrl in $pwaUrls) { #create folder for Export (if necessary) $folderLocalPath=$pwaUrl.Segments[1] $fullFolderPath=\"{0}\\{1}\" -f $auditExportRootFolder, $folderLocalPath If(!(test-path $fullFolderPath)) { New-Item -ItemType Directory -Force -Path $fullFolderPath } # Make sure the account actually has admin rights in the PWA. Those can be lost e.g. due PWA admin error. Grant-SPProjectAdministratorAccess -Url $pwaUrl.AbsoluteUri -UserAccount $scriptUser # This part is tricky. Due to maintenance or temporary server failure there is a risk of the script not being run. We want to make sure that the next iteration will export also missing data. # We prepare initial start date for our export time period. Seems a little redundant but allows skipping few conditions in the code. $startDate=$endDate.AddDays($includeDaysOnFirstRun*-1) #this will change if there are already previous export filed in the PWA's folder #If there is any file we assume it's an export file and that it has interval dates in it's name (yes, I know the saying about assumption and a mother...). $newestExport=Get-ChildItem -Path $fullFolderPath | Sort-Object CreationTime -Descending | Select-Object -First 1 if($newestExport -ne $null) { $fileName=$newestExport.Name $lastCoveredDayDateStr=$fileName.Substring(20,8) $lastCoveredDayDate=[datetime]::ParseExact($lastCoveredDayDateStr,\"yyyyMMdd\",$null) if($lastCoveredDayDate -ne $null) { $startDate=$lastCoveredDayDate.AddDays(1) } } #we proceed only if the end date is not greater than the start date (otherwise it would mean that the script has been run for the second time that day and we've got our parameters wrong anyway). if($startDate -le $endDate) { $startDateStr=$startDate.ToString(\"yyyy-MM-dd\") $webServiceUrl=$pwaUrl.AbsoluteUri+$wsSuffix #adding user to the filename for troubleshooting purposes $filepath=\"{0}\\{1}{2}-{3}-{4}.txt\" -f $fullFolderPath,$ExportFilePrefix,$startDate.ToString(\"yyyyMMdd\"),$endDate.ToString(\"yyyyMMdd\"),$env:USERNAME $svcPSProxy = New-WebServiceProxy -uri $webServiceUrl -useDefaultCredential $svcPSProxy.ReadAllJobStatusSimple(\"$startDateStr 00:00:01\", \"$endDateStr 23:59:59\", $maxRows, \"0\", \"QueueCompletedTime\" ,\"Ascending\").Status | Export-CSV $filepath -Delimiter \",\" } #cleaning older logs $oldLogFiles=get-childitem $fullFolderPath | ? {($currentDate - (get-date $_.LastWriteTime)).TotalDays -gt $logRetentionInDays} foreach($oldLogFile in $oldLogFiles) { $oldLogFile.Delete() } } ","date":"2019-12-01","objectID":"/project-server/server-2013-audit-export-c2d7f4f3/server-2013-audit-export-c2d7f4f3/:2:0","tags":["Active Directory","HTML"],"title":"Project Server 2013 Audit Export with automated maintenance for multiple PWAs","uri":"/project-server/server-2013-audit-export-c2d7f4f3/server-2013-audit-export-c2d7f4f3/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Server 2013 build OLAP Cub Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/server-2013-build-olap-cube-13a4346c/server-2013-build-olap-cube-13a4346c/:1:0","tags":["Active Directory","HTML"],"title":"Project Server 2013 build OLAP Cub","uri":"/project-server/server-2013-build-olap-cube-13a4346c/server-2013-build-olap-cube-13a4346c/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This PowerShell script will fire a cube build job. Using this script will bypass the need for users to access Central Admin to build an OLAP cube. The user running the script will still require the correct Project Server permissions to build a cube. A code snippet can be seen below: $cubeGUID = \"00007829-4392-48b3-b533-5a5a4797e3c9\" $svcPSProxy.BuildOlapDatabase($cubeGUID) This script also works for Project Server 2010. The script will need to be updated with the correct PWA URL for the WebServiceProxy and the correct cube GUID. For further details on this script please see the following post: http://pwmather.wordpress.com/2014/02/18/projectserver-2013-build-olap-cube-via-powershell-sp2013-ppm-ps2013/ ","date":"2019-12-01","objectID":"/project-server/server-2013-build-olap-cube-13a4346c/server-2013-build-olap-cube-13a4346c/:2:0","tags":["Active Directory","HTML"],"title":"Project Server 2013 build OLAP Cub","uri":"/project-server/server-2013-build-olap-cube-13a4346c/server-2013-build-olap-cube-13a4346c/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Server 2013: delete unneeded project versions from archiv Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/server-2013-delete-1cc1b567/server-2013-delete-1cc1b567/:1:0","tags":["Active Directory","HTML"],"title":"Project Server 2013: delete unneeded project versions from archiv","uri":"/project-server/server-2013-delete-1cc1b567/server-2013-delete-1cc1b567/"},{"categories":["Project Server"],"content":"Output from Technet Gallery \u003c# .SYNOPSIS Delete a specified list of projects in Microsoft Project Server 2013 .DESCRIPTION The list of projects to be deleted is queried from the Archive and Reporting database by a query connecting to the standard view MSP_EMPProject_User_View It can be filtered by any column contained in this view or a column in the Archive Projects table (e.g. date of the version) After the list of Project UIDs is retrieved the script makes a connection to the PSI Projects WebService to initiate a delete of all the projects. The delete requests enter the Project Server queue and will be executed there. .PARAMETER ProjectServerURL URL of the Project Server instance to be connected to (example: http://projectserver/pwa .PARAMETER DatabaseServer Name of the SQL Server (or database instance) containing the Reporting database (example: SQLSRV1\\INSTANCE1) .PARAMETER ReportingDB Name of the ProjectServer Database (example: PWA_Reporting) .PARAMETER WhereClause WHERE CLAUSE to specify the list of projects to be deleted (optional Parameter). (example: \"WHERE [PROJECT STATUS] = 'active' or [ProjectPercentCompleted] = 100\" (double quotes needed) .EXAMPLE .\\SOLVIN_EasyDeleteArchive.ps1 -ProjectServerURL http://projectserver/pwa -DatabaseServer SQLSRV1 -ReportingDB PWA_Reporting Delete all archive versions .EXAMPLE .\\SOLVIN_EasyDeleteArchive.ps1 -ProjectServerURL http://projectserver/pwa -DatabaseServer SQLSRV1 -ReportingDB PWA_Reporting -WhereClause \"WHERE vp.mod_date \u003c'2010-01-01'\" Delete all versions from before that date .NOTES You need to have Read permissions to the Project Server Database and Project Server Administrative permissions to run this Script. #\u003e #define parameters PARAM( [parameter(Mandatory=$true)] [string] $ProjectServerURL , [parameter(Mandatory=$true)] [string] $DatabaseServer , [parameter(Mandatory=$true)] [string] $ReportingDB , [string] $WhereClause ) # connect to windows authentication using current username/password $connection= new-object system.data.sqlclient.sqlconnection #Set new object to connect to sql database $connection.ConnectionString =\"server=$DatabaseServer;database=$ReportingDB;trusted_connection=True\" # Connectiongstring setting for local machine database with window authentication Write-host \"connection information:\" $connection #List connection information Write-host \"connect to database successful.\" $connection.open() #Connecting successful ##################################################################### $SqlCmd = New-Object System.Data.SqlClient.SqlCommand #setting object to use sql commands $SqlQuery = \"SELECT [ProjectUID],proj_uid,projectname,PROJ_VERSION_DATE FROM [dbo].[MSP_EpmProject_UserView] puv inner join ver.msp_projects vp on puv.projectuid=vp.proj_version_uid $WhereClause \" #setting query $SqlCmd.CommandText = $SqlQuery # get query $SqlAdapter = New-Object System.Data.SqlClient.SqlDataAdapter # $SqlAdapter.SelectCommand = $SqlCmd $SqlCmd.Connection = $connection $DataSet = New-Object System.Data.DataSet $SqlAdapter.Fill($DataSet) $connection.Close() $svcPSProxy = New-WebServiceProxy -uri \"$ProjectServerURL/_vti_bin/PSI/Archive.asmx?wsdl\" -useDefaultCredential $svcPSProxy foreach ($row in $DataSet.Tables[0]) { if ($row.ItemArray.Count -gt 0) { Write-Host \"Deleting project\" $row[2] \"version from \" $row[3] #parameters are documented in wrong order. we need to have the archive id first and then the project id $projId = [System.Guid]$row[1] $archiveId = [System.Guid]$row[0] $svcPSProxy.QueueDeleteArchivedProject([System.Guid]::NewGuid() , $projId, $archiveId) } } It is nice to be able to hold 20 versions of running projects in the archive tables as a backup. But nobody needs that for projects that have long been closed. Cleaning up unnecessary versions manually is not much fun. You can use the attached script to specify the list of versions to be deleted by a SQL query and pass it to the PSI webservice to delete the versions from the system. ","date":"2019-12-01","objectID":"/project-server/server-2013-delete-1cc1b567/server-2013-delete-1cc1b567/:2:0","tags":["Active Directory","HTML"],"title":"Project Server 2013: delete unneeded project versions from archiv","uri":"/project-server/server-2013-delete-1cc1b567/server-2013-delete-1cc1b567/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Server 2013: restore projects from archive databas Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/server-2013-restore-2f4b686b/server-2013-restore-2f4b686b/:1:0","tags":["Active Directory","HTML"],"title":"Project Server 2013: restore projects from archive databas","uri":"/project-server/server-2013-restore-2f4b686b/server-2013-restore-2f4b686b/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This script was created as a fix for the issue of lost custom field values with projects migrated from Project Server 2010 after update to March 2015 PU (see: https://social.technet.microsoft.com/Forums/projectserver/en-US/040f1f3b-3214-4f5f-89c3-a73ee1421d94/project-custom-field-values-lost-on-save-with-march-2015-pu-for-project-professional-2013?forum=projserv2010setup) One workaround to prevent a project from loosing its custom field values when it is edited next time is to get the last version back from the archive (ver.) tables. This is in fact probably the same information that is also contained in the draft tables, but getting it from a backup seems to prevent the issue. But you need to restore each project and get its newest version. Something that cries for a script as the GUI is not the best….. I use SQL to query for the newest version of each project and do some more selections if needed. Then I call the PSI to restore that version. You could publish the projects automatically using another script that can be found here. Code of the Powershell: \u003c# .SYNOPSIS Restores a specified list of projects from archive to draft tables in Microsoft Project Server 2013 .DESCRIPTION The list of projects to be restored is queried from the Project Server database by a query connecting to the standard ver.msp_projects table. It can be filtered by any column contained in the Archive Projects table (e.g. date of the version) After the list of Project UIDs is retrieved the script makes a connection to the PSI Projects WebService to initiate a restore of all the projects. The restore requests enter the Project Server queue and will be executed there. .PARAMETER ProjectServerURL URL of the Project Server instance to be connected to (example: http://projectserver/pwa .PARAMETER DatabaseServer Name of the SQL Server (or database instance) containing the database (example: SQLSRV1\\INSTANCE1) .PARAMETER ReportingDB Name of the ProjectServer Database (example: PWA_Reporting) .PARAMETER WhereClause WHERE CLAUSE to specify the list of projects to be restored (optional Parameter). (example: \"WHERE proj_name like '%Test%' \" (double quotes needed) .EXAMPLE .\\SOLVIN_EasyRestoreFromArchive.ps1 -ProjectServerURL http://projectserver/pwa -DatabaseServer SQLSRV1 -ReportingDB PWA_Reporting -WhereClause \"WHERE proj_name like '%Test%'\" Restore the last version of all projects containing \"Test\" in the name .EXAMPLE .\\SOLVIN_EasyRestoreFromArchive.ps1 -ProjectServerURL http://projectserver/pwa -DatabaseServer SQLSRV1 -ReportingDB PWA_Reporting -WhereClause \"WHERE maxdate \u003c'2015-01-01'\" Restore the last version of all projects that have been last written to archive before that date .NOTES You need to have Read permissions to the Project Server Database and Project Server Administrative permissions to run this Script. Integrated SQL query will read only the newest version of each project and will limit to projects that still exist in the draft database. Can be modified as needed. #\u003e #define parameters PARAM( [parameter(Mandatory=$true)] [string] $ProjectServerURL , [parameter(Mandatory=$true)] [string] $DatabaseServer , [parameter(Mandatory=$true)] [string] $ReportingDB , [string] $WhereClause ) # connect to windows authentication using current username/password $connection= new-object system.data.sqlclient.sqlconnection #Set new object to connect to sql database $connection.ConnectionString =\"server=$DatabaseServer;database=$ReportingDB;trusted_connection=True\" # Connectiongstring setting for local machine database with window authentication Write-host \"connection information:\" $connection #List connection information Write-host \"connect to database successful.\" $connection.open() #Connecting successful ##################################################################### $SqlCmd = New-Object System.Data.SqlClient.SqlCommand #setting object to use sql commands $SqlQuery = \"select archiv.proj_name,max.maxdate,max.proj_version_uid,ar","date":"2019-12-01","objectID":"/project-server/server-2013-restore-2f4b686b/server-2013-restore-2f4b686b/:2:0","tags":["Active Directory","HTML"],"title":"Project Server 2013: restore projects from archive databas","uri":"/project-server/server-2013-restore-2f4b686b/server-2013-restore-2f4b686b/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Server 2016 Configurator Script (Auto Installer) Original Technet Description URL Description Download: [Download Link](Download\\Project Server 2016 Configurator Script.zip) ","date":"2019-12-01","objectID":"/project-server/powershell-script-to-9993a79d/powershell-script-to-9993a79d/:1:0","tags":["Active Directory","HTML"],"title":"Project Server 2016 Configurator Script (Auto Installer)","uri":"/project-server/powershell-script-to-9993a79d/powershell-script-to-9993a79d/"},{"categories":["Project Server"],"content":"Output from Technet Gallery PowerShell Script to Configure Project Server 2016 ","date":"2019-12-01","objectID":"/project-server/powershell-script-to-9993a79d/powershell-script-to-9993a79d/:2:0","tags":["Active Directory","HTML"],"title":"Project Server 2016 Configurator Script (Auto Installer)","uri":"/project-server/powershell-script-to-9993a79d/powershell-script-to-9993a79d/"},{"categories":["Project Server"],"content":"Introduction **Project Server 2016 Configurator Script (Auto Installer)” **will help you to configure the Project Server 2016 easily through the below functions. #1 - Register Managed Accounts. #2 - Enable Project Server 2016 License. #3 - Create Project Server Application Service Application Pool. #4 - Create a Project Server 2016 service application. #5 - Create a web Application. #6 - Create Top Level site Collection. #7 - Lock Down web application Content Database. #8 - Create a PWA Content Database. #9 - Lock Down PWA Content Database. #10 - Provision the PWA Site Collection. #11 - Enable PWA FeatureStart PWA Instance. #12 - Start PWA Instance. ","date":"2019-12-01","objectID":"/project-server/powershell-script-to-9993a79d/powershell-script-to-9993a79d/:3:0","tags":["Active Directory","HTML"],"title":"Project Server 2016 Configurator Script (Auto Installer)","uri":"/project-server/powershell-script-to-9993a79d/powershell-script-to-9993a79d/"},{"categories":["Project Server"],"content":"Prerequisites You have already installed SharePoint Server 2016 Enterprise Edition. You have created the below service accounts: PSWebAppPool** **is a domain user that used to run the application pool for the web application that will host the PWA site collection. PSSrvAppPool** **is a domain user that used to run the associated application pool of the project server service application. For more details check Project Server 2016 Configuration. PowerShell Script to Configure Project Server 2016. ","date":"2019-12-01","objectID":"/project-server/powershell-script-to-9993a79d/powershell-script-to-9993a79d/:4:0","tags":["Active Directory","HTML"],"title":"Project Server 2016 Configurator Script (Auto Installer)","uri":"/project-server/powershell-script-to-9993a79d/powershell-script-to-9993a79d/"},{"categories":["Project Server"],"content":"Functions #1 - Register Managed Accounts. #2 - Enable Project Server 2016 License. ** ** #3 - Create Project Server Application Service Application Pool. ** ** #4 - Create a Project Server 2016 service application. ** ** #5 - Create a web Application. ** ** #6 - Create Top Level site Collection. ** ** ** ** #7 - Lock Down web application Content Database. ** ** #8 - Create a PWA Content Database. ** ** #9 - Lock Down PWA Content Database. #10 - Provision the PWA Site Collection. #11 - Enable PWA FeatureStart PWA Instance. #12 - Start PWA Instance ** ** ","date":"2019-12-01","objectID":"/project-server/powershell-script-to-9993a79d/powershell-script-to-9993a79d/:5:0","tags":["Active Directory","HTML"],"title":"Project Server 2016 Configurator Script (Auto Installer)","uri":"/project-server/powershell-script-to-9993a79d/powershell-script-to-9993a79d/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Server 2016: PowerShell to publish projects using SQL and RES Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/server-2016-powershell-to-50d7d34c/server-2016-powershell-to-50d7d34c/:1:0","tags":["Active Directory","HTML"],"title":"Project Server 2016: PowerShell to publish projects using SQL and RES","uri":"/project-server/server-2016-powershell-to-50d7d34c/server-2016-powershell-to-50d7d34c/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This version of a publish projects script is targeted for a Project Server 2016 on premises instance. It will query the SQL database for a list of projects that should be published. I use SQL for easy selection of projects using various parameters like custom fields or last published date. Then the script will checkout and publish each of the projects using REST webservice calls. This variant is necessary because the PSI projects webservice was removed in version 2016. Problem is that while we had been able to publish a project using PSI no matter if it had been checked out or not, this is not possible using REST (or I have not found how ….). So we use only projects that are currently checked in. Credit goes to Pranav Sharma for his great guide at http://pranavsharma.com/blog ","date":"2019-12-01","objectID":"/project-server/server-2016-powershell-to-50d7d34c/server-2016-powershell-to-50d7d34c/:2:0","tags":["Active Directory","HTML"],"title":"Project Server 2016: PowerShell to publish projects using SQL and RES","uri":"/project-server/server-2016-powershell-to-50d7d34c/server-2016-powershell-to-50d7d34c/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Server Corrupt Enterprise Resources / Cannot Publish a Resour Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/project-server/server-corrupt-enterprise-6e8325fe/server-corrupt-enterprise-6e8325fe/:1:0","tags":["Active Directory","HTML"],"title":"Project Server Corrupt Enterprise Resources / Cannot Publish a Resour","uri":"/project-server/server-corrupt-enterprise-6e8325fe/server-corrupt-enterprise-6e8325fe/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This is issue related to enterprise resources. If you select a resource in PWA and open it in Project Professional you cannot save these resources or publish. You will see a message “Internal Error” or similar for the resources. Other symptoms the problem resources do not have a callendar assigned if you query resources in the reporting database you will see it is missing workhours in the assignment by day table can differ from assignment table for the same task and single resourse if you open a project with such a resource you get a message that says a resource is not an enterprise resource, and it will be coverted to local one. When you publish the project you get a message, a local resource does exist, would you like to confert a local resource to enterprise one. you can experience low project server performance by some project however I am not sure it is related to this issue for 100% First you can diagnose the problem by running the first query on **PUBLISHED **database. If you see any rows, you have this problem. SQL SELECT RES_UID from msp_resources R left join MSP_CALENDARS C on R.RES_UID=C.CAL_UID where C.CAL_UID is null For unknown reason some resources can miss a calendar what leads to the described problem. The second query will insert the missing calendar records SQL SELECT RES_UID , null , (Select CAL_UID from msp_calendars where CAL_IS_STANDARD_CAL=1) as CAL_UID ,0,null,null,0,null,null,'2014-11-06 18:48:42.290','2014-11-06 18:48:42.290',2,9,2,9,1,1 from msp_resources R left join MSP_CALENDARS C on R.RES_UID=C.CAL_UID where C.CAL_UID is null ","date":"2019-12-01","objectID":"/project-server/server-corrupt-enterprise-6e8325fe/server-corrupt-enterprise-6e8325fe/:2:0","tags":["Active Directory","HTML"],"title":"Project Server Corrupt Enterprise Resources / Cannot Publish a Resour","uri":"/project-server/server-corrupt-enterprise-6e8325fe/server-corrupt-enterprise-6e8325fe/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Server Project Information displayed on the Project Si Original Technet Description URL Description Download: [Download Link](Download\\project information on project site.js) ","date":"2019-12-01","objectID":"/project-server/server-information-ab10fd63/server-information-ab10fd63/:1:0","tags":["Active Directory","HTML"],"title":"Project Server Project Information displayed on the Project Si","uri":"/project-server/server-information-ab10fd63/server-information-ab10fd63/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This JavaScript file displays the project level fields on the associated Project Site in Project Server 2013 / Project Online. This script will display the following default fields: Project Name Project Description Project Owner % Complete Work Cost It also displays two custom fields: Programme RAG PM Status - based on a lookup table with the following values: “On schedule [Green]”, “Slipping but can mitigate [Amber]” and “Slipped and cannot mitigate [Red]” For the script to work “out of the box” you will need to add those fields to your Project Server / Project Online config, otherwise edit the script to remove those fields and associated code or replace those fields / modify the code with fields of your own. A code snippet can be seen below: JavaScript \u003cscript type=\"text/javascript\"\u003e var ProjectUID; ExecuteOrDelayUntilScriptLoaded(getProjectUIDProperty, \"sp.js\"); function getProjectUIDProperty() { var ctx = new SP.ClientContext.get_current(); this.web = ctx.get_web(); Example outputs can be seen below: Another image: The blog post below details how to use the script and highlights parts of the script that would need to be edited for your own custom fields etc. http://pwmather.wordpress.com/2014/06/10/supporting-post-for-projectserver-2013-projectonline-project-fields-displayed-on-project-site-javascript-jquery/ ","date":"2019-12-01","objectID":"/project-server/server-information-ab10fd63/server-information-ab10fd63/:2:0","tags":["Active Directory","HTML"],"title":"Project Server Project Information displayed on the Project Si","uri":"/project-server/server-information-ab10fd63/server-information-ab10fd63/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Server Project Milestones displayed on the Project Si Original Technet Description URL Description Download: [Download Link](Download\\project milestones on project site.js) ","date":"2019-12-01","objectID":"/project-server/server-milestones-f8be71b8/server-milestones-f8be71b8/:1:0","tags":["Active Directory","HTML"],"title":"Project Server Project Milestones displayed on the Project Si","uri":"/project-server/server-milestones-f8be71b8/server-milestones-f8be71b8/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This JavaScript file displays the project milestones on the associated Project Site in Project Server 2013 / Project Online. The script will display the Milestone name, Finish Date and % complete. A code snippet can be seen below: JavaScript \u003cscript type=\"text/javascript\"\u003e var ProjectUID; ExecuteOrDelayUntilScriptLoaded(getProjectUIDProperty, \"sp.js\"); function getProjectUIDProperty() { var ctx = new SP.ClientContext.get_current(); The script does require some jQuery libraries to work - these are detailed on the blog post below. The idea of this script is to add the script to the project site via a content editor web part. For details see the blog post below: http://pwmather.wordpress.com/2014/05/12/projectserver-project-milestones-on-the-project-site-projectonline-ps2013-sharepoint-javascript-jquery-sp2013-office365/ The output can be seen below: ","date":"2019-12-01","objectID":"/project-server/server-milestones-f8be71b8/server-milestones-f8be71b8/:2:0","tags":["Active Directory","HTML"],"title":"Project Server Project Milestones displayed on the Project Si","uri":"/project-server/server-milestones-f8be71b8/server-milestones-f8be71b8/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Server Queue Monitor Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/server-queue-monitor-01bcdb74/server-queue-monitor-01bcdb74/:1:0","tags":["Active Directory","HTML"],"title":"Project Server Queue Monitor","uri":"/project-server/server-queue-monitor-01bcdb74/server-queue-monitor-01bcdb74/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This script can be used as a scheduled task to monitor the Project Server Job Queue for unsuccessful jobs. The admin will receive an email when a minimum number of unsuccessful jobs is reached. This allows a Project Server admin to be notified of any issues with the queue without having to manually check in PWA. More details on my blog: https://smsagent.wordpress.com/2015/01/06/monitoring-the-project-server-job-queue-with-powershell/ !UPDATE! 20-Jan-2015. Updated the SQL query to also query for jobs without a completion date, as these can indicate a problem with the queue. ","date":"2019-12-01","objectID":"/project-server/server-queue-monitor-01bcdb74/server-queue-monitor-01bcdb74/:2:0","tags":["Active Directory","HTML"],"title":"Project Server Queue Monitor","uri":"/project-server/server-queue-monitor-01bcdb74/server-queue-monitor-01bcdb74/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Server Risks and Issues on a Project Detail Pag Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/server-risks-and-issues-on-65dcbe0e/server-risks-and-issues-on-65dcbe0e/:1:0","tags":["Active Directory","HTML"],"title":"Project Server Risks and Issues on a Project Detail Pag","uri":"/project-server/server-risks-and-issues-on-65dcbe0e/server-risks-and-issues-on-65dcbe0e/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This JavaScript file will display the assiciated Risks and Issues on a Project Detail Page in Project Server 2013 / Project Online. By default the script only uses the default columns from the Project Server / Project Online Issues and Risks Project Site lists so that the script will work for all Project Server 2013 / Project Online deployments. The script can easily be updated to include other columns if needed. A code snippet can be seen below: JavaScript function GetProjects() { var projContext = PS.ProjectContext.get_current(); projects = projContext.get_projects(); projContext.load(projects, 'Include(Name, Id, ProjectSiteUrl)'); projContext.executeQueryAsync(onQuerySucceeded, onQueryFailed); } function onQuerySucceeded(sender, args) { The script does require some jQuery libraries to work - these are detailed on the blog post below. The idea of this script is to create a new Project Detail Page then add the script to the page via a content editor web part. For details see the blog post below: http://pwmather.wordpress.com/2014/04/11/want-to-see-risks-and-issues-on-a-projectonline-projectserver-project-detail-page-ps2013-sharepointonline-sp2013-office365-javascript-jquery/ ","date":"2019-12-01","objectID":"/project-server/server-risks-and-issues-on-65dcbe0e/server-risks-and-issues-on-65dcbe0e/:2:0","tags":["Active Directory","HTML"],"title":"Project Server Risks and Issues on a Project Detail Pag","uri":"/project-server/server-risks-and-issues-on-65dcbe0e/server-risks-and-issues-on-65dcbe0e/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Server: Administrative backup on a custom schedul Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/server-administrative-a2cbaa40/server-administrative-a2cbaa40/:1:0","tags":["Active Directory","HTML"],"title":"Project Server: Administrative backup on a custom schedul","uri":"/project-server/server-administrative-a2cbaa40/server-administrative-a2cbaa40/"},{"categories":["Project Server"],"content":"Output from Technet Gallery Project Server achives the projects on a daily basis. One particular project is archived only if it has been updated since previous archive. There are situations where you may want your archive/administrative backup to run on weekly/monthly basis and to include all projects (no matter if they have been changed) and that’s what the script does. The script checks uf today’s date has been defined in the archive schedule list and, if so, updates a text custom field for all projects and then archives the projects. Only projects are updated (no sub-projects etc) but these can be included as well. The script will throw errors if some of the projects are already check out or are in visibility mode. The solution for the checked out projects would be to combine this script with Chritoph’s force check in of all checked out projects ","date":"2019-12-01","objectID":"/project-server/server-administrative-a2cbaa40/server-administrative-a2cbaa40/:2:0","tags":["Active Directory","HTML"],"title":"Project Server: Administrative backup on a custom schedul","uri":"/project-server/server-administrative-a2cbaa40/server-administrative-a2cbaa40/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Server: PowerShell script to force a checkin of all checkedout projects Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/server-powershell-script-981812c2/server-powershell-script-981812c2/:1:0","tags":["Active Directory","HTML"],"title":"Project Server: PowerShell script to force a checkin of all checkedout projects","uri":"/project-server/server-powershell-script-981812c2/server-powershell-script-981812c2/"},{"categories":["Project Server"],"content":"Output from Technet Gallery .\\SOLVIN_EasyCheckin.ps1 -ProjectServerURL http://projectserver/pwa -DatabaseServer SQLSRV1 -DraftDB PWA_Draft The attached script reads all checkedout projects from the draft database and sends checkin requests to the specified Project Server instance. Example: .\\SOLVIN_EasyCheckin.ps1 -ProjectServerURL http://projectserver/pwa -DatabaseServer SQLSRV1 -DraftDB PWA_Draft If you want to use it with Project Server 2013, you only need to change this SQL query inside the script SELECT [Proj_UID] FROM [dbo].[MSP_projects] WHERE proj_checkoutby is not null and proj_type in (0,5,6) to SELECT [Proj_UID] FROM [draft].[MSP_projects] WHERE proj_checkoutby is not null and proj_type in (0,5,6) and run the job using the Project Server 2013 databaase for the -DraftDB parameter. Christoph Mülder Project Management Consultant, MCSE, MCT SOLVIN information management GmbH ","date":"2019-12-01","objectID":"/project-server/server-powershell-script-981812c2/server-powershell-script-981812c2/:2:0","tags":["Active Directory","HTML"],"title":"Project Server: PowerShell script to force a checkin of all checkedout projects","uri":"/project-server/server-powershell-script-981812c2/server-powershell-script-981812c2/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Spend Repor Original Technet Description URL Description Download: [Download Link](Download\\Project Spend Report.zip) ","date":"2019-12-01","objectID":"/project-server/spend-report-86e15e11/spend-report-86e15e11/:1:0","tags":["Active Directory","HTML"],"title":"Project Spend Repor","uri":"/project-server/spend-report-86e15e11/spend-report-86e15e11/"},{"categories":["Project Server"],"content":"Output from Technet Gallery The Contoso Project Spend Report User Guide walks you through using the Project Spend Report particularly the use of a key concept – a unifying Expense Code, to track Project Total Actual Cost. The Total Actual Cost is then categorized into its component costs by project work alongside sustainment and common services activities maintained in associated projects in lieu of Administrative Time and Timesheet entries in order to facilitate cost categorization by Expense Code. The Contoso Project Spend Report Source Code defines the requisite custom data configuration to drive the data categorization requirements of the Project Spend Report. It also describes how to add the Project Spend Report to the Project Server 2010 v2 Demo Virtual Machine. The Project Spend Report and supporting files are provided in this download. The Project Server 2010 v2 Demo VM can be downloaded from the Download Microsoft Project Server 2010 page on the TechNet Evaluation site. The Project Spend Report was created by Emmanuel Fadullon, a Principal Consultant for Microsoft Consulting Services. ","date":"2019-12-01","objectID":"/project-server/spend-report-86e15e11/spend-report-86e15e11/:2:0","tags":["Active Directory","HTML"],"title":"Project Spend Repor","uri":"/project-server/spend-report-86e15e11/spend-report-86e15e11/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Project Work by Day Power BI Exampl Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/work-by-day-power-bi-6d1b71f4/work-by-day-power-bi-6d1b71f4/:1:0","tags":["Active Directory","HTML"],"title":"Project Work by Day Power BI Exampl","uri":"/project-server/work-by-day-power-bi-6d1b71f4/work-by-day-power-bi-6d1b71f4/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This Power BI template shows an example for reporting on Project for the Web assignment work day by day. Project for the Web is Microsoft’s Office 365 Project application that is built on the CDS. The report connections will need to be updated to access the target Project CDS environment. Set the cdsUrl parameter to the default Dynamics CDS org as this is where Project is deployed. To find the correct URL access Dynamics homepage (home.dynamics.com) and access Project, the URL need will similar to this https://orgXXXXXXXXX.dynamics.com. The account used as the data source will need read access to the entities used in the report pack: Bookable Resource Project Project Task Resource Assignment Create a new access role and assign to the user account used to access the report as required. For deatils on this functional report, see the blog post here: https://pwmather.wordpress.com/2020/03/06/projectfortheweb-example-powerbi-report-to-show-planned-work-day-by-day-workmanagement-msproject-ppm-powerplatform-msdyn365-cds/ ","date":"2019-12-01","objectID":"/project-server/work-by-day-power-bi-6d1b71f4/work-by-day-power-bi-6d1b71f4/:2:0","tags":["Active Directory","HTML"],"title":"Project Work by Day Power BI Exampl","uri":"/project-server/work-by-day-power-bi-6d1b71f4/work-by-day-power-bi-6d1b71f4/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Protecting Baseline Fields in Proj Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/protecting-baseline-fields-514f6345/protecting-baseline-fields-514f6345/:1:0","tags":["Active Directory","HTML"],"title":"Protecting Baseline Fields in Proj","uri":"/project-server/protecting-baseline-fields-514f6345/protecting-baseline-fields-514f6345/"},{"categories":["Project Server"],"content":"Output from Technet Gallery Baseline refers to approved estimates. After you have set the baseline in Project, the approved estimates can be displayed by inserting the Baseline fields such as Baseline Start, Baseline Finish, Baseline Work, Baseline Cost and Baseline Duration. Depending on the view these columns are inserted, Project can either display the approved estimates of tasks, resources or assignments. Project does not have feature to lock the approved estimates. You can change the baseline fields and Project doesn’t stop you from doing that. A better solution is capture the event and having VBA handlers for it. If you user changes the task related fields, the event **ProjectBeforeTaskChange **is fired and writing an event handler to cancel the change if done on the Baseline fields will protect the Baseline Fields. A code snippet can be seen below (full code in the download): Visual Basic Public WithEvents App As Application Private Sub App_ProjectBeforeAssignmentChange(ByVal asg As Assignment, ByVal Field As PjAssignmentField, ByVal NewVal As Variant, Cancel As Boolean) Select Case Field Case pjAssignmentBaselineStart Cancel = True Case pjAssignmentBaselineFinish Cancel = True Case pjAssignmentBaselineWork Cancel = True Case pjAssignmentBaselineCost Cancel = True End Select End Sub Private Sub App_ProjectBeforeResourceChange(ByVal res As Resource, ByVal Field As PjField, ByVal NewVal As Variant, Cancel As Boolean) Select Case Field  You can read more about the usage of these handlers and code in this blog: https://bsaiprasad.wordpress.com/2014/11/05/protecting-baseline-fields/ ","date":"2019-12-01","objectID":"/project-server/protecting-baseline-fields-514f6345/protecting-baseline-fields-514f6345/:2:0","tags":["Active Directory","HTML"],"title":"Protecting Baseline Fields in Proj","uri":"/project-server/protecting-baseline-fields-514f6345/protecting-baseline-fields-514f6345/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Provision Project Server 2016 Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/provision-server-2016-72debf0e/provision-server-2016-72debf0e/:1:0","tags":["Active Directory","HTML"],"title":"Provision Project Server 2016","uri":"/project-server/provision-server-2016-72debf0e/provision-server-2016-72debf0e/"},{"categories":["Project Server"],"content":"Output from Technet Gallery Provisioning project server is not as easily as it was in the past. SharePoint Central does not include a menu option in project servers to create, edit and remove a PWA site. The PowerShell scripts are examples of several ways to provision project server 2016. PowerShell shows several ways to provision from the ROOT or multiple PWA sites such as PWA, PWA2 and PWAOOB. There is also a script to show what PWA sites have been provisioned and finally a powershell command to remove a provision site. ","date":"2019-12-01","objectID":"/project-server/provision-server-2016-72debf0e/provision-server-2016-72debf0e/:2:0","tags":["Active Directory","HTML"],"title":"Provision Project Server 2016","uri":"/project-server/provision-server-2016-72debf0e/provision-server-2016-72debf0e/"},{"categories":["Printing"],"content":"Original Links Original Technet URL PS Add Printer Por Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/fc636246-c4a4-4aa1-b25d-ce2449b28a05/fc636246-c4a4-4aa1-b25d-ce2449b28a05/:1:0","tags":["Active Directory","HTML"],"title":"PS Add Printer Por","uri":"/printing/printer-ports-and-printer-drivers/fc636246-c4a4-4aa1-b25d-ce2449b28a05/fc636246-c4a4-4aa1-b25d-ce2449b28a05/"},{"categories":["Printing"],"content":"Output from Technet Gallery This script adds a TCP / IP Printer port # ------------------------------------------------------------------------ # NAME: AddPrinterPort.ps1 # AUTHOR: ed wilson, Microsoft # DATE: 10/23/2009 # # KEYWORDS: wmi, printing, printer ports and printer drivers # # COMMENTS: This script uses the wmi class accelerator # to create a new tcp / ip printer port on a local comptuer. # To use you will need to modify the ip address of the port # # ------------------------------------------------------------------------ $ip = \"10.0.0.10\" $port = [wmiclass]\"Win32_TcpIpPrinterPort\" $port.psbase.scope.options.EnablePrivileges = $true $newPort = $port.CreateInstance() $newport.name = \"IP_$ip\" $newport.Protocol = 1 $newport.HostAddress = $ip $newport.PortNumber = \"9100\" $newport.SnmpEnabled = $false $newport.Put() ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/fc636246-c4a4-4aa1-b25d-ce2449b28a05/fc636246-c4a4-4aa1-b25d-ce2449b28a05/:2:0","tags":["Active Directory","HTML"],"title":"PS Add Printer Por","uri":"/printing/printer-ports-and-printer-drivers/fc636246-c4a4-4aa1-b25d-ce2449b28a05/fc636246-c4a4-4aa1-b25d-ce2449b28a05/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL PS script to check if a Project is not Published and act accordingly Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/ps-script-to-check-if-a-is-658eb260/ps-script-to-check-if-a-is-658eb260/:1:0","tags":["Active Directory","HTML"],"title":"PS script to check if a Project is not Published and act accordingly","uri":"/project-server/ps-script-to-check-if-a-is-658eb260/ps-script-to-check-if-a-is-658eb260/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This PowerShell script uses the Project Server Interface (PSI), that is available from Project Server 2003 and future versions (2007, 2010, 2013, Online), to check if the Project Plan is Saved and Published or just only Saved. It does this comparing the column PROJ_LAST_SAVED from datasets retrieved from the Publish and Draft databases, or on newer versions from Publish and Draft Schemas of the Database. Since this script uses PSI to obtain the data, is fully supported in terms of upgrades. When the script finds a Project Plan out of sync it will trigger an alert for the administrator. Can be run from the Customer Machine or from the Server. This script is important to run before any operation to ensure that all changes are on the Publish Database. ","date":"2019-12-01","objectID":"/project-server/ps-script-to-check-if-a-is-658eb260/ps-script-to-check-if-a-is-658eb260/:2:0","tags":["Active Directory","HTML"],"title":"PS script to check if a Project is not Published and act accordingly","uri":"/project-server/ps-script-to-check-if-a-is-658eb260/ps-script-to-check-if-a-is-658eb260/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Publish All Projects in Project Online using PowerShell Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/publish-all-projects-in-ad8ee80e/publish-all-projects-in-ad8ee80e/:1:0","tags":["Active Directory","HTML"],"title":"Publish All Projects in Project Online using PowerShell","uri":"/project-server/publish-all-projects-in-ad8ee80e/publish-all-projects-in-ad8ee80e/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This PowerShell script publishes all projects in a Project Web App instance of Project Online. This is useful to ensure that Project Status Reports are showing most uptodate data. The pre-requisites to run this script are Copy SharePoint \u0026 Project Server CSOM DLLs Download SharePoint \u0026 Project Server CSOM Dlls from the nuget https://www.nuget.org/packages/Microsoft.SharePointOnline.CSOM Then copy the following DLLs files in the same folder as the script Microsoft.SharePoint.Client.Dll Microsoft.SharePoint.Client.Runtime.Dll Microsoft.ProjectServer.Client.Dll ** 2. Change PWA details in the script** Set the PWA url, username \u0026 password at the beginning of the script under the “#set the environment details” comment. A code snippet can be seen below: #set the environment details $PWAInstanceURL = \"https://sometenant.sharepoint.com/sites/pwa\" $username = \"admin@sometenant.onmicrosoft.com\" $password = \"s0mep@ssw0rd\" $securePass = ConvertTo-SecureString $password -AsPlainText -Force #Import Dlls Import-Module \".\\Microsoft.SharePoint.Client.dll\" Import-Module \".\\Microsoft.ProjectServer.Client.dll\" #load projects $projContext = New-Object Microsoft.ProjectServer.Client.ProjectContext($PWAInstanceURL) [Microsoft.SharePoint.Client.SharePointOnlineCredentials]$spocreds = New-Object Microsoft.SharePoint.Client.SharePointOnlineCredentials($username, $securePass); $projContext.Credentials = $spocreds $projContext.Load($projContext.Projects) $projContext.ExecuteQuery()  The script is provided “As is” with no warranties etc. ","date":"2019-12-01","objectID":"/project-server/publish-all-projects-in-ad8ee80e/publish-all-projects-in-ad8ee80e/:2:0","tags":["Active Directory","HTML"],"title":"Publish All Projects in Project Online using PowerShell","uri":"/project-server/publish-all-projects-in-ad8ee80e/publish-all-projects-in-ad8ee80e/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Publish Project Server Resource Plans Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/publish-server-resource-6bea9da4/publish-server-resource-6bea9da4/:1:0","tags":["Active Directory","HTML"],"title":"Publish Project Server Resource Plans","uri":"/project-server/publish-server-resource-6bea9da4/publish-server-resource-6bea9da4/"},{"categories":["Project Server"],"content":"Output from Technet Gallery .\\SOLVIN_ResPlan_EasyPublish.ps1 [-ProjectServerURL] \u003cString\u003e [-DatabaseServer] \u003cString\u003e [-ReportingDB] \u003cString\u003e [[-WhereClause] \u003cString\u003e] [\u003cCommonParameters\u003e] Publishes a specified list of project resource plans in Microsoft Project Server 2010 or 2013 The list of projects is queried from the Project Server (reporting) database by a query connecting to the standard MSP_EPMProject_UserView. It can be filtered by any column contained in this view. After the list of Project UIDs is retrieved, the script will connect to the PSI Projects Webservice, checkout, publish and checkin the resource plans. ","date":"2019-12-01","objectID":"/project-server/publish-server-resource-6bea9da4/publish-server-resource-6bea9da4/:2:0","tags":["Active Directory","HTML"],"title":"Publish Project Server Resource Plans","uri":"/project-server/publish-server-resource-6bea9da4/publish-server-resource-6bea9da4/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Purge a Print Queu Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/d222eb9a-51ee-443c-972d-d15ffb6d87ba/d222eb9a-51ee-443c-972d-d15ffb6d87ba/:1:0","tags":["Active Directory","HTML"],"title":"Purge a Print Queu","uri":"/printing/print-servers-print-queues-and-print-jobs/d222eb9a-51ee-443c-972d-d15ffb6d87ba/d222eb9a-51ee-443c-972d-d15ffb6d87ba/"},{"categories":["Printing"],"content":"Output from Technet Gallery Deletes all the print jobs for a printer named HP QuietJet. Visual Basic strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colInstalledPrinters = objWMIService.ExecQuery _ (\"Select * from Win32_Printer Where Name = 'HP QuietJet'\") For Each objPrinter in colInstalledPrinters objPrinter.CancelAllJobs() Next ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/d222eb9a-51ee-443c-972d-d15ffb6d87ba/d222eb9a-51ee-443c-972d-d15ffb6d87ba/:2:0","tags":["Active Directory","HTML"],"title":"Purge a Print Queu","uri":"/printing/print-servers-print-queues-and-print-jobs/d222eb9a-51ee-443c-972d-d15ffb6d87ba/d222eb9a-51ee-443c-972d-d15ffb6d87ba/"},{"categories":["Printing"],"content":"Original Links Original Technet URL PurgeOemInf.ps1 Search and uninstall oem.inf drivers Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/purgeoeminfps1-search-and-0e72eaf1/purgeoeminfps1-search-and-0e72eaf1/:1:0","tags":["Active Directory","HTML"],"title":"PurgeOemInf.ps1 Search and uninstall oem.inf drivers","uri":"/printing/printer-ports-and-printer-drivers/purgeoeminfps1-search-and-0e72eaf1/purgeoeminfps1-search-and-0e72eaf1/"},{"categories":["Printing"],"content":"Output from Technet Gallery Sometimes printerinstallations can fail. In my case they failed with 0x000005b3 error (another possible error code is 0x00000057). It turned out this was due to an incomplete infcache/filerepository on the systems (thanks to Cezar Poenaru for helping troubleshooting the issue). To be able to reinstall printers as normal you need to uninstall the affected drivers from the system. This sample script searches your windows inf cache for inf files which contain the driver in the $infname variable. As an example the script will search for the driver named “hpcu118u”, feel free to modify as needed for your own purposes. Afterwards the script continues by uninstalling the drivers with the pnputil tool. Besides, the script also gathers some logs, which can be used for troubleshooting. The script was tested successfully from an elevated prompt (run as admin) on a Windows 7 SP1 machine. It’s likely that it will work also on other Client/Server SKUs, just test it :-) update 13.05.13 -minor fixes ############################################################################################### # purgeoeminf.ps1 # # AUTHOR: Amaury Greiner, Microsoft # # THIS CODE-SAMPLE IS PROVIDED \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED # OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR # FITNESS FOR A PARTICULAR PURPOSE. # # This sample is not supported under any Microsoft standard support program or service. # The script is provided AS IS without warranty of any kind. Microsoft further disclaims all # implied warranties including, without limitation, any implied warranties of merchantability # or of fitness for a particular purpose. The entire risk arising out of the use or performance # of the sample and documentation remains with you. In no event shall Microsoft, its authors, # or anyone else involved in the creation, production, or delivery of the script be liable for # any damages whatsoever (including, without limitation, damages for loss of business profits, # business interruption, loss of business information, or other pecuniary loss) arising out of # the use of or inability to use the sample or documentation, even if Microsoft has been advised # of the possibility of such damages. ############################################################################################### #SOF #initilizing variables $oeminfmatches = $null; $oeminfselection = $null; $infdir = $env:windir+\"\\inf\"; #create folder for logging/troubleshooting data $logdir = \"C:\\Install\\purgeoeminf\"; $logfile = \"purgeoeminf.log\" $logfullpath = $logdir+\"\\\"+$logfile; New-Item $logdir -ItemType Directory -force; #start recording, doesn't work if run remotely Start-Transcript -Path $logfullpath -force; #search for oem*.inf files $oeminflist = gci $infdir\\*.* -Include oem*.inf; #copy some logs Copy-Item $infdir\\setupapi.app.log $logdir -force; wevtutil epl Microsoft-Windows-PrintService/Admin $logdir\\PrintServiceAdmin.evtx /ow:true; #searchpattern $infname = \"hpcu118u\"; #searching in $oeminflist and putting matches in $oeminfmatches; backing up matches in $logdir foreach ($inf in $oeminflist) { Select-String -path $inf.FullName -Pattern $infname -List| foreach { $oeminfmatches += $_.filename; copy-item $_.path $logdir -force; write-host \" Found $infname in\"$_.path ; } } #start uninstalling infs if ($oeminfmatches -ne $null){ foreach ($match in $oeminfmatches) { pnputil -f -d $match } Restart-Service Spooler; } else { write-host \"No inf-files found matching pattern: $infname\"; } #let user choose which inf to delete #$oeminfselection = $oeminfmatches | Out-GridView -PassThru -title \"Select inf to uninstall:\"; # #delete inf only if inf was selected for deletion # #if ($oeminfselection -ne $null -and $oeminfmatches -ne $null) { # pnputil -f -d $oeminfselection # } #else { # write-host \" No selection made or no inf-files found which match pattern $infname \"; # } #stop recording Stop-Transcript; #EOF ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/purgeoeminfps1-search-and-0e72eaf1/purgeoeminfps1-search-and-0e72eaf1/:2:0","tags":["Active Directory","HTML"],"title":"PurgeOemInf.ps1 Search and uninstall oem.inf drivers","uri":"/printing/printer-ports-and-printer-drivers/purgeoeminfps1-search-and-0e72eaf1/purgeoeminfps1-search-and-0e72eaf1/"},{"categories":["Printing"],"content":"Original Links Original Technet URL ransfer Print Jobs to a Different Print Queu Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/a0f68ae3-3a9b-4098-95f7-6f8d21a0b623/a0f68ae3-3a9b-4098-95f7-6f8d21a0b623/:1:0","tags":["Active Directory","HTML"],"title":"ransfer Print Jobs to a Different Print Queu","uri":"/printing/print-servers-print-queues-and-print-jobs/a0f68ae3-3a9b-4098-95f7-6f8d21a0b623/a0f68ae3-3a9b-4098-95f7-6f8d21a0b623/"},{"categories":["Printing"],"content":"Output from Technet Gallery Changes the TCP/IP printer port for a logical printer, which has the net effect of transferring existing print jobs to the new printer port, and thus to a different printer. Visual Basic strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set objPrinter = objWMIService.Get _ (\"Win32_Printer.DeviceID='ArtDepartmentPrinter'\") objPrinter.PortName = \"IP_192.168.1.10\" objPrinter.Put_ ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/a0f68ae3-3a9b-4098-95f7-6f8d21a0b623/a0f68ae3-3a9b-4098-95f7-6f8d21a0b623/:2:0","tags":["Active Directory","HTML"],"title":"ransfer Print Jobs to a Different Print Queu","uri":"/printing/print-servers-print-queues-and-print-jobs/a0f68ae3-3a9b-4098-95f7-6f8d21a0b623/a0f68ae3-3a9b-4098-95f7-6f8d21a0b623/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Register custom Event Handlers in Project Server 2010/2013 (on premise) Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/register-custom-event-7c85c962/register-custom-event-7c85c962/:1:0","tags":["Active Directory","HTML"],"title":"Register custom Event Handlers in Project Server 2010/2013 (on premise)","uri":"/project-server/register-custom-event-7c85c962/register-custom-event-7c85c962/"},{"categories":["Project Server"],"content":"Output from Technet Gallery If you have a many event handlers or a lot of servers (dev, int, test, acc, … , prod) or the person who has to deploy your custom event handlers is less experienced. It can be interesting to have a little script to do this enoying work for you. The powershell snippet below registers an event handler for Project Server. You have to fill in a few parameters. Specific to each deployment: PwaUrl: The URL of the PWA instance that you target. (eg: “http://project.contoso.com/pwa\") Specific to your event handler. Fill it in once. Name: Friendly name. Description: Friendly description. AssemblyName: For example: mydll, Version=1.1.0.0, Culture=neutral, PublicKeyToken=xxxxxxxxxxxxxxxx. ClassName: fully qualified name of the class that implements the event handler functionality. EventId: Use the enum to find the id of the event you need. [WebServiceProxy.PSEventID]::ProjectPublished Order: The order number will determine the sequence in which the event handlers will be be executed. Default: 1. \u003c# .SYNOPSIS Register an eventhandler in Microsoft Project Server 2010/2013 .DESCRIPTION Register an eventhandler in Microsoft Project Server 2010/2013 .PARAMETER PwaUrl URL of the Project Server instance to be connected to (example: http://projectserver/pwa .PARAMETER Name Friendly name of your Project Server event handler .PARAMETER Description A short explanation of what your event handler does. .PARAMETER AssemblyName Provide the full name of the strongly named event handler assembly. For example: mydll, Version=1.1.0.0, Culture=neutral, PublicKeyToken=xxxxxxxxxxxxxxxx. Example: \"ProjectServerEventReceiver, Version=1.0.0.0, Culture=neutral, PublicKeyToken=2affc510165cbe13\" .PARAMETER ClassName Provide the fully qualified name of the class that implements the event handler functionality. Example: \"ProjectServerEventReceiver.PSEventReceiver\" .PARAMETER EventId Provide the id of the event you would like to hook your event on. You can use the enum as demonstrated below. Example: [WebServiceProxy.PSEventID]::ProjectPublished .PARAMETER Order Provide the order for the event handler. If there are multiple event handlers associated with this event, the order number will determine the sequence in which the event handlers will be be executed. .PARAMETER EndpointUrl Optionally, only 2013. Provide the WCF Endpoint URL. For example: http://www.example.com/RemoteEventService.svc. .EXAMPLE .\\Register-PSEventHandler.ps1 -PwaUrl \"http://\u003cserver\u003e/\u003cpwa\u003e\" -Name \"Friendly name of your Project Server event handler\" -Description \"A short explanation of what your event handler does.\" -AssemblyName \"ProjectServerEventReceiver, Version=1.0.0.0, Culture=neutral, PublicKeyToken=2affc510165cbe13\" -ClassName \"ProjectServerEventReceiver.PSEventReceiver\" -EventId ([int32][WebServiceProxy.PSEventID]::ProjectPublished) -Order 1 .EXAMPLE .\\Register-PSEventHandler.ps1 -PwaUrl \"http://\u003cserver\u003e/\u003cpwa\u003e\" -Name \"Friendly name of your Project Server event handler\" -Description \"A short explanation of what your event handler does.\" -AssemblyName \"ProjectServerEventReceiver, Version=1.0.0.0, Culture=neutral, PublicKeyToken=2affc510165cbe13\" -ClassName \"ProjectServerEventReceiver.PSEventReceiver\" -EventId 53 -Order 1 .NOTES You need to have administrative permissions in Project Server to run this Script. Enum of EventIds 0 : AdminReportingPeriodUpdated 1 : AdminReportingPeriodUpdating 2 : AdminLineClassUpdated ... 225 : ProjectSyncingProjectEnterpriseEntities 226 : ProjectUpdatedPwaProject 227 : ProjectUpdatingPwaProject #\u003e #define parameters PARAM( [parameter(Mandatory=$true)] [string] $PwaUrl, [parameter(Mandatory=$true)] [string] $Name, [parameter(Mandatory=$true)] [string] $Description, [string] [parameter(Mandatory=$true)] $AssemblyName, [string] [parameter(Mandatory=$true)] $ClassName, [string] [parameter(Mandatory=$true)] $EventId, [int32] [parameter(Mandatory=$false)] $Order = 1, [string] [parameter(Mandatory=$false)] $EndpointUrl ) Write-Host \"Load Eve","date":"2019-12-01","objectID":"/project-server/register-custom-event-7c85c962/register-custom-event-7c85c962/:2:0","tags":["Active Directory","HTML"],"title":"Register custom Event Handlers in Project Server 2010/2013 (on premise)","uri":"/project-server/register-custom-event-7c85c962/register-custom-event-7c85c962/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Reinstall a Client Printer Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/87f9a46c-01b9-4217-9286-3234c16e8929/87f9a46c-01b9-4217-9286-3234c16e8929/:1:0","tags":["Active Directory","HTML"],"title":"Reinstall a Client Printer","uri":"/printing/printer-ports-and-printer-drivers/87f9a46c-01b9-4217-9286-3234c16e8929/87f9a46c-01b9-4217-9286-3234c16e8929/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **Fergy Reinstalls a client printer, reflecting changes made to a network print server. Visual Basic '*************************************** '*** Name : BobchgPrt.vbs *** '*** Author : M. Ferguson(Fergy) *** '*** Created: 19/07/2005 *** '*** Modified: 06/10/2005 *** '*** Modified by: Fergy *** '*************************************** Option Explicit 'On Error Resume Next Const ForReading = 1 '******************************* Variables declared ****************************** Dim Wsh, WsNet Dim Strline, Serv Dim ObjFso Dim objservice Dim wsnet1 Dim objComputer Dim PrtArray() Dim nodftprt, Prtpos Dim Prtnum, prtlen Dim oldprt, flrnum Dim Srvname, City Dim NewPrter, defaultprinter Dim dfltprter Dim newdfltprt, olddfltprt Dim PrtServ, PrtCity Dim lenprtnum, chkdflt Dim Rdfile, wrfile Dim OPrtnum, flrcity Dim NCity, NPrtnum Dim i, prtdflt Dim PrtDigital Dim OldServ, StrPrtname Dim strdfltprt Dim Prter1 Dim numcnt Dim string3 Dim objprinter Dim strcomputer Dim objWMIService Dim colInstalledPrinters Dim cnter1 string3 = \"\\\\CA\" i = 0 numcnt = 0 chkdflt = 0 OPrtnum = 0 '************************* Network \u0026 System Objects required ********************** Set ObjFso = CreateObject(\"Scripting.FileSystemObject\") Set WsNet = CreateObject(\"WScript.Network\") Set Wsh = CreateObject(\"WScript.Shell\") '************** Retrieve Current Default Printer **************** defaultprinter = Wsh.RegRead _ (\"HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\Device\") dfltprter = Split(defaultprinter, \",\") olddfltprt = UCASE(dfltprter(0)) '********** Get computer name and apply the impersonate WMI service for printers and '********** run a Printer query strComputer = WsNet.ComputerName Set objWMIService = GetObject _ (\"winmgmts:{impersonationLevel=impersonate}!\\\\\" \u0026 strcomputer \u0026 \"\\root\\cimv2\") Set colInstalledPrinters = objWMIService.ExecQuery(\"SELECT * FROM Win32_Printer\") '******* From the printer query load printers installed into an array and remove and '******* add re-printer For Each objprinter In colInstalledPrinters ReDim Preserve PrtArray(i) If string3 = Ucase(Left(objprinter.name, 4)) Then PrtArray(i) = UCASE(objprinter.name) 'OPrtnum = OPrtnum + 1'WScript.Echo PrtArray(i) WsNet.RemovePrinterConnection PrtArray(i) WScript.Sleep(3000) WsNet.AddWindowsPrinterConnection(PrtArray(i)) End If If olddfltprt = PrtArray(i) Then WsNet.SetDefaultPrinter PrtArray(i) 'newdfltprt = Prter1 chkdflt = 1 End If i = i + 1 Next '******************** Notify User that default printer Not on Network ************ If chkdflt = 0 ThenWScript.Echo \"Default printer not available. Please install manually\" End If WScript.Echo \"Completed\" ' Notification that printer process is completed Set WsNet = Nothing Set Wsh = Nothing ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/87f9a46c-01b9-4217-9286-3234c16e8929/87f9a46c-01b9-4217-9286-3234c16e8929/:2:0","tags":["Active Directory","HTML"],"title":"Reinstall a Client Printer","uri":"/printing/printer-ports-and-printer-drivers/87f9a46c-01b9-4217-9286-3234c16e8929/87f9a46c-01b9-4217-9286-3234c16e8929/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Remap Printer Connections Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/d7b066b9-2cd8-48d3-aac1-2cd15fd99489/d7b066b9-2cd8-48d3-aac1-2cd15fd99489/:1:0","tags":["Active Directory","HTML"],"title":"Remap Printer Connections","uri":"/printing/printer-ports-and-printer-drivers/d7b066b9-2cd8-48d3-aac1-2cd15fd99489/d7b066b9-2cd8-48d3-aac1-2cd15fd99489/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **Anonymous Submission Removes existing printer connections and remaps those connections to a new print server. This script can be executed at login to change the printer connections on the workstations. Visual Basic 'This script works well in a login script. When ran from a workstation 'it will loop thru all of the printers installed for the current logged on 'user and if they are connected to the old server they will be removed 'and then remaped to the new server. It will also attempt to descover 'which printer is the default printer in order to reset this if it is one 'of the printers that will be moved. ' 'Note: All of the printers must exist on the new server before this script ' should be run. If not then the printer will simply be removed from ' users profile and the script will not be able to reconnect them. ' \"Print Migrator\" is a utility that is part of the Windows 2000 and ' Windows 2003 resource kit. This will create all of the printers ' on the new server while maintaining all of their settings including ' print queue security. Keep in mind that for a time you will see ' duplicate printer if you do a search on printers, one advertisec ' from each server. ' 'We used this method to move just over 100 printers from one server to another 'and then ran this script as a logon script in a group policy. We let it run for 'a few days in order to allow for some users who don't logout every day have a 'chance to run it. All of our users profiles were updated and they didn't even 'know it was happening. We then deleted all of the printers from the old server. ' 'Note: The script does not run if you are Terminal serviced or SMS remote controling. Option Explicit Dim from_sv, to_sv, PrinterPath, PrinterName, DefaultPrinterName, DefaultPrinter Dim DefaultPrinterServer, SetDefault, key Dim spoint, Loop_Counter, scomma Dim WshNet, WshShell Dim WS_Printers DefaultPrinterName = \"\" spoint = 0 scomma = 0 SetDefault = 0 set WshShell = CreateObject(\"WScript.shell\") from_sv = \"\\\\old\" 'This should be the name of the old server. to_sv = \"\\\\new\" 'This should be the name of your new server. 'Just incase their are no printers and therefor no defauld printer set ' this will prevent the script form erroring out. On Error Resume Next key = \"HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\Device\" DefaultPrinter = LCase(WshShell.RegRead (key)) If Err.Number \u003c\u003e 0 ThenDefaultPrinterName = \"\" else 'If the registry read was successful then parse out the printer name so we can ' compare it with each printer later and reset the correct default printer ' if one of them matches this one read from the registry. spoint = instr(3,DefaultPrinter,\"\\\")+1 DefaultPrinterServer = left(DefaultPrinter,spoint-2) if lcase(DefaultPrinterServer) = from_sv then DefaultPrinterName = mid(DefaultPrinter,spoint,len(DefaultPrinter)-spoint+1) scomma = instr(DefaultPrinterName,\",\") DefaultPrinterName = left(DefaultPrinterName,scomma -1)end if end if Set WshNet = CreateObject(\"WScript.Network\") Set WS_Printers = WshNet.EnumPrinterConnections 'You have to step by 2 because only the even numbers will be the print queue's ' server and share name. The odd numbers are the printer names. For Loop_Counter = 0 To WS_Printers.Count - 1 Step 2'Remember the + 1 is to get the full path ie.. \\\\your_server\\your_printer.PrinterPath = lcase(WS_Printers(Loop_Counter + 1)) 'We only want to work with the network printers that are mapped to the original' server, so we check for \"\\\\Your_server\".if lcase(LEFT(PrinterPath,len(from_sv))) = from_sv then 'Now we need to parse the PrinterPath to get rhe Printer Name. spoint = instr(3,PrinterPath,\"\\\")+1 PrinterName = mid(PrinterPath,spoint,len(PrinterPath)-spoint+1) 'Now remove the old printer connection. WshNet.RemovePrinterConnection from_sv+\"\\\"+PrinterName 'and then create the new connection. 'Do not create c6100 if lcase(PrinterName) \u003c\u003e \"c6100\" then WshNet.AddWindowsPrinterConnection to_sv+\"\\\"+Print","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/d7b066b9-2cd8-48d3-aac1-2cd15fd99489/d7b066b9-2cd8-48d3-aac1-2cd15fd99489/:2:0","tags":["Active Directory","HTML"],"title":"Remap Printer Connections","uri":"/printing/printer-ports-and-printer-drivers/d7b066b9-2cd8-48d3-aac1-2cd15fd99489/d7b066b9-2cd8-48d3-aac1-2cd15fd99489/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Remap Printers and Log Results Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/81080c06-6bbf-4758-baab-8fbe5b8de35c/81080c06-6bbf-4758-baab-8fbe5b8de35c/:1:0","tags":["Active Directory","HTML"],"title":"Remap Printers and Log Results","uri":"/printing/printer-ports-and-printer-drivers/81080c06-6bbf-4758-baab-8fbe5b8de35c/81080c06-6bbf-4758-baab-8fbe5b8de35c/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **Martin Berton Remaps print printers from one print server to another and logs the results. Visual Basic 'Replace mapped printers from one print server to another 'Shared printers on new server must have identical printer sharenames as printers on old server 'Replaced and removed printers is logged in a logfile 'Written by: Martin Berton (martin.berton@infocare.se) on error resume next Const ForReading = 1, ForWriting = 2, ForAppending = 8 '======================================= 'Here you name the servers and logfile '======================================= oldprintserver = \"OLDSERVER\" newprintserver = \"NEWSERVER\" logfilepath = \"remapp_printers.txt\" Set filesys = CreateObject(\"Scripting.FileSystemObject\") Set filetxt = filesys.OpenTextFile(logfilepath, ForAppending, True) 'Default printer is read from the registry Set objShell = CreateObject(\"WScript.Shell\") sPath = \"HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\Device\" ar_PrnInfo = Split(objShell.RegRead(sPath), \",\") sPrinter = \"\" If IsArray(ar_PrnInfo) Then sPrinter = ar_PrnInfo(0) End If 'Installed printers is read Set WshNetwork = WScript.CreateObject(\"WScript.Network\") Set Printers = WshNetwork.EnumPrinterConnections 'Checking if printers is on old print server For i = 0 to Printers.Count - 1 if UCase(Mid(Printers.Item(i), 2, Len(oldprintserver)+2)) = \"\\\"\u0026 oldprintserver \u0026\"\\\" Then oldprinter = Printers.Item(i) newprinter = \"\\\\\" \u0026 newprintserver \u0026 \"\\\" \u0026 Mid(Printers.Item(i), Len(oldprintserver)+4) ' Check if printer the printer on the new print server allready is installed allreadyinstalled = false For j = 0 to Printers.Count - 1 if newprinter = Printers.Item(j) Then allreadyinstalled = true end if Next if allreadyinstalled then 'If the printer allreday is installed, the printer on the old print server will be removed filetxt.WriteLine(oldprinter \u0026 \" removed\") else 'If the printer is not installed, the printer on the new print server is installed 'and the printer on the old print server will be removed filetxt.WriteLine(oldprinter \u0026 \" replaced with \" \u0026 newprinter) WshNetwork.AddWindowsPrinterConnection newprinter end if WshNetwork.RemovePrinterConnection oldprinter end if Next 'if the users default printer is a printer on the old print server, the default printer 'is changed to the new print server if UCase(Mid(sPrinter, 2, Len(oldprintserver)+2)) = \"\\\"\u0026 oldprintserver \u0026\"\\\" Then PrinterPath = \"\\\\\" \u0026 newprintserver \u0026 \"\\\" \u0026 Mid(sPrinter, Len(oldprintserver)+4) filetxt.WriteLine(\"New default printer = \" \u0026 PrinterPath) WshNetwork.SetDefaultPrinter PrinterPath End If filetxt.Close ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/81080c06-6bbf-4758-baab-8fbe5b8de35c/81080c06-6bbf-4758-baab-8fbe5b8de35c/:2:0","tags":["Active Directory","HTML"],"title":"Remap Printers and Log Results","uri":"/printing/printer-ports-and-printer-drivers/81080c06-6bbf-4758-baab-8fbe5b8de35c/81080c06-6bbf-4758-baab-8fbe5b8de35c/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Remove All Network Printers Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/remove-all-network-printers-8b82b324/remove-all-network-printers-8b82b324/:1:0","tags":["Active Directory","HTML"],"title":"Remove All Network Printers","uri":"/printing/printer-ports-and-printer-drivers/remove-all-network-printers-8b82b324/remove-all-network-printers-8b82b324/"},{"categories":["Printing"],"content":"Output from Technet Gallery ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/remove-all-network-printers-8b82b324/remove-all-network-printers-8b82b324/:2:0","tags":["Active Directory","HTML"],"title":"Remove All Network Printers","uri":"/printing/printer-ports-and-printer-drivers/remove-all-network-printers-8b82b324/remove-all-network-printers-8b82b324/"},{"categories":["Printing"],"content":"Remove All Network Printers When Users Logoff This script will remove all network printers at user logoff. We need to be used this script in the user logoff settings via GPO. We use this script to remove stale/old network printer connections from user workstations. This helps to reduce user confusion by taking away printer connections that may not be available anymore. We also use this script in case there are any major printer infrastructure changes. For more information. http://blogs.technet.com/b/heyscriptingguy/archive/2007/11/02/hey-scripting-guy-how-can-i-remove-all-the-network-printers-on-a-computer.aspx ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/remove-all-network-printers-8b82b324/remove-all-network-printers-8b82b324/:2:1","tags":["Active Directory","HTML"],"title":"Remove All Network Printers","uri":"/printing/printer-ports-and-printer-drivers/remove-all-network-printers-8b82b324/remove-all-network-printers-8b82b324/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Remove Installed Printer from remote computers Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/client-side-printing/remove-installed-printer-c3c0653d/remove-installed-printer-c3c0653d/:1:0","tags":["Active Directory","HTML"],"title":"Remove Installed Printer from remote computers","uri":"/printing/client-side-printing/remove-installed-printer-c3c0653d/remove-installed-printer-c3c0653d/"},{"categories":["Printing"],"content":"Output from Technet Gallery Remove Installed Printer from remote computers. Uses Get-WMIObject Win32_Printer to remove the installed printer. Accepts input for one or more remote computer names. EXAMPLE1: Remove-InstalledPrinter -ComputerName computername1 -PrinterName Ricoh 4504 EXAMPLE2: “computername1” | Remove-InstalledPrinter -PrinterName Ricoh 4504 Function Remove-InstalledPrinter { \u003c# .SYNOPSIS Uses Get-WMIObject Win32_Printer to remove installed printer. .DESCRIPTION Uses Get-WMIObject Win32_Printer to remove installed printer. .PARAMETER ComputerName Accepts input for one or more computer names. .EXAMPLE Remove-InstalledPrinter -ComputerName computername1 -PrinterName Ricoh 4504 .EXAMPLE \"computername1\" | Remove-InstalledPrinter -PrinterName Ricoh 4504 .EXAMPLE Run on a local computer Remove-InstalledPrinter #\u003e [CmdletBinding()] Param( [Parameter(Mandatory=$True, ValueFromPipeline=$True, ValueFromPipelinebyPropertyName=$True)] [string[]]$ComputerName = $env:ComputerName, [Parameter(Mandatory=$True)] [string]$PrinterName ) BEGIN { Write-Output \"`nRemoving installed printer ...`n\" } PROCESS { foreach ($Computer in $ComputerName) { if ( Test-Connection -ComputerName $computer -Count 1 -ErrorAction SilentlyContinue ) { Write-Output \"$Computer is online ...\" #Get-WMIObject Win32_Printer -ComputerName $Computer | Where-Object {$Computer.Name -like $PrinterName} | foreach{$Computer.delete()} #(get-wmiobject -q \"select * from win32_printer where name='$PrinterName'\").psbase.delete() $t = get-wmiobject -computername $Computer -query \"SELECT * FROM win32_printer WHERE name = '$PrinterName'\"; $t.delete() } else { Write-Output \"$Computer is offline ...\" } } } END { Write-Output \"Script complete! Check over output for any warnings.\" } } ","date":"2019-12-01","objectID":"/printing/client-side-printing/remove-installed-printer-c3c0653d/remove-installed-printer-c3c0653d/:2:0","tags":["Active Directory","HTML"],"title":"Remove Installed Printer from remote computers","uri":"/printing/client-side-printing/remove-installed-printer-c3c0653d/remove-installed-printer-c3c0653d/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Remove Paused Network Printers Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/f8961cb1-c4d2-446c-888c-4b3efb339234/f8961cb1-c4d2-446c-888c-4b3efb339234/:1:0","tags":["Active Directory","HTML"],"title":"Remove Paused Network Printers","uri":"/printing/printer-ports-and-printer-drivers/f8961cb1-c4d2-446c-888c-4b3efb339234/f8961cb1-c4d2-446c-888c-4b3efb339234/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **Ulco Landheer Deletes connections to any network printers that are currently paused. Visual Basic 'Remove Paused Network Printers on Windows 2000/XP Clients ' ' Runs at logon, so move on in case of an error On Error Resume Next ' Scriptomatic stuff / Setting thing up for WSH Const wbemFlagReturnImmediately = \u0026h10 Const wbemFlagForwardOnly = \u0026h20 Set WshNetwork = WScript.CreateObject(\"WScript.Network\") arrComputers = Array(\".\") For Each strComputer In arrComputers WScript.Echo WScript.Echo \"==========================================\" WScript.Echo \"Computer: \" \u0026 strComputer WScript.Echo \"==========================================\" Set objWMIService = GetObject(\"winmgmts:\\\\\" \u0026 strComputer \u0026 \"\\root\\CIMV2\") Set colItems = objWMIService.ExecQuery(\"SELECT * FROM Win32_Printer\", \"WQL\", _ wbemFlagReturnImmediately + wbemFlagForwardOnly) ' Select paused printers on certain printservers and delete these ' For Each objItem In colItems If objItem.PrinterStatus = 1 And (objItem.ServerName = \"\\\\Printserver\" Or _ objItem.ServerName = \"\\\\Printserver2\") then Wcript.Echo \"DeviceID: \" \u0026 objItem.DeviceID WScript.Echo \"Name: \" \u0026 objItem.Name WScript.Echo \"PrinterStatus: \" \u0026 objItem.PrinterStatus WScript.Echo \"ServerName: \" \u0026 objItem.ServerName pPrinter = objItem.Name WScript.Echo \"Deleting Printer: \" \u0026 pPrinter WshNetwork.RemovePrinterConnection pPrinter, true, True End if Next next ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/f8961cb1-c4d2-446c-888c-4b3efb339234/f8961cb1-c4d2-446c-888c-4b3efb339234/:2:0","tags":["Active Directory","HTML"],"title":"Remove Paused Network Printers","uri":"/printing/printer-ports-and-printer-drivers/f8961cb1-c4d2-446c-888c-4b3efb339234/f8961cb1-c4d2-446c-888c-4b3efb339234/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Remove Printer Connections Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/a349ef0f-6881-4ca3-98de-668935bb7522/a349ef0f-6881-4ca3-98de-668935bb7522/:1:0","tags":["Active Directory","HTML"],"title":"Remove Printer Connections","uri":"/printing/printer-ports-and-printer-drivers/a349ef0f-6881-4ca3-98de-668935bb7522/a349ef0f-6881-4ca3-98de-668935bb7522/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **Ulco Landheer Lists all printers on a given print server (or the entire domain), connects to those print servers, and then removes the printer connection. Handy when you do not allow Terminal Server users to install drivers. Visual Basic ' printer Connection Script ' Change the printserver name to the server you want to connect to 3 times ' And go..... ' Use Cscript.exe to execute or you will get RSI from clicking the OK button.... ' ' Ulco Landheer 20 Januar 2006 Const ADS_SCOPE_SUBTREE = 2 set WshNetwork = CreateObject(\"Wscript.Network\") Set objConnection = CreateObject(\"ADODB.Connection\") Set objCommand = CreateObject(\"ADODB.Command\") objConnection.Provider = \"ADsDSOObject\" objConnection.Open \"Active Directory Provider\" Set objCommand.ActiveConnection = objConnection objCommand.CommandText = \"Select printerName, serverName from \" _ \u0026 \" 'LDAP://DC=domain,DC=com' where objectClass='printQueue' AND serverName='printserver.domain.com'\" objCommand.Properties(\"Page Size\") = 1000 objCommand.Properties(\"Searchscope\") = ADS_SCOPE_SUBTREE Set objRecordSet = objCommand.Execute objRecordSet.MoveFirst Do Until objRecordSet.EOF Wscript.Echo \"Printer Name: \" \u0026 objRecordSet.Fields(\"printerName\").Value Wscript.Echo \"Server Name: \" \u0026 objRecordSet.Fields(\"serverName\").ValueWshNetwork.AddWindowsPrinterConnection \"\\\\printserver\\\" \u0026 objRecordSet.Fields(\"printerName\").ValueWscript.sleep 300wshNetwork.RemovePrinterConnection \"\\\\printserver\\\" \u0026 objRecordSet.Fields(\"printerName\").ValueWscript.Echo \"Printer \" \u0026 objRecordSet.Fields(\"serverName\").Value \u0026 \"\\\" \u0026 objRecordSet.Fields(\"printerName\").Value \u0026 \" was connected to and deleted\" objRecordSet.MoveNext Loop ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/a349ef0f-6881-4ca3-98de-668935bb7522/a349ef0f-6881-4ca3-98de-668935bb7522/:2:0","tags":["Active Directory","HTML"],"title":"Remove Printer Connections","uri":"/printing/printer-ports-and-printer-drivers/a349ef0f-6881-4ca3-98de-668935bb7522/a349ef0f-6881-4ca3-98de-668935bb7522/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Remove Printers Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/client-side-printing/658b88e8-012c-4dff-8fc7-a658cb1c6317/658b88e8-012c-4dff-8fc7-a658cb1c6317/:1:0","tags":["Active Directory","HTML"],"title":"Remove Printers","uri":"/printing/client-side-printing/658b88e8-012c-4dff-8fc7-a658cb1c6317/658b88e8-012c-4dff-8fc7-a658cb1c6317/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **Anonymous Submission Removes a pair of printers. Visual Basic ' remove a printer script ' Printer1 is removed strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colInstalledPrinters = objWMIService.ExecQuery _ (\"Select * from Win32_Printer where DeviceID = 'Printer1'\") For Each objPrinter in colInstalledPrinters objPrinter.Delete_ Next ' Printer2 is removed strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colInstalledPrinters = objWMIService.ExecQuery _ (\"Select * from Win32_Printer where DeviceID = 'Printer2'\") For Each objPrinter in colInstalledPrinters objPrinter.Delete_ Next ' remove un-used ports Set objDictionary = CreateObject(\"Scripting.Dictionary\") strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colPrinters = objWMIService.ExecQuery _ (\"Select * from Win32_Printer\") For Each objPrinter in colPrinters objDictionary.Add objPrinter.PortName, objPrinter.PortName Next Set colPorts = objWMIService.ExecQuery _ (\"Select * from Win32_TCPIPPrinterPort\") For Each objPort in colPorts If objDictionary.Exists(objPort.Name) Then Else ObjPort.Delete_ End If Next ' beep PC speaker when done Set Shell = WScript.CreateObject(\"WScript.Shell\") Shell.Run \"%comspec% /c echo \" \u0026 Chr(07), 0, True ","date":"2019-12-01","objectID":"/printing/client-side-printing/658b88e8-012c-4dff-8fc7-a658cb1c6317/658b88e8-012c-4dff-8fc7-a658cb1c6317/:2:0","tags":["Active Directory","HTML"],"title":"Remove Printers","uri":"/printing/client-side-printing/658b88e8-012c-4dff-8fc7-a658cb1c6317/658b88e8-012c-4dff-8fc7-a658cb1c6317/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Remove printers added By group policy Original Technet Description URL Description Download: [Download Link](Download\\GP Printer Removal Fix.reg) ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/remove-printers-added-by-9dc5f551/remove-printers-added-by-9dc5f551/:1:0","tags":["Active Directory","HTML"],"title":"Remove printers added By group policy","uri":"/printing/print-servers-print-queues-and-print-jobs/remove-printers-added-by-9dc5f551/remove-printers-added-by-9dc5f551/"},{"categories":["Printing"],"content":"Output from Technet Gallery I have often had issues where printers that have been deployed through GP cannot be removed even after the policy is no longer applied. The printers must be removed through the registry. Here is a registry edit to remove fix the issue it will remove all printers.As always edit the registry with caution and backup the keys you edit to avoid problems It edits the following Key Bash/shell [HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Print\\Printers] \"DefaultSpoolDirectory\"=\"C:\\\\Windows\\\\system32\\\\spool\\\\PRINTERS\" \"LANGIDOfLastDefaultDevmode\"=dword:00000409 ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/remove-printers-added-by-9dc5f551/remove-printers-added-by-9dc5f551/:2:0","tags":["Active Directory","HTML"],"title":"Remove printers added By group policy","uri":"/printing/print-servers-print-queues-and-print-jobs/remove-printers-added-by-9dc5f551/remove-printers-added-by-9dc5f551/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Removing Printer Permission Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/removing-printer-permission-5ff5bb37/removing-printer-permission-5ff5bb37/:1:0","tags":["Active Directory","HTML"],"title":"Removing Printer Permission","uri":"/printing/print-servers-print-queues-and-print-jobs/removing-printer-permission-5ff5bb37/removing-printer-permission-5ff5bb37/"},{"categories":["Printing"],"content":"Output from Technet Gallery Windows Server 2012 comes with the PrintManagement module, which makes automation Management of Printers easier. But testing cmdlets like Add-Printer and Set-Printer I noticed that you can set Printer Permission only using the Parameter -PermissionSDDL . These Parameters in both cmdlets expect Printer Permission using Security Definition Description Language (SDDL) which is not what you can type on the command line that easy. Therefore, a complete SDDL string may look like this (one line, formatted for appearance) D:(A;;CC;;;AU)(A;;CCLCRPRC;;;IU)(A;;CCLCRPRC;;;SU)(A;;CCLCRPWPRC;;;SY)(A;;KA;;;BA) (A;;KA;;;S-1-5-21-1234565538-1234563583-123456993-1234)S:(AU;FA;KA;;;WD)(AU;OIIOFA;GA;;;WD) see this site for more details:http://networkadminkb.com/KB/a6/understanding-the-sddl-permissions-in-the-ace-string.aspx These was the reason for me to create an advenced function to set/remove Printer Permission in the way Admins used to do like using domain\\groupname or domain\\username. (See also my other contribution Add Printer Permission) Example usage to remove only the Permission of a given Group or user: get the current SDDL from the Printer  $PermissionSDDL = Get-Printer -full -Name test99 | select PermissionSDDL -ExpandProperty PermissionSDDL  # genrate the new SDDL  $newSDDL = Remove-LHSPrinterPermissionSDDL -Account “Domain\\Username” -existingSDDL $PermissionSDDL  # Set the new SDDL on the Printer  Get-Printer -Name test99 | Set-Printer -PermissionSDDL $newSDDL -verbose Function Remove-LHSPrinterPermissionSDDL { \u003c# .SYNOPSIS Removes Printer Permission using SDDL .DESCRIPTION Removes Printer Permission using Security Definition Description Language (SDDL). Use Get-Printer and Set-Printer to modify Printer Permission on local and Remote Computers. Requires Microsoft PS Module PrintManagement. .PARAMETER Account An User or Group you want to Remove Permission like \"Domain\\GroupName\" or \"Domain\\UserName\". .PARAMETER existingSDDL The current SDDL of a Printer .EXAMPLE # get the current SDDL from the Printer $PermissionSDDL = Get-Printer -full -Name test99 | select PermissionSDDL -ExpandProperty PermissionSDDL # genrate the new SDDL $newSDDL = Remove-LHSPrinterPermissionSDDL -Account \"Domain\\Username\" -existingSDDL $PermissionSDDL # Set the new SDDL on the Printer Get-Printer -Name test99 | Set-Printer -PermissionSDDL $newSDDL -verbose .INPUTS None .OUTPUTS SDDL as System.String .NOTES # AccessMask which can contain following values: # Takeownership - 524288 # ReadPermissions - 131072 # ChangePermissions - 262144 # ManageDocuments - 983088 # ManagePrinters - 983052 # Print + ReadPermissions - 131080 # full control all operations - 268435456 AUTHOR: Pasquale Lantella LASTEDIT: KEYWORDS: .LINK DiscretionaryAcl.RemoveAccess Method (AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags) http://msdn.microsoft.com/en-us/library/5c4a0wc2.aspx Understanding the SDDL permissions in the ACE_String http://networkadminkb.com/KB/a6/understanding-the-sddl-permissions-in-the-ace-string.aspx #Requires -Version 3.0 #\u003e [cmdletbinding( ConfirmImpact = 'Low', SupportsShouldProcess = $false )] [OutputType('System.String')] param( [Parameter(Position=0,Mandatory=$True,ValueFromPipeline=$False, HelpMessage='A Security Group or User like \"Domain\\GroupName\" or \"Domain\\UserName\"')] [String]$Account, [Parameter(Position=1,Mandatory=$True,ValueFromPipeline=$False)] [String]$existingSDDL ) BEGIN { Set-StrictMode -Version Latest ${CmdletName} = $Pscmdlet.MyInvocation.MyCommand.Name } # end BEGIN PROCESS { try { $isContainer = $false $isDS = $false $SecurityDescriptor = New-Object -TypeName ` Security.AccessControl.CommonSecurityDescriptor ` $isContainer, $isDS, $existingSDDL Write-Verbose \"remove Permission for $Account\" $NTAccount = New-Object Security.Principal.NTAccount $Account $NTAccountSid = $NTAccount.Translate([Security.Principal.SecurityIdentifier]).Value $PermissionExist = $False Foreach ($SDDL in $Securit","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/removing-printer-permission-5ff5bb37/removing-printer-permission-5ff5bb37/:2:0","tags":["Active Directory","HTML"],"title":"Removing Printer Permission","uri":"/printing/print-servers-print-queues-and-print-jobs/removing-printer-permission-5ff5bb37/removing-printer-permission-5ff5bb37/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Rename a print server or replace a printer Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/client-side-printing/print-server-rename-efb6a47f/print-server-rename-efb6a47f/:1:0","tags":["Active Directory","HTML"],"title":"Rename a print server or replace a printer","uri":"/printing/client-side-printing/print-server-rename-efb6a47f/print-server-rename-efb6a47f/"},{"categories":["Printing"],"content":"Output from Technet Gallery I’m sharing a script which can be used in many ways, firstly when you are replacing physical printers that use different drivers, secondly when replacing the print server that the printer shares reside. . The printer share doesn’t need to be called the same name and the server which it resides can be different. It’s not massively complex, but useful. I used it to swap out hardware printers of a different make and model, running on a different server. With some simple editing you can swap out the print server, or the print server, you can even rename the share name, just make sure they correspond in the script. You get the picture… I’ve used this to replace printers without anyone knowing, just to free me up some time. It parses the default printer, and sets the default printer to match the share name (or corresponding share name) so that the swap is seamless, what ever the share name is called. #set-executionpolicy unrestricted #Find the default Printer $getDefaultPrinter = (Get-WMIObject -class Win32_Printer -Filter Default=True | Select Name).Name #Parse default printer name up to after Servername $replacedDefault = $getDefaultPrinter.Split('\\')[0..2] -join '\\' #Add backslash - lazy join... $replacedDefault = $replacedDefault +\"\\\" #Text manipualtion to create default printer $default = $getdefaultprinter.replace($replacedDefault,\"\\\\QAV-Bacsrv\\\") #Hostname $hname = $env:computername #Old printers to be removed - add as many $gordons = \"\\\\QAV-SS1\\GPrinter\" $events = \"\\\\QAV-SS1\\Events\" $events2 = \"\\\\qav-sccm-demo\\Events2\" #New printers to be installed $GordonsNew = \"\\\\QAVBACSRV\\testPrinter\" $eventsNew = \"\\\\QAV-BACSRV\\Events\" $events2New = \"\\\\QAVBACSRV\\Events2\" #Array to hold installed printer.name $refinedPrinters = @() #WMI query to find installed printers $printers = Get-WmiObject -Class Win32_Printer -ComputerName $hname #Build the $refinedPrinters array Foreach ($p in $printers){$refinedPrinters +=($p.name)} #'If statements' to find printers that require deleting - add as many as required #\\\\QAV-SS1\\Gordon's Printer If($refinedPrinters -contains $gordons){(New-Object -ComObject WScript.Network).RemovePrinterConnection($gordons);(New-Object -ComObject WScript.Network).AddWindowsPrinterConnection($GordonsNew)} #\\\\QAV-SS1\\events If($refinedPrinters -contains $events){(New-Object -ComObject WScript.Network).RemovePrinterConnection($events);(New-Object -ComObject WScript.Network).AddWindowsPrinterConnection($eventsNew)} #\\\\QAV-qav-sccm-demo\\events2 If($refinedPrinters -contains $events2){(New-Object -ComObject WScript.Network).RemovePrinterConnection($events2);(New-Object -ComObject WScript.Network).AddWindowsPrinterConnection($events2New)} #Set default printer (New-Object -ComObject WScript.Network).SetDefaultPrinter($default) #Echo the array for error handling $refinedPrinters ","date":"2019-12-01","objectID":"/printing/client-side-printing/print-server-rename-efb6a47f/print-server-rename-efb6a47f/:2:0","tags":["Active Directory","HTML"],"title":"Rename a print server or replace a printer","uri":"/printing/client-side-printing/print-server-rename-efb6a47f/print-server-rename-efb6a47f/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Rename a Printer Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/client-side-printing/82f70368-7f82-4f4e-8117-024ed215405b/82f70368-7f82-4f4e-8117-024ed215405b/:1:0","tags":["Active Directory","HTML"],"title":"Rename a Printer","uri":"/printing/client-side-printing/82f70368-7f82-4f4e-8117-024ed215405b/82f70368-7f82-4f4e-8117-024ed215405b/"},{"categories":["Printing"],"content":"Output from Technet Gallery Renames both a printer and its printer share name. Visual Basic strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colPrinters = objWMIService.ExecQuery _ (\"Select * from Win32_Printer Where DeviceID = 'HP LaserJet 4Si M'\") For Each objPrinter in colPrinters objPrinter.RenamePrinter(\"ArtDepartmentPrinter\") Next Set colPrinters = objWMIService.ExecQuery _ (\"Select * From Win32_Printer Where DeviceID = 'ArtDepartmentPrinter' \") For Each objPrinter in colPrinters objPrinter.ShareName = \"ArtDepartmentPrinter\" objPrinter.Put_ Next ","date":"2019-12-01","objectID":"/printing/client-side-printing/82f70368-7f82-4f4e-8117-024ed215405b/82f70368-7f82-4f4e-8117-024ed215405b/:2:0","tags":["Active Directory","HTML"],"title":"Rename a Printer","uri":"/printing/client-side-printing/82f70368-7f82-4f4e-8117-024ed215405b/82f70368-7f82-4f4e-8117-024ed215405b/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Rename a Printer Published in Active Directory Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/1f20ea0c-89aa-4f5c-8309-023bf65b85f7/1f20ea0c-89aa-4f5c-8309-023bf65b85f7/:1:0","tags":["Active Directory","HTML"],"title":"Rename a Printer Published in Active Directory","uri":"/printing/print-servers-print-queues-and-print-jobs/1f20ea0c-89aa-4f5c-8309-023bf65b85f7/1f20ea0c-89aa-4f5c-8309-023bf65b85f7/"},{"categories":["Printing"],"content":"Output from Technet Gallery Uses the MoveHere method to rename a published printer in an OU. Visual Basic Set objOU = GetObject(\"LDAP://ou=HR,dc=NA,dc=fabrikam,dc=com\") objOU.MoveHere _ \"LDAP://cn=Printer1,ou=HR,dc=NA,dc=fabrikam,dc=com\", \"cn=HRPrn1\" ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/1f20ea0c-89aa-4f5c-8309-023bf65b85f7/1f20ea0c-89aa-4f5c-8309-023bf65b85f7/:2:0","tags":["Active Directory","HTML"],"title":"Rename a Printer Published in Active Directory","uri":"/printing/print-servers-print-queues-and-print-jobs/1f20ea0c-89aa-4f5c-8309-023bf65b85f7/1f20ea0c-89aa-4f5c-8309-023bf65b85f7/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Replace a Local Printer with an Active Directory Printer Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/0af93e3c-0997-4de5-bd0f-3f7fb4388f14/0af93e3c-0997-4de5-bd0f-3f7fb4388f14/:1:0","tags":["Active Directory","HTML"],"title":"Replace a Local Printer with an Active Directory Printer","uri":"/printing/printer-ports-and-printer-drivers/0af93e3c-0997-4de5-bd0f-3f7fb4388f14/0af93e3c-0997-4de5-bd0f-3f7fb4388f14/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **Eric Payne Replaces local printer connections with Active Directory printer connections. Visual Basic '#####================================================================================ '## Title: SwapDirectPrinterWithADPrinter.vbs '## Version: 1.00 '## Author: Eric Payne '## Date: 1/19/2007 '## '## Purpose: '## 1. Swaps out the local direct printer with an AD one and add\\remove printers '## Requirements: '## 1. The account the script executes under must have permissions to query AD '## Basic Logic: '## 1. Loop through all local printers looking for directly connected ones '## 2. Searches AD for IP address of directly connected computer in the portName field '## 3. If found adds the new printer to local computer '## 4. Deletes old directly connected printer '#####================================================================================ On error resume Next strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colInstalledPrinters = objWMIService.ExecQuery _ (\"Select * from Win32_Printer Where Network = FALSE And portName Like 'IP%' \") 'Get all local directlly connected printers For Each objPrinter in colInstalledPrinters 'Loop through each printer WScript.Echo \"Found local Printer with IP of: \" \u0026 objPrinter.portName if objPrinter.Default = vbTrue Then 'Check if default bolPrinterDefault = vbTrue WScript.Echo objPrinter.portName \u0026 \" is the default printer\" Else bolPrinterDefault = vbFalse End if WScript.Echo \"Searching AD for printer: \" \u0026 objPrinter.portName strPath = GetURLForPrinterInAD(objPrinter.portName) 'Search AD for printer match via IP Address = portName if strPath = \"NotFound\" Then WScript.Echo \"Could not find \" \u0026 objPrinter.portName \u0026 \" printer in AD\" Else WScript.Echo \"Found \" \u0026 strPath if not AddPrinter(strPath,bolPrinterDefault) Then WScript.Echo \"Counld not add \" \u0026 strPath Else WScript.Echo \"Succesfully added \" \u0026 strPath Delete Old Printer objPrinter.Delete_ if err \u003c\u003e 0 Then _ WScript.Echo \"Error trying to detete local printer. Err.Number: \" \u0026 err.number _ \u0026 vbTab \u0026 \" Err.Source: \" \u0026 vbTab \u0026 \" Err.Description: \" \u0026 err.Description End if End if Next if err \u003c\u003e 0 Then WScript.echo \"An error occurred in function Main \" \u0026 err.number \u0026 \" \" \u0026 err.Description Function GetURLForPrinterInAD(strPortName) 'DESC: Returns path to printer On Error Resume Next GetURLForPrinterInAD = \"Not Found\" Const ADS_SCOPE_SUBTREE = 5 Set objRootDSE = GetObject(\"LDAP://rootDSE\") 'Get domain info strDomain = objRootDSE.Get(\"defaultNamingContext\") Set objConnection = CreateObject(\"ADODB.Connection\") 'Set ADODB Set objCommand = CreateObject(\"ADODB.Command\") objConnection.Provider = \"ADsDSOObject\" objConnection.Open \"Active Directory Provider\" Set objCommand.ActiveConnection = objConnection objCommand.CommandText = \"Select serverName, printShareName from \" _ 'ADSI query \u0026 \" 'LDAP://\" \u0026 strDomain \u0026 \"' where objectClass='printQueue'\" _ \u0026 \" and portName = '\" \u0026 strPortName \u0026 \"'\" objCommand.Properties(\"Page Size\") = 10000 objCommand.Properties(\"Searchscope\") = ADS_SCOPE_SUBTREE objCommand.Properties(\"Timeout\") = 30 objCommand.Properties(\"Cache Results\") = False Set objRecordSet = objCommand.Execute if err \u003c\u003e 0 Then WScript.echo \"An error occurred trying to query: \" \u0026 objCommand.CommandText \u0026 _ \" \" \u0026 err.number \u0026 \" \" \u0026 err.Description if not objRecordSet.EOF or objRecordSet.BOF Then objRecordSet.MoveFirst Do Until objRecordSet.EOF 'Loop through recordset strServerName = objRecordSet.Fields(\"ServerName\").Value colShares = objRecordSet.Fields(\"printShareName\").Value strShareName = colShares(0) if strServerName \u003c\u003e \"\" and strShareName \u003c\u003e \"\" then GetURLForPrinterInAD = \"\\\\\" \u0026 strServerName \u0026 \"\\\" \u0026 strShareName Exit Do Else objRecordSet.MoveNext End if Loop Else WSCript.Echo \"Can't find \" \u0026 strIP \u0026 \" in AD\" End if if err \u003c\u003e 0 Then WScript.echo \"An error occurred in function GetURLForPrinterInAD \" \u0026 _ err.number \u0026 \" \" \u0026 err.Description End Function Function Add","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/0af93e3c-0997-4de5-bd0f-3f7fb4388f14/0af93e3c-0997-4de5-bd0f-3f7fb4388f14/:2:0","tags":["Active Directory","HTML"],"title":"Replace a Local Printer with an Active Directory Printer","uri":"/printing/printer-ports-and-printer-drivers/0af93e3c-0997-4de5-bd0f-3f7fb4388f14/0af93e3c-0997-4de5-bd0f-3f7fb4388f14/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Report on Project Online Project Site list data Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/report-on-online-list-data-f5cbf73f/report-on-online-list-data-f5cbf73f/:1:0","tags":["Active Directory","HTML"],"title":"Report on Project Online Project Site list data","uri":"/project-server/report-on-online-list-data-f5cbf73f/report-on-online-list-data-f5cbf73f/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This simple JavaScript solution starter enables you to report on data from Project Site lists. It uses the SharePoint REST API so it is possible to update the script so that custom columns can be included or design the report around a custom list on the Project Site. The link to the blog post below details the steps required to start using the solution starter. A code snippet can be seen below - full code available in the download: JavaScript \u003cscript type=\"text/javascript\"\u003e var projectData = []; var projectSiteListItems = []; var projsiteUrl; var projectAccess; var projObject; //run on page load to get a list of EPTs to populate the selection list $(document).ready(function () { LoadEPTs(); }); function LoadEPTs() { waitDialog = SP.UI.ModalDialog.showWaitScreenWithNoClose('Loading', 'Getting the list report data. This will close when the data is loaded...'); var selectArray = []; var uniqvalues = []; var data = $.ajax({u Here is a link to the supporting blog post that details the requirements to use this solution starter script: https://pwmather.wordpress.com/2017/05/05/want-to-report-across-projectonline-project-sites-for-sharepoint-list-data-ppm-javascript-office365-rest-odata/ ","date":"2019-12-01","objectID":"/project-server/report-on-online-list-data-f5cbf73f/report-on-online-list-data-f5cbf73f/:2:0","tags":["Active Directory","HTML"],"title":"Report on Project Online Project Site list data","uri":"/project-server/report-on-online-list-data-f5cbf73f/report-on-online-list-data-f5cbf73f/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Resume a Paused Printer Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/974b69a7-ce06-408a-ae2b-155483328860/974b69a7-ce06-408a-ae2b-155483328860/:1:0","tags":["Active Directory","HTML"],"title":"Resume a Paused Printer","uri":"/printing/print-servers-print-queues-and-print-jobs/974b69a7-ce06-408a-ae2b-155483328860/974b69a7-ce06-408a-ae2b-155483328860/"},{"categories":["Printing"],"content":"Output from Technet Gallery Resumes a paused printer. Visual Basic strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colInstalledPrinters = objWMIService.ExecQuery _ (\"Select * from Win32_Printer Where Name = 'ArtDepartmentPrinter'\") For Each objPrinter in colInstalledPrinters ObjPrinter.Resume() Next ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/974b69a7-ce06-408a-ae2b-155483328860/974b69a7-ce06-408a-ae2b-155483328860/:2:0","tags":["Active Directory","HTML"],"title":"Resume a Paused Printer","uri":"/printing/print-servers-print-queues-and-print-jobs/974b69a7-ce06-408a-ae2b-155483328860/974b69a7-ce06-408a-ae2b-155483328860/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Resume All Paused Printers Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/78143e6d-2ab8-415d-b2bf-c8b80bc47ae2/78143e6d-2ab8-415d-b2bf-c8b80bc47ae2/:1:0","tags":["Active Directory","HTML"],"title":"Resume All Paused Printers","uri":"/printing/print-servers-print-queues-and-print-jobs/78143e6d-2ab8-415d-b2bf-c8b80bc47ae2/78143e6d-2ab8-415d-b2bf-c8b80bc47ae2/"},{"categories":["Printing"],"content":"Output from Technet Gallery Resumes all the paused printers on a print server. Visual Basic Const PRINTER_IS_PAUSED = 8 strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colInstalledPrinters = objWMIService.ExecQuery _ (\"Select * from Win32_Printer where ExtendedPrinterStatus = 8\") For Each objPrinter in colInstalledPrinters ObjPrinter.Resume() Next ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/78143e6d-2ab8-415d-b2bf-c8b80bc47ae2/78143e6d-2ab8-415d-b2bf-c8b80bc47ae2/:2:0","tags":["Active Directory","HTML"],"title":"Resume All Paused Printers","uri":"/printing/print-servers-print-queues-and-print-jobs/78143e6d-2ab8-415d-b2bf-c8b80bc47ae2/78143e6d-2ab8-415d-b2bf-c8b80bc47ae2/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Resume All Print Jobs Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/d6576176-c53f-42e4-a056-088d421bce5d/d6576176-c53f-42e4-a056-088d421bce5d/:1:0","tags":["Active Directory","HTML"],"title":"Resume All Print Jobs","uri":"/printing/print-servers-print-queues-and-print-jobs/d6576176-c53f-42e4-a056-088d421bce5d/d6576176-c53f-42e4-a056-088d421bce5d/"},{"categories":["Printing"],"content":"Output from Technet Gallery Resumes all the print jobs on a computer. Visual Basic strComputer = \".\" Set objWMIService = GetObject(\"winmgmts:\" _ \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colPrintJobs = objWMIService.ExecQuery _ (\"Select * from Win32_PrintJob\") For Each objPrintJob in colPrintJobs objPrintJob.Resume Next ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/d6576176-c53f-42e4-a056-088d421bce5d/d6576176-c53f-42e4-a056-088d421bce5d/:2:0","tags":["Active Directory","HTML"],"title":"Resume All Print Jobs","uri":"/printing/print-servers-print-queues-and-print-jobs/d6576176-c53f-42e4-a056-088d421bce5d/d6576176-c53f-42e4-a056-088d421bce5d/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Retrieve Duplex Printing Settings Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/62879402-6c9f-42f8-bb40-a3519a77ab86/62879402-6c9f-42f8-bb40-a3519a77ab86/:1:0","tags":["Active Directory","HTML"],"title":"Retrieve Duplex Printing Settings","uri":"/printing/printer-ports-and-printer-drivers/62879402-6c9f-42f8-bb40-a3519a77ab86/62879402-6c9f-42f8-bb40-a3519a77ab86/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **Stephane Courcy-Poitras HTA that retrieves duplex printing settings. These settings are kept in a binary key of the registry; the key is to discover which must be to changed to set duplex printing, because these values are specific to each driver. This HTA retrieves the initial values for selected printers drivers and then writes the changed bytes (offset and value) to a CSV file. This HTA is designed to be used along with the community scripts Exclude Printers From a Printer Configuration Script and Apply Printer Settings to Network Printers. Visual Basic \u003c!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"\u003e \u003chtml\u003e \u003chead\u003e \u003cmeta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\"\u003e \u003ctitle\u003ePrinter settings capture\u003c/title\u003e \u003cHTA:APPLICATION ID=\"CapturePrinterSettings\" APPLICATIONNAME=\"CapturePrinterSettings\" SCROLL=\"yes\" SINGLEINSTANCE=\"yes\" WINDOWSTATE=\"normal\"\u003e \u003c/head\u003e \u003cSCRIPT Language=\"VBScript\"\u003e ' ----------------------------------------------------------------------------------------- ' Capture network printers settings to CSV files. ' Script by Stéphane Courcy-Poitras ' ----------------------------------------------------------------------------------------- 'General declarations Const CleRacine = \"Printers\\Connections\\\" Const HKCU = \u0026H80000001 Dim WSHShell : Set WSHShell = CreateObject(\"WScript.Shell\") Dim WMI : Set WMI = GetObject(\"Winmgmts:\") Dim wmiLocator : Set wmiLocator = CreateObject(\"WbemScripting.SWbemLocator\") Dim NameSpace : Set NameSpace = wmiLocator.ConnectServer(\"\", \"root\\default\") Dim objRegistry : Set objRegistry = NameSpace.Get (\"StdRegProv\") Dim colPrinter : Set colPrinter = WMI.InstancesOf(\"Win32_printer\") Dim Dict : Set Dict = CreateObject(\"Scripting.Dictionary\") 'General functions and subs Sub EcrireFichier (Chemin,Contenu) 'Write Contenu in file Const ForWriting = 2 Dim oFSO: set oFSO = CreateObject(\"Scripting.FileSystemObject\") Dim oFic Set oFic = oFSO.OpenTextFile(Chemin,ForWriting,True) oFic.Write(Contenu) oFic.Close() Set oFic = Nothing Set oFSO = Nothing End Sub \u003c/SCRIPT\u003e \u003cbody\u003e \u003ch1\u003ePrinter settings capture\u003c/h1\u003e \u003cp\u003ePrinter's setting are kept in the registry as an array of binary values specific to each printer driver. Use this tool to capture and save changes made to printers settings values and later on apply those changes to printers sharing the same driver on any workstation using the ApplyPrinterSettings.vbs script.\u003c/p\u003e\u003cp\u003e\u003cspan class=\"Instructions\"\u003ePrinter's settings are kept in the DevMode registry key under HKCU\\Printers\\Connections\\\u0026lt;pinter name\u0026gt;.\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003cspan class=\"NumeroEtape\"\u003eStep 1: Select printers\u003c/span\u003e\u003c/p\u003e \u003cp\u003ePlease select the printers to capture. Select only one printer for each distinct driver. \u003c/p\u003e \u003cform action=\"\" name=\"Formulaire\" id=\"Formulaire\"\u003e \u003cdiv class=\"style1\"\u003e \u003ctable width=\"100%\" border=\"0\"\u003e \u003ctr bgcolor=\"#FFFFCC\"\u003e \u003ctd width=\"4%\" valign=\"top\"\u003e\u0026nbsp;\u003c/td\u003e \u003ctd width=\"56%\" valign=\"top\"\u003e\u003cstrong\u003ePrinter\u003c/strong\u003e\u003c/td\u003e \u003ctd width=\"56%\" valign=\"top\"\u003e\u003cstrong\u003eDriver\u003c/strong\u003e\u003c/td\u003e \u003ctd width=\"40%\" valign=\"TOP\"\u003e\u003cstrong\u003eCapture\u003c/strong\u003e\u003c/td\u003e \u003ctr\u003e \u003cscript language=\"vbscript\"\u003e 'Display available printers with check boxes For Each oPrinter In colPrinter If (oPrinter.ServerName \u003c\u003e \"\") Then 'Display only network printers ServerName = \"\" for local printers Document.write \"\u003ctr\u003e\" Document.write \"\u003ctd width=\"\"4%\"\" valign=\"\"top\"\"\u003e\u0026nbsp;\u003c/td\u003e\" Document.write \"\u003ctd width=\"\"56%\"\" valign=\"\"top\"\"\u003e\" \u0026 oPrinter.Name \u0026 \"\u003c/td\u003e\" Document.write \"\u003ctd width=\"\"56%\"\" valign=\"\"top\"\"\u003e\" \u0026 oPrinter.DriverName \u0026 \"\u003c/td\u003e\" Document.write \"\u003ctd width=\"\"40%\"\" valign=\"\"TOP\"\"\u003e\" Document.write \"\u003cinput name=\"\"\" \u0026 oPrinter.Name \u0026 \"\"\"type=\"\"checkbox\"\" value=\"\"1\"\" id=\"\"\" \u0026 oPrinter.name \u0026 \"\"\"\u003e\" Document.write \"\u003c/td\u003e\" Document.write \"\u003c/tr\u003e\" End If Next \u003c/script\u003e \u003c/table\u003e \u003cp\u003e\u003cspan class=\"NumeroEtape\"\u003eStep 2: Set initial printer's setting \u003c/span\u003e\u003c/p\u003e \u003cp\u003eTo capture the changes made to printers settings array you must","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/62879402-6c9f-42f8-bb40-a3519a77ab86/62879402-6c9f-42f8-bb40-a3519a77ab86/:2:0","tags":["Active Directory","HTML"],"title":"Retrieve Duplex Printing Settings","uri":"/printing/printer-ports-and-printer-drivers/62879402-6c9f-42f8-bb40-a3519a77ab86/62879402-6c9f-42f8-bb40-a3519a77ab86/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Retrieve project permissions via SQL Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/retrieve-permissions-via-f5ba6daa/retrieve-permissions-via-f5ba6daa/:1:0","tags":["Active Directory","HTML"],"title":"Retrieve project permissions via SQL","uri":"/project-server/retrieve-permissions-via-f5ba6daa/retrieve-permissions-via-f5ba6daa/"},{"categories":["Project Server"],"content":"Output from Technet Gallery SQL --2010 version SELECT proj_name as project,r.res_name as who,wc.CONV_string as permission FROM [MSP_WEB_SECURITY_SP_CAT_PERMISSIONS] scp inner join [MSP_WEB_SECURITY_SP_CAT_RELATIONS] scr on scr.WSEC_REL_UID =scp.WSEC_REL_UID inner join [MSP_WEB_SECURITY_PROJECT_CATEGORIES] spc on spc.WSEC_CAT_UID =scr.WSEC_CAT_UID inner join msp_projects p on spc.PROJ_UID =p.proj_uid inner join msp_resources r on scr.WSEC_SP_GUID =r.RES_SECURITY_GUID inner join [MSP_WEB_SECURITY_FEATURES_ACTIONS] sfa on sfa.WSEC_FEA_ACT_UID =scp.WSEC_FEA_ACT_UID inner join [MSP_WEB_CONVERSIONS] wc on wc.CONV_VALUE =sfa.WSEC_FEA_ACT_NAME_ID where wc.LANG_ID=1033 union SELECT proj_name as project,sg.WSEC_GRP_NAME as who,wc.CONV_string as permission FROM [MSP_WEB_SECURITY_SP_CAT_PERMISSIONS] scp inner join [MSP_WEB_SECURITY_SP_CAT_RELATIONS] scr on scr.WSEC_REL_UID =scp.WSEC_REL_UID inner join [MSP_WEB_SECURITY_PROJECT_CATEGORIES] spc on spc.WSEC_CAT_UID =scr.WSEC_CAT_UID inner join msp_projects p on spc.PROJ_UID =p.proj_uid inner join msp_web_security_groups sg on scr.WSEC_SP_GUID =sg.WSEC_GRP_GUID inner join [MSP_WEB_SECURITY_FEATURES_ACTIONS] sfa on sfa.WSEC_FEA_ACT_UID =scp.WSEC_FEA_ACT_UID inner join [MSP_WEB_CONVERSIONS] wc on wc.CONV_VALUE =sfa.WSEC_FEA_ACT_NAME_ID where wc.LANG_ID=1033 --2013 version: SELECT proj_name as project,r.res_name as who,wc.CONV_string as permission FROM pub.[MSP_WEB_SECURITY_SP_CAT_PERMISSIONS] scp inner join pub.[MSP_WEB_SECURITY_SP_CAT_RELATIONS] scr on scr.WSEC_REL_UID =scp.WSEC_REL_UID inner join pub.[MSP_WEB_SECURITY_PROJECT_CATEGORIES] spc on spc.WSEC_CAT_UID =scr.WSEC_CAT_UID inner join pub.msp_projects p on spc.PROJ_UID =p.proj_uid inner join pub.MSP_WEB_SECURITY_CLAIMS c on c.SECURITY_GUID =scr.WSEC_SP_GUID inner join pub.msp_resources r on c.ENCODED_CLAIM =r.WRES_CLAIMS_ACCOUNT inner join pub.[MSP_WEB_SECURITY_FEATURES_ACTIONS] sfa on sfa.WSEC_FEA_ACT_UID =scp.WSEC_FEA_ACT_UID inner join pub.[MSP_WEB_CONVERSIONS] wc on wc.CONV_VALUE =sfa.WSEC_FEA_ACT_NAME_ID where wc.LANG_ID=1033 union SELECT proj_name as project,sg.WSEC_GRP_NAME as who,wc.CONV_string as permission FROM pub.[MSP_WEB_SECURITY_SP_CAT_PERMISSIONS] scp inner join pub.[MSP_WEB_SECURITY_SP_CAT_RELATIONS] scr on scr.WSEC_REL_UID =scp.WSEC_REL_UID inner join pub.[MSP_WEB_SECURITY_PROJECT_CATEGORIES] spc on spc.WSEC_CAT_UID =scr.WSEC_CAT_UID inner join pub.msp_projects p on spc.PROJ_UID =p.proj_uid inner join pub.msp_web_security_groups sg on scr.WSEC_SP_GUID =sg.WSEC_GRP_GUID inner join pub.[MSP_WEB_SECURITY_FEATURES_ACTIONS] sfa on sfa.WSEC_FEA_ACT_UID =scp.WSEC_FEA_ACT_UID inner join pub.[MSP_WEB_CONVERSIONS] wc on wc.CONV_VALUE =sfa.WSEC_FEA_ACT_NAME_ID where wc.LANG_ID=1033 Project permissions allow the users to grant permissions themselves without an administrator being envolved. But this can make it difficult to get an overview who has permissions on which project. With this SQL query you can get a list of all individual project permissions that have been granted in your PWA instance Project Server 2010 and Project Server 2013 version. Works only on premise. Exchange the language code 1033 (english) to the language you want to see for the permission strings (e.g. 1031 for german). ","date":"2019-12-01","objectID":"/project-server/retrieve-permissions-via-f5ba6daa/retrieve-permissions-via-f5ba6daa/:2:0","tags":["Active Directory","HTML"],"title":"Retrieve project permissions via SQL","uri":"/project-server/retrieve-permissions-via-f5ba6daa/retrieve-permissions-via-f5ba6daa/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Ricoh Multi Function Printer (MFP) Address Book PowerShell Module 2.0 Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/ricoh-multi-function-944d4a46/ricoh-multi-function-944d4a46/:1:0","tags":["Active Directory","HTML"],"title":"Ricoh Multi Function Printer (MFP) Address Book PowerShell Module 2.0","uri":"/printing/printer-ports-and-printer-drivers/ricoh-multi-function-944d4a46/ricoh-multi-function-944d4a46/"},{"categories":["Printing"],"content":"Output from Technet Gallery Original: https://gallery.technet.microsoft.com/scriptcenter/Ricoh-Multi-Function-27aeea71 This adds the ability to specify Network Share Destinations. You may notice that I didn’t flesh out the ability to specify a username and password for the shares. I did this intentionally as Ricoh/Savin devices have the ability to use a default set of credentials specified under Configuration-\u003eFile Transfer. Generally I create a single service account for a scanner and give that account write access to the target share so the copy machine doesn’t need to have a copy of everyone’s credentials. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/ricoh-multi-function-944d4a46/ricoh-multi-function-944d4a46/:2:0","tags":["Active Directory","HTML"],"title":"Ricoh Multi Function Printer (MFP) Address Book PowerShell Module 2.0","uri":"/printing/printer-ports-and-printer-drivers/ricoh-multi-function-944d4a46/ricoh-multi-function-944d4a46/"},{"categories":["Printing"],"content":"Basic Sample Import-Module RICOH-MFP-AB # Connect Connect-MFP -Hostname 10.19.1.200 -Username admin -Password \"\" # Get all entries $AB = Get-MFPAB # Remove all existing entries Remove-MFPAB -ID $AB.ID # Add single entry Add-MFPAB -Name \"Darren\" -sender $false -LongName \"Darren K\" -FolderPath \"\\\\DARREN-LPTP\\Scans\" -MailAddress \"darren@contoso.com\" # Disconnect Disconnect-MFP ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/ricoh-multi-function-944d4a46/ricoh-multi-function-944d4a46/:3:0","tags":["Active Directory","HTML"],"title":"Ricoh Multi Function Printer (MFP) Address Book PowerShell Module 2.0","uri":"/printing/printer-ports-and-printer-drivers/ricoh-multi-function-944d4a46/ricoh-multi-function-944d4a46/"},{"categories":["Printing"],"content":"Advanced Usage # This will find all users in Active Directory and add them to all IP Printers # This of course assumes you only have Ricoh devices mapped to the server. You can filter that out more cleverly if you desire or use a static list of IP addresses # It will also attempt to find computers they login to and assume a \\Scan share exists and create a destination entry for that. Import-Module RICOH-MFP-AB $IPPrinters = Get-Printer | ?{ [System.Net.IPAddress]::TryParse($_.PortName,[ref]$null)} $Users = Get-ADUser -filter \"*\" -Properties * | ?{([string]::IsNullOrEmpty($_.EmailAddress)) -eq $false} $Computers = Get-ADComputer -Filter \"*\" $UsersThatMatchComputers = $Users | ?{$_.givenName -notlike \"\"} | %{ $User = $_; $MatchingComputers = $Computers | ?{ $_.Name -like \"$($User.SamAccountName)*\" -or $_.Name -like \"$($User.givenName)*\"} $MatchingComputers | %{ new-object psobject -Property @{Computer=$_;User=$User}} } $UsersThatMatchComputers foreach ($IPPrinter in $IPPrinters) { $MFP = @{Hostname=$IPPrinter.Portname;UserName=\"admin\";Password=\"\";Authentication=\"BASIC\"} Connect-MFP @MFP $AB = Get-MFPAB if($AB) { Remove-MFPAB -ID $AB.ID } foreach ($MatchObject in $UsersThatMatchComputers) { try { Add-MFPAB -Name $MatchObject.User.givenName -sender $false -LongName $MatchObject.User.DisplayName -FolderPath \"\\\\$($MatchObject.computer.name)\\Scans\" -MailAddress $MatchObject.user.EmailAddress } catch { Write-Warning \"Error adding $($MatchObject.User.DisplayName) to $($IPPrinter.PortName) ($($IPPrinter.Name))\" } } Disconnect-MFP } ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/ricoh-multi-function-944d4a46/ricoh-multi-function-944d4a46/:4:0","tags":["Active Directory","HTML"],"title":"Ricoh Multi Function Printer (MFP) Address Book PowerShell Module 2.0","uri":"/printing/printer-ports-and-printer-drivers/ricoh-multi-function-944d4a46/ricoh-multi-function-944d4a46/"},{"categories":["Printing"],"content":"Original Links Original Technet URL rminal Server 2008 Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/4bd5dfe9-c79a-41c9-99e3-b5d1f629dfd5/4bd5dfe9-c79a-41c9-99e3-b5d1f629dfd5/:1:0","tags":["Active Directory","HTML"],"title":"rminal Server 2008","uri":"/printing/print-servers-print-queues-and-print-jobs/4bd5dfe9-c79a-41c9-99e3-b5d1f629dfd5/4bd5dfe9-c79a-41c9-99e3-b5d1f629dfd5/"},{"categories":["Printing"],"content":"Output from Technet Gallery In TS 2008 if your print spooler crash all of your redirected printer goes offline. This script take ownership and security of those printers and bring those printers online. Run it from SYSTEM account net stop spooler del /q %systemroot%\\system32\\spool\\printers\\*.* net start spooler subinacl /printer * /setowner=administrators subinacl /printer * /grant=\"Print Operators” cscript makeonline.vbs Visual Basic option explicit const kNameSpace = \"root\\cimv2\" dim strServer dim strUser dim strPassword dim Printers dim oService dim oPrinter dim iTotal if WmiConnect(strServer, kNameSpace, strUser, strPassword, oService) then set Printers = oService.InstancesOf(\"Win32_Printer\") iTotal = 0 for each oPrinter in Printers iTotal = iTotal + 1 if oPrinter.Workoffline=-1 then oPrinter.Workoffline=0 oPrinter.Put_(1) end if next end if function WmiConnect(strServer, strNameSpace, strUser, strPassword, oService) on error resume next dim oLocator dim bResult oService = null bResult = false set oLocator = CreateObject(\"WbemScripting.SWbemLocator\") if Err = kErrorSuccess then set oService = oLocator.ConnectServer(strServer, strNameSpace, strUser, strPassword) if Err = kErrorSuccess then bResult = true oService.Security_.impersonationlevel = 3 oService.Security_.Privileges.AddAsString \"SeLoadDriverPrivilege\" Err.Clear end if end if WmiConnect = bResult end function ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/4bd5dfe9-c79a-41c9-99e3-b5d1f629dfd5/4bd5dfe9-c79a-41c9-99e3-b5d1f629dfd5/:2:0","tags":["Active Directory","HTML"],"title":"rminal Server 2008","uri":"/printing/print-servers-print-queues-and-print-jobs/4bd5dfe9-c79a-41c9-99e3-b5d1f629dfd5/4bd5dfe9-c79a-41c9-99e3-b5d1f629dfd5/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Save print server settings scrip Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/save-printer-server-90a75354/save-printer-server-90a75354/:1:0","tags":["Active Directory","HTML"],"title":"Save print server settings scrip","uri":"/printing/print-servers-print-queues-and-print-jobs/save-printer-server-90a75354/save-printer-server-90a75354/"},{"categories":["Printing"],"content":"Output from Technet Gallery Use this script the save printer settings on all shared printers on a print server. Then use the second script, MigratePrinters.ps1 (http://gallery.technet.microsoft.com/scriptcenter/Migrate-printers-script-ab044c5f) to import the printers to a new print server. Must be run from a Windows 2012/8+ computer with print server role enabled, but can be run against a Windows 2008/Vista+ machine. When ran, a .csv file will created on the desktop. This file can be updated with Excel to update print driver names if changing drivers, like installing universal drivers or update comments or location information. Remove rows in the spreadsheet to skip the migration of a specific printer and port. [CmdletBinding()] Param( [Parameter(Mandatory=$True,Position=1)] [string]$SourceComputerName ) # Gets the shared printers on the machine $p=get-printer -ComputerName $SourceComputerName|?{$_.Shared -eq $true} # Saves the printer settings in a CSV file on the current user's desktop $p|select *|Export-Csv -Path \"$env:USERPROFILE\\Desktop\\printers.csv\" -NoTypeInformation ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/save-printer-server-90a75354/save-printer-server-90a75354/:2:0","tags":["Active Directory","HTML"],"title":"Save print server settings scrip","uri":"/printing/print-servers-print-queues-and-print-jobs/save-printer-server-90a75354/save-printer-server-90a75354/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Script to backup Windows Server 2008R2 Printer configuration. Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/script-to-backup-windows-fcc24c7b/script-to-backup-windows-fcc24c7b/:1:0","tags":["Active Directory","HTML"],"title":"Script to backup Windows Server 2008R2 Printer configuration.","uri":"/printing/printer-ports-and-printer-drivers/script-to-backup-windows-fcc24c7b/script-to-backup-windows-fcc24c7b/"},{"categories":["Printing"],"content":"Output from Technet Gallery This PowerShell script will backup Windows Server printer configuration to a specified location. Create a folder in C:\\ Delete old printer backup file (Scheduled to run Monthly due to printer configuration changes) Backup printer configuration to a folder in C:\\ Another job to backup printer backup to a server in HO/ off-site location. Tested with Windows Server 2008 R2. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/script-to-backup-windows-fcc24c7b/script-to-backup-windows-fcc24c7b/:2:0","tags":["Active Directory","HTML"],"title":"Script to backup Windows Server 2008R2 Printer configuration.","uri":"/printing/printer-ports-and-printer-drivers/script-to-backup-windows-fcc24c7b/script-to-backup-windows-fcc24c7b/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Script to copy the contents of the ISE or a file to the printer Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/client-side-printing/script-to-copy-the-c55f0106/script-to-copy-the-c55f0106/:1:0","tags":["Active Directory","HTML"],"title":"Script to copy the contents of the ISE or a file to the printer","uri":"/printing/client-side-printing/script-to-copy-the-c55f0106/script-to-copy-the-c55f0106/"},{"categories":["Printing"],"content":"Output from Technet Gallery This script will create an html version of the current script (or current selection) in the ISE or the specified file using an Internet Explorer com object. The html object includes line numbers. Once the html is built, and the IE window is opened, you can print using IE’s print functions. This script is extracted from a module I use to provide basic functions in the ISE that I miss from PowerGUI, or which I had added as script editor add-ons to PowerGui. This is based on Lee Holmes Set-ClipboardScript located here: http://www.leeholmes.com/blog/2009/02/03/more-powershell-syntax-highlighting/ For more information see http://unlockpowershell.wordpress.com/2011/12/30/print-from-powershells-integrated-scripting-environment/ This is modified as of January 30, 2013 to work with Windows Server 2012. Essentially, we need to force the browser into compatability mode. Updated again, as I noticed a problem where sometimes the print preview does not open as the page has not fully rendered. Added line 231: Start-Sleep -Seconds 1 This may need to be modified in your environment. Modified May 8th, 2013 - test for CompatibilityMode value in registry, and if not present, do not attemt to set it, This is modified as of February 02, 2017 to work with Windows 10. We need to force the browser to be visible on Eindows 10. ","date":"2019-12-01","objectID":"/printing/client-side-printing/script-to-copy-the-c55f0106/script-to-copy-the-c55f0106/:2:0","tags":["Active Directory","HTML"],"title":"Script to copy the contents of the ISE or a file to the printer","uri":"/printing/client-side-printing/script-to-copy-the-c55f0106/script-to-copy-the-c55f0106/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Script to fix issues described in KB2027593 Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/script-to-fix-issues-1763321b/script-to-fix-issues-1763321b/:1:0","tags":["Active Directory","HTML"],"title":"Script to fix issues described in KB2027593","uri":"/printing/print-servers-print-queues-and-print-jobs/script-to-fix-issues-1763321b/script-to-fix-issues-1763321b/"},{"categories":["Printing"],"content":"Output from Technet Gallery Script to fix issues described in KB2027593 ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/script-to-fix-issues-1763321b/script-to-fix-issues-1763321b/:2:0","tags":["Active Directory","HTML"],"title":"Script to fix issues described in KB2027593","uri":"/printing/print-servers-print-queues-and-print-jobs/script-to-fix-issues-1763321b/script-to-fix-issues-1763321b/"},{"categories":["Printing"],"content":"Introduction This sample can help you resolve the issue “The new printer status is Offline after you delete a print queue and then restart a Windows-based computer” described in KB2027593. It demonstrates how to list printers, print queues and how to delete evil registry key for print queue by using PowerShell script. This script completes the tasks by using registry and WMI Win32_Printer class. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/script-to-fix-issues-1763321b/script-to-fix-issues-1763321b/:3:0","tags":["Active Directory","HTML"],"title":"Script to fix issues described in KB2027593","uri":"/printing/print-servers-print-queues-and-print-jobs/script-to-fix-issues-1763321b/script-to-fix-issues-1763321b/"},{"categories":["Printing"],"content":"Scenarios Consider the following scenario: You delete a print queue while it is in an Offline status. You add a new print queue that has the same name as the old print queue. You restart the computer. In this scenario, the status of the new print queue is displayed as Offline. To solve this issue, you can use this script to get and remove evil registry key which cause the problem after you delete a print queue but before you add a new print queue of the same name. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/script-to-fix-issues-1763321b/script-to-fix-issues-1763321b/:4:0","tags":["Active Directory","HTML"],"title":"Script to fix issues described in KB2027593","uri":"/printing/print-servers-print-queues-and-print-jobs/script-to-fix-issues-1763321b/script-to-fix-issues-1763321b/"},{"categories":["Printing"],"content":"Script This script contains the following advanced functions: Get-OSCPrinter Get-OSCPrintQueue Remove-OSCEvilPrintQueueRegkey You can use this script in the following ways: Method 1: 1. Download the script and copy it to your computer. 2. Open the script file with Notepad or any other script editors. 3. Scroll down to the end of the script file, and then add the code to call the functions. 4. Save the file and then run the script on the computer. Method 2: 1. Rename scriptname.ps1 to scriptname.psm1 (PowerShell Module file) 2. Run Import-Module cmdlet to import this module file in PowerShell Console. Import-Module filepath*scriptname*.psm1 Here are some code snippets for your references. To get the complete script sample, please click the download button at the beginning of this page. Try{ $KeyPrintQueue = $BaseKeyPrintQueues.OpenSubKey(` \"System\\CurrentControlSet\\Control\\Print\\Printers\\\" ` + $KeyPrintQueueName, $false) } Catch{ Write-Error ($Message.FailToOpenSubKey + \" [HKEY_CURRENT_CONFIG\\System\\CurrentControlSet\\Control\\\" + \"Print\\Printers\\\" + $KeyPrintQueueName +\" ]\") return $Null } $KeyPrintQueueValuesList = $KeyPrintQueue.GetValueNames() If($KeyPrintQueueValuesList -contains 'PrinterOnLine'){ $ValueType = $KeyPrintQueue.GetValueKind('PrinterOnLine') If ($ValueType -eq \"Dword\"){ If($KeyPrintQueue.GetValue(\"PrinterOnLine\") -eq 0){ $OSCPrintQueue = New-Object -TypeName PSObject $OSCPrintQueue | Add-Member NoteProperty PrintQueueName ` $KeyPrintQueue.Name.Replace( 'HKEY_CURRENT_CONFIG\\System\\CurrentControlSet\\Control\\Print\\Printers\\','') $OSCPrintQueue | Add-Member NoteProperty Printer $null $OSCPrintQueue | Add-Member NoteProperty ` PrinterDriver $null $OSCPrintQueue | Add-Member NoteProperty Computer ` $Computer $OSCPrintQueue | Add-Member NoteProperty IsEvilPrintQueue $true # Get the printer info of a print queue Foreach($OSCPrinter in $OSCPrinters){ $PrinterName = [String]$OSCPrinter.PrinterName $PrintQueueName = $KeyPrintQueueName If($PrintQueueName -eq $OSCPrinter.PrinterName){ $OSCPrintQueue.Printer = $OSCPrinter.PrinterName $OSCPrintQueue.PrinterDriver = ` $OSCPrinter.PrinterDriver $OSCPrintQueue.IsEvilPrintQueue = $false } Else{ While($PrintQueueName -match \"^.{1,}(\\s){1}\\(redirected(\\s)[1-9][0-9]*\\)$\"){ $PrintQueueName = $PrintQueueName.Substring(` 0,$PrintQueueName.LastIndexof(' (redirected')) If($PrintQueueName -eq $OSCPrinter.PrinterName){ $OSCPrintQueue.Printer = $OSCPrinter.PrinterName $OSCPrintQueue.PrinterDriver = ` $OSCPrinter.PrinterDriver $OSCPrintQueue.IsEvilPrintQueue = $false Break } } } } $OSCPrintQueues += $OSCPrintQueue } } } ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/script-to-fix-issues-1763321b/script-to-fix-issues-1763321b/:5:0","tags":["Active Directory","HTML"],"title":"Script to fix issues described in KB2027593","uri":"/printing/print-servers-print-queues-and-print-jobs/script-to-fix-issues-1763321b/script-to-fix-issues-1763321b/"},{"categories":["Printing"],"content":"Examples **Example 01: **Get all printers ** Command: Get-OSCPrinter Screenshot: ** **Example 02: **Get a specific printer ** Command: Get-OSCPrinter -Printer \u003cPrinterName\u003e Screenshot: ** **Example 03: Get all print queues Command: Get-OSCPrinter -Printer \u003cPrinterName\u003e Screenshot: ** **Example 04: Get print queue of a specific printer Command: Get- OSCPrintQueue -Printer \u003cPrinterName\u003e Screenshot: ** **Example 05: Delete evil registry key for a specific print queue Command: Remove-OSCEvilPrintQueueRegKey -PrintQueue \u003cPrintQueueName\u003e Screenshot: ** **Example 06: Delete all evil registry keys for print queues in the current computer Command: Remove-OSCEvilPrintQueueRegKey Screenshot: ** ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/script-to-fix-issues-1763321b/script-to-fix-issues-1763321b/:6:0","tags":["Active Directory","HTML"],"title":"Script to fix issues described in KB2027593","uri":"/printing/print-servers-print-queues-and-print-jobs/script-to-fix-issues-1763321b/script-to-fix-issues-1763321b/"},{"categories":["Printing"],"content":"Prerequisites Windows PowerShell 2.0 ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/script-to-fix-issues-1763321b/script-to-fix-issues-1763321b/:7:0","tags":["Active Directory","HTML"],"title":"Script to fix issues described in KB2027593","uri":"/printing/print-servers-print-queues-and-print-jobs/script-to-fix-issues-1763321b/script-to-fix-issues-1763321b/"},{"categories":["Printing"],"content":"Additional Resources **Technical Resource: ** The new printer status is “Offline” after you delete a print queue and then restart a Windows-based computer Win32_Printer class ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/script-to-fix-issues-1763321b/script-to-fix-issues-1763321b/:8:0","tags":["Active Directory","HTML"],"title":"Script to fix issues described in KB2027593","uri":"/printing/print-servers-print-queues-and-print-jobs/script-to-fix-issues-1763321b/script-to-fix-issues-1763321b/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Script to generate print job accounting reports by print job and by user Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/script-to-generate-print-84bdcf69/script-to-generate-print-84bdcf69/:1:0","tags":["Active Directory","HTML"],"title":"Script to generate print job accounting reports by print job and by user","uri":"/printing/print-servers-print-queues-and-print-jobs/script-to-generate-print-84bdcf69/script-to-generate-print-84bdcf69/"},{"categories":["Printing"],"content":"Output from Technet Gallery ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/script-to-generate-print-84bdcf69/script-to-generate-print-84bdcf69/:2:0","tags":["Active Directory","HTML"],"title":"Script to generate print job accounting reports by print job and by user","uri":"/printing/print-servers-print-queues-and-print-jobs/script-to-generate-print-84bdcf69/script-to-generate-print-84bdcf69/"},{"categories":["Printing"],"content":"Brief Description This is a PowerShell script designed to be run on a scheduled basis to extract print job accounting reports from the Windows Event log. It creates two reports in .CSV format, one listing individual print jobs and the other providing a total number of pages printed by each user. It accounts for multiple copies printed to get a total page count for each print job. This script is used to provide a monthly accounting of printer usage by individual to enable printer accounting charges to be allocated back to appropriate departments. The script was last updated on Feb. 11, 2019. Further details and usage information are listed in the script code itself, below. My thanks to Mennonite Central Committee Canada for sponsoring the bulk of the development on this script, and to the authors (referenced in the web links below) of other scripts that influenced this script. Tim Miller Dyck, PeaceWorks Technology Solutions ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/script-to-generate-print-84bdcf69/script-to-generate-print-84bdcf69/:3:0","tags":["Active Directory","HTML"],"title":"Script to generate print job accounting reports by print job and by user","uri":"/printing/print-servers-print-queues-and-print-jobs/script-to-generate-print-84bdcf69/script-to-generate-print-84bdcf69/"},{"categories":["Printing"],"content":"References Here are references to web pages that contained related information: Original script written by Sh_Con and posted in Feb. 2010 at “VB script or PowerShell script for auditing Win2k8 Print server”, http://social.technet.microsoft.com/Forums/en-US/ITCG/thread/007be664-1d8d-461c-9e0b-d8177106d4f8 BSOD2600 then modified and posted some changes in May 2011, also at “VB script or PowerShell script for auditing Win2k8 Print server”, http://social.technet.microsoft.com/Forums/en-US/ITCG/thread/007be664-1d8d-461c-9e0b-d8177106d4f8 “No record of copies in PrintService log, EventID 307, prevents use in print server page accounting”, http://social.technet.microsoft.com/Forums/en-US/winserverprint/thread/d6ffd4b8-3e39-4652-8a59-34a3ce881296 “Trying to get number of copies printed or a real total of the pages printed by a computer, and yes ive read the other posts”, http://social.technet.microsoft.com/Forums/en-US/winserverprint/thread/2e4db030-6575-4688-92c4-95452abe8392 Windows 2003 Server: see http://social.technet.microsoft.com/Forums/en-US/winserverprint/thread/4b27b3ee-2b15-4374-84e6-5e0b2c6c09fc for a script to pull printing event log records out to a CSV file “No record of copies in PrintService log, EventID 307, prevents use in print server page accounting”, http://social.technet.microsoft.com/Forums/en-US/winserverprint/thread/d6ffd4b8-3e39-4652-8a59-34a3ce881296/#712afe49-86be-491b-af26-99991ee4257b (look in event ID 805 to get the number of copies) Jeffrey S. Patton has written scripts to do print server job accounting using Event ID triggers instead of the scheduled job approach I used. I only found his scripts several months after writing the script below but, from a brief look, it appears the event trigger approach allows WMI querying of the job while it is still in the print queue, which exposes additional information such as paper size that is not recorded in the event log records. “PowerShell Print Logger”, http://gallery.technet.microsoft.com/scriptcenter/PowerShell-Print-Logger-09a6f4e0 “New-PrintJob”, http://gallery.technet.microsoft.com/New-PrintJob-2f43062f ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/script-to-generate-print-84bdcf69/script-to-generate-print-84bdcf69/:4:0","tags":["Active Directory","HTML"],"title":"Script to generate print job accounting reports by print job and by user","uri":"/printing/print-servers-print-queues-and-print-jobs/script-to-generate-print-84bdcf69/script-to-generate-print-84bdcf69/"},{"categories":["Printing"],"content":"Requirements and prerequisites In the examples below, I used “D:\\Scripts” as a location for the scripts and output .CSV files Please see the requirements and prerequisites section in the script code below for additional steps needed ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/script-to-generate-print-84bdcf69/script-to-generate-print-84bdcf69/:5:0","tags":["Active Directory","HTML"],"title":"Script to generate print job accounting reports by print job and by user","uri":"/printing/print-servers-print-queues-and-print-jobs/script-to-generate-print-84bdcf69/script-to-generate-print-84bdcf69/"},{"categories":["Printing"],"content":"Limitations The script is dependent on the accuracy of information logged by the Windows print subsystem to the Windows event log. Field experience has shown this information is not always correct, and depends on the specific print drivers and printers used. Specific error cases that have come up so far and fixes found are listed in the script code. The print accounting data reported in the Windows Event Log ignores duplexing settings. The counts reflect sides of pages printed, not the physical number of sheets of paper used. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/script-to-generate-print-84bdcf69/script-to-generate-print-84bdcf69/:6:0","tags":["Active Directory","HTML"],"title":"Script to generate print job accounting reports by print job and by user","uri":"/printing/print-servers-print-queues-and-print-jobs/script-to-generate-print-84bdcf69/script-to-generate-print-84bdcf69/"},{"categories":["Printing"],"content":"GeneratePrintJobAccountingReports.ps1 Create the script GeneratePrintJobAccountingReports.ps1 Windows Shell Script notepad D:\\Scripts\\GeneratePrintJobAccountingReports.ps1 This is the Feb. 2019 version of this script \u003c# GeneratePrintJobAccountingReports.ps1 ver. 2019-02-11-01 This script reads event log ID 307 and ID 805 from the log \"Applications and Services Logs \u003e Microsoft \u003e Windows \u003e PrintService\" from the specified server and for the specified time period and then calculates print job and total page count data from these event log entries. It then writes the output to two .CSV files, one showing by-print job data and the other showing by-user print job data. The script depends on specific event log data and text strings in event log ID 307 and 805 records. Tested on: Windows Server 2012 R2 Windows Server 2008 R2 Requirements: - Ensure the .NET Framework 3.5 or later is installed: - Add \".NET Framework 3.5.1\" under the \".NET Framework 3.5.1 Features\" option using the \"Add Features\" option of Server Manager, or - All Programs \u003e Accessories \u003e Windows PowerShell \u003e right-click Windows PowerShell \u003e Run as administrator... Import-Module ServerManager Add-WindowsFeature NET-Framework-Core - Enable and configure print job event logging on the desired print server: - start Devices and Printers \u003e (highlight any printer) \u003e Print server properties \u003e Advanced - check \"Show informational notifications for local printers\" - check \"Show informational notifications for network printers\" - OK - start Event Viewer \u003e Applications and Services Logs \u003e Microsoft \u003e Windows \u003e PrintService - right-click Operational \u003e Enable Log - right-click Operational \u003e Properties \u003e Maximum log size (KB): 65536 (was 1028 KB by default) - OK - Ensure that the user account used to run the script has write permission to the destination directory that will hold the output .CSV files (\"D:\\Scripts\\\" in the code below). Change the .CSV paths and filenames in the code below as desired. - If the print server is a remote server, ensure that the user account used to run the script has remote procedure call network access to the specified hostname, and that firewall rules permit such network access. - If the print server is logging events using a language other than English, customize the ID 805 message search string below to match the language-appropriate string used in the print server's event ID 805 event log message. Usage: - see the PrintCommandLineUsage function, below Exit codes: - errorlevel 0 indicates no error (records were found and generated, or no records were found) - errorlevel 1 indicates an error (unparsable command-line parameters or missing ID 805 event log records) Implementation notes: - Case of a HP LaserJet P2055dn printer using the HP Universal Printing PCL 5 (v5.2) driver The printer reports 0 copies on all jobs. If a print job reporting 0 copies is seen by the script, it will output a warning and then consider the affected print job to be printed with 1 copy as a guess of what the actual number of copies was. The fix for this particular case was to upgrade the print driver to the HP Universal Printing PCL 5 (v5.5.0) driver. - Case of a HP LaserJet Pro 400 color printer model M451dn (CE957A) using the HP Universal Printing driver PCL 6 (v5.0.3), the HP Universal Printing PCL 5 (v5.2) driver and the HP Universal Printing PS driver (v.5.0.3): In all cases, this printer reports 1 copy of all jobs in Event ID 805, even when the user prints more than 1 copy of the job. There is no way for the script to detect this. It was discovered through observation. The fix was to clear the printer properties setting \"Sharing \u003e Render print jobs on client computers\" (which is _enabled_ by default). With this change, the number of copies per job was reported accurately in the Windows event log. SUGGESTION: Check the generated .CSV file the first month and look check for printers that only ever report 1 copy of all jobs. These printers may need the work-around to rende","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/script-to-generate-print-84bdcf69/script-to-generate-print-84bdcf69/:7:0","tags":["Active Directory","HTML"],"title":"Script to generate print job accounting reports by print job and by user","uri":"/printing/print-servers-print-queues-and-print-jobs/script-to-generate-print-84bdcf69/script-to-generate-print-84bdcf69/"},{"categories":["Printing"],"content":"GenerateAndEMailPrintJobAccountingReports.cmd This script is a Windows .cmd script to call the PowerShell script above and then e-mail the resulting reports to desired recipients It uses blat.exe from http://www.blat.net/ to send e-mail Windows Shell Script notepad D:\\Scripts\\GenerateAndEMailPrintJobAccountingReports.cmd Windows Shell Script @echo off REM Run this script on the first day of each month to generate and e-mail detail and summary reports of printer usage by username REM set the Blat error log filename REM %~f0 is the fully-qualified path name of this script. Note the Windows \"Region and Language\" format needs to be \"English (United States)\" (so the date environment variable is of the format \"Sun 11/13/2011\") set BLATERRORLOGFILENAME=\"%~f0-%date:~-4%%date:~4,2%%date:~7,2%-%time:~0,2%%time:~3,2%-ERROR.log\" REM generate print job reports for specified print server for the specified time period powershell.exe -command \"D:\\Scripts\\GeneratePrintJobAccountingReports.ps1 localhost PreviousMonth\" if not %ERRORLEVEL%==0 goto REPORT_ERROR REM the print job report succeeded, so mail the generated reports to the desired recipient \"\\\\%USERDOMAIN%\\NETLOGON\\Blat\\blat.exe\" - -f printserverreports@domain.local -to destinationaddress@domain.local -server mailserver.domain.local -subject \"Print server usage report\" -body \"The print server usage report is attached.\" -attach \"D:\\Scripts\\Print job accounting report*.csv\" -log %BLATERRORLOGFILENAME% REM check if the e-mail was sent successfully (error level 0 returned); if it was, delete the Blat log file to clean up; if it was not, display an error message to the console and leave the full error log file in place if %ERRORLEVEL%==0 (del %BLATERRORLOGFILENAME%) else (echo ERROR: %date% %time% An error occurred when Blat tried to send e-mail. The e-mail was not sent. Please check the log file %BLATERRORLOGFILENAME% for more information. \u0026 echo %date% %time% An error occurred when Blat tried to send e-mail. The e-mail was not sent. Error details are above. \u003e\u003e %BLATERRORLOGFILENAME%) REM delete the generated reports to clean up del \"D:\\Scripts\\Print job accounting report*.csv\" 2\u003e nul goto END :REPORT_ERROR REM the print job report generation process had an error, so mail an error report echo ERROR: The print job report generation process had an error, so mailing an error report... \"\\\\%USERDOMAIN%\\NETLOGON\\Blat\\blat.exe\" - -f printserverreports@domain.local -to destinationaddress@domain.local -server mailserver.domain.local -subject \"ERROR: Print server usage report\" -body \"The print server usage report could not be generated due to an error. Please contact IT support for assistance.\" -log %BLATERRORLOGFILENAME% REM check if the e-mail was sent successfully (error level 0 returned); if it was, delete the Blat log file to clean up; if it was not, display an error message to the console and leave the full error log file in place if %ERRORLEVEL%==0 (del %BLATERRORLOGFILENAME%) else (echo ERROR: %date% %time% An error occurred when Blat tried to send e-mail. The e-mail was not sent. Please check the log file %BLATERRORLOGFILENAME% for more information. \u0026 echo %date% %time% An error occurred when Blat tried to send e-mail. The e-mail was not sent. Error details are above. \u003e\u003e %BLATERRORLOGFILENAME%) :END Manually run the script to test it - it should report no print events could be found as there are none in the event logs yet for the previous month and there will be no reports to e-mail but a manual run provides a basic syntax and permissions check Windows Shell Script D:\\Scripts\\GenerateAndEMailPrintJobAccountingReports.cmd ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/script-to-generate-print-84bdcf69/script-to-generate-print-84bdcf69/:8:0","tags":["Active Directory","HTML"],"title":"Script to generate print job accounting reports by print job and by user","uri":"/printing/print-servers-print-queues-and-print-jobs/script-to-generate-print-84bdcf69/script-to-generate-print-84bdcf69/"},{"categories":["Printing"],"content":"Create a scheduled task to run the script every first of the month Create a scheduled task to run “D:\\Scripts\\GenerateAndEMailPrintJobAccountingReports.cmd” every 1st of the month Run schtasks from an elevated command prompt to create this task: Windows Shell Script schtasks /create /s localhost ^ /tn \"Generate and e-mail print job accounting reports for the previous month on every first of the month\" ^ /sc monthly /d 1 /st 01:00 ^ /ru system ^ /tr \"D:\\Scripts\\GenerateAndEMailPrintJobAccountingReports.cmd\" Print a few test jobs and then run the scheduled task manually using the Task Scheduler console to test it ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/script-to-generate-print-84bdcf69/script-to-generate-print-84bdcf69/:9:0","tags":["Active Directory","HTML"],"title":"Script to generate print job accounting reports by print job and by user","uri":"/printing/print-servers-print-queues-and-print-jobs/script-to-generate-print-84bdcf69/script-to-generate-print-84bdcf69/"},{"categories":["Printing"],"content":"First monthly report checks After the next first of the month occurs, check that the script sent reports as expected. Also, check for instances of printers reporting 0 copies or only ever reporting 1 copy (see comments in the script for further information on these error conditions). ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/script-to-generate-print-84bdcf69/script-to-generate-print-84bdcf69/:10:0","tags":["Active Directory","HTML"],"title":"Script to generate print job accounting reports by print job and by user","uri":"/printing/print-servers-print-queues-and-print-jobs/script-to-generate-print-84bdcf69/script-to-generate-print-84bdcf69/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Script to Toggle Default XPS Document Writer (MXDW) Format (OXPS \u003c-\u003e XPS) Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/client-side-printing/script-to-toggle-default-e844b54e/script-to-toggle-default-e844b54e/:1:0","tags":["Active Directory","HTML"],"title":"Script to Toggle Default XPS Document Writer (MXDW) Format (OXPS \u003c-\u003e XPS)","uri":"/printing/client-side-printing/script-to-toggle-default-e844b54e/script-to-toggle-default-e844b54e/"},{"categories":["Printing"],"content":"Output from Technet Gallery Windows 8 introduces the OpenXPS (.oxps) international standard format as the default format for XPS output from the Microsoft XPS Document Writer (MXDW). Metro style apps will automatically save documents to the My Documents folder with a default name in this format. Desktop apps will be able to use the File Type option in the file save dialog to change between OpenXPS and the legacy Microsoft XPS (.xps) format. However, there are certain scenarios where Windows 8 users require Microsoft XPS (.xps) to be the default format. The “ToggleMXDWFormat.ps1” script will toggle the default format between OpenXPS and MicrosoftXPS. If a system has OpenXPS as the default, running the script will cause Microsoft XPS to be the new default, so all Metro style apps printing to MXDW will output .xps files and .xps will be the default option in the desktop. Running the script again will return the system to OpenXPS as the default. To run the script: Open Powershell as an administrator Execute the following command to allow all scripts to run in the current Powershell instance: Set-ExecutionPolicy –ExecutionPolicy Unrestricted –Scope Process Execute the script: [full path]\\ToggleMXDWFormat.ps1 Exit Powershell This script will work on all versions of Windows 8 and Windows 8 RT. ","date":"2019-12-01","objectID":"/printing/client-side-printing/script-to-toggle-default-e844b54e/script-to-toggle-default-e844b54e/:2:0","tags":["Active Directory","HTML"],"title":"Script to Toggle Default XPS Document Writer (MXDW) Format (OXPS \u003c-\u003e XPS)","uri":"/printing/client-side-printing/script-to-toggle-default-e844b54e/script-to-toggle-default-e844b54e/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Search Active Directory for Specific Printers Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/2fbd192e-41ab-4e76-ab9c-ee9b6ddb419d/2fbd192e-41ab-4e76-ab9c-ee9b6ddb419d/:1:0","tags":["Active Directory","HTML"],"title":"Search Active Directory for Specific Printers","uri":"/printing/print-servers-print-queues-and-print-jobs/2fbd192e-41ab-4e76-ab9c-ee9b6ddb419d/2fbd192e-41ab-4e76-ab9c-ee9b6ddb419d/"},{"categories":["Printing"],"content":"Output from Technet Gallery Searches Active Directory for all printers with a priority of 2. Visual Basic Const ADS_SCOPE_SUBTREE = 2 Set objConnection = CreateObject(\"ADODB.Connection\") Set objCommand = CreateObject(\"ADODB.Command\") objConnection.Provider = \"ADsDSOObject\" objConnection.Open \"Active Directory Provider\" Set objCOmmand.ActiveConnection = objConnection objCommand.CommandText = \"Select printerName, serverName from \" _ \u0026 \"'LDAP://DC=fabrikam,DC=com' where objectClass='printQueue' and \" _ \u0026 \" Priority = 2 \" objCommand.Properties(\"Page Size\") = 1000 objCommand.Properties(\"Searchscope\") = ADS_SCOPE_SUBTREE Set objRecordSet = objCommand.Execute objRecordSet.MoveFirst Do Until objRecordSet.EOF Wscript.Echo \"Printer Name: \" \u0026 objRecordSet.Fields(\"printerName\").Value Wscript.Echo \"Server Name: \" \u0026 objRecordSet.Fields(\"serverName\").Value objRecordSet.MoveNext Loop ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/2fbd192e-41ab-4e76-ab9c-ee9b6ddb419d/2fbd192e-41ab-4e76-ab9c-ee9b6ddb419d/:2:0","tags":["Active Directory","HTML"],"title":"Search Active Directory for Specific Printers","uri":"/printing/print-servers-print-queues-and-print-jobs/2fbd192e-41ab-4e76-ab9c-ee9b6ddb419d/2fbd192e-41ab-4e76-ab9c-ee9b6ddb419d/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Select a New Default Printer Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/acf9cde1-3809-4699-93ce-64f136f543e3/acf9cde1-3809-4699-93ce-64f136f543e3/:1:0","tags":["Active Directory","HTML"],"title":"Select a New Default Printer","uri":"/printing/printer-ports-and-printer-drivers/acf9cde1-3809-4699-93ce-64f136f543e3/acf9cde1-3809-4699-93ce-64f136f543e3/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **Anonymous This script finds all the printer connections on your computer and then allows you to choose a new default printer. Visual Basic strComputer = \".\" strprinter = \"\" nummer =1 Set objWMIService = GetObject(\"winmgmts:\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colInstalledPrinters = objWMIService.ExecQuery _ (\"Select * from Win32_Printer Where Default = True\") For Each objPrinter in colInstalledPrinters WScript.echo objPrinter.name \u0026 \" is your default printer!\" Next Set colinstallprinters = objwmiservice.execquery(\"select * from Win32_printer\") For Each objprinters In colinstallprinters WScript.Echo objprinters.deviceid colname =colname \u0026 \"(\" \u0026 nummer \u0026\") \" \u0026 objprinters.deviceid \u0026 \",\" \u0026 VbCrLf nummer=1+nummer Next strprinter = InputBox (colname \u0026 \"Välj ett nummer för att byta förvald skrivare\") ss=Split(colname,\",\") valjskrivare = ss(strprinter-1) hittavart = InStr (valjskrivare,\")\") valjskrivare = Mid (valjskrivare,hittavart+2) For Each objprinters In colinstallprinters If objprinters.deviceid = valjskrivare Then If objprinters.Default = \"true\" Then MsgBox (valjskrivare \u0026\" är satt som default\") Else objprinters.setdefaultprinter MsgBox (valjskrivare \u0026\" är nu förvald som skrivare\") End If End If Next ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/acf9cde1-3809-4699-93ce-64f136f543e3/acf9cde1-3809-4699-93ce-64f136f543e3/:2:0","tags":["Active Directory","HTML"],"title":"Select a New Default Printer","uri":"/printing/printer-ports-and-printer-drivers/acf9cde1-3809-4699-93ce-64f136f543e3/acf9cde1-3809-4699-93ce-64f136f543e3/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Set the Printer Default Paper Sour Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/set-the-printer-default-2fd46a4b/set-the-printer-default-2fd46a4b/:1:0","tags":["Active Directory","HTML"],"title":"Set the Printer Default Paper Sour","uri":"/printing/printer-ports-and-printer-drivers/set-the-printer-default-2fd46a4b/set-the-printer-default-2fd46a4b/"},{"categories":["Printing"],"content":"Output from Technet Gallery .\\setprinter $PrinterName 8 \"pDevMode=dmDefaultSource=$PaperTray\" This script uses the Microsoft “SetPrinter.exe” utility to set the default paper source for the printer defined in the $PrinterName variable. The value of the paper source is defined in the $PaperTray variable. To run the script: 1. Download the setprinter.exe file from Microsoft. It is part of the Windows Server 2003 Resource Kit Tools. A suggestion is to install the Resource Kit on a workstation, and to then copy the SetPrinter.exe file to the print server. Download URL: http://www.microsoft.com/en-us/download/details.aspx?id=17657 If the print server is running Windows Server 2012 or Windows 8.X, then do not use this utility. Instead, use the PrintManagement PowerShell module. http://technet.microsoft.com/en-us/library/hh918357.aspx 2. Modify the $SetPrinter variable to point to the location of the setprinter.exe file. 3. Modify the $PrinterName variable to be the name of the printer. 4. Modify the $PaperTray variable to set the default source paper tray. The acceptable values are 15, 259, 260, 261, and 262. Here is the corresponding value per paper tray. 15 = Automatically Select 262 = Printer Auto Select 259 = Tray 1 260 = Tray 2 261 = Tray 3 5. Run the script. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/set-the-printer-default-2fd46a4b/set-the-printer-default-2fd46a4b/:2:0","tags":["Active Directory","HTML"],"title":"Set the Printer Default Paper Sour","uri":"/printing/printer-ports-and-printer-drivers/set-the-printer-default-2fd46a4b/set-the-printer-default-2fd46a4b/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Set the Printer’s Default Paper Siz Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/set-the-printers-default-1b0563c8/set-the-printers-default-1b0563c8/:1:0","tags":["Active Directory","HTML"],"title":"Set the Printer's Default Paper Siz","uri":"/printing/print-servers-print-queues-and-print-jobs/set-the-printers-default-1b0563c8/set-the-printers-default-1b0563c8/"},{"categories":["Printing"],"content":"Output from Technet Gallery # Specify the printer name. $strPrinterName = \"PrinterName\" # Specify the desired paper size. Acceptable values are letter, legal, A5, A4, etc ... $strDesiredPaperSize = \"A5\" $objPrinter = Get-PrintConfiguration -PrinterName $strPrinterName $strPaperSize = $objPrinter.PaperSize If ($strPaperSize -ne $strDesiredPaperSize) { Set-PrintConfiguration -PrinterName $strPrinterName -PaperSize $strDesiredPaperSize $objPrinter = Get-PrintConfiguration -PrinterName $strPrinterName $strPaperSizeUpdated = $objPrinter.PaperSize $strPaperSizeUpdated Write-Host \"The paper size was changed as follows: From: $strPaperSize To: $strPaperSizeUpdated\" } Else { Write-Host \"The paper size was not changed because it was already set to $strDesiredPaperSize.\" } This script sets the default paper size used by the printer. It first checks to see if the paper size is already set to the desired\rsize. If yes, the paper size is not updated. If no, the paper size is updated and the original and changed paper sizes are reported back to\rthe user. This script requires the PrintManagement module that comes\rincluded with Windows Server 2012 and Windows 8.X. Here are the steps to run this script. 1. Open the script in PowerShell ISE 2. Modify the $strPrinterName variable to be the name of the printer. 3. Modify the $strDesiredPaperSize variable to the desired default paper size. 4. Execute the script. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/set-the-printers-default-1b0563c8/set-the-printers-default-1b0563c8/:2:0","tags":["Active Directory","HTML"],"title":"Set the Printer's Default Paper Siz","uri":"/printing/print-servers-print-queues-and-print-jobs/set-the-printers-default-1b0563c8/set-the-printers-default-1b0563c8/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Set the Printer’s Default Paper Tray Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/set-the-printers-default-eee2631d/set-the-printers-default-eee2631d/:1:0","tags":["Active Directory","HTML"],"title":"Set the Printer's Default Paper Tray","uri":"/printing/printer-ports-and-printer-drivers/set-the-printers-default-eee2631d/set-the-printers-default-eee2631d/"},{"categories":["Printing"],"content":"Output from Technet Gallery Set-PrintConfiguration -printername $strPrinterName -PrintTicketXml $strReplaceJobInputBin Write-Host \"The JobInputBin was changed as per the following. From: $JobInputBinCurrentValue To: $strNS0000andTray\" This script modifies the default paper tray on a printer. This script requires the PrintManagement PowerShell module that comes\rincluded with Windows Server 2012 and Windows 8.X. Here are the steps to run this script. 1. Open the script in PowerShell ISE 2. Modify the $strPrinterName variable to the be name of the printer. 3. Modify the $strTray variable to the desired default paper size. The acceptable values are AutoSelect, ManualFeed, Tray1, Tray2, Tray3, and Tray4 4. Execute the script. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/set-the-printers-default-eee2631d/set-the-printers-default-eee2631d/:2:0","tags":["Active Directory","HTML"],"title":"Set the Printer's Default Paper Tray","uri":"/printing/printer-ports-and-printer-drivers/set-the-printers-default-eee2631d/set-the-printers-default-eee2631d/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Set/Replace a Printer Driver on Print Queues on local or remote Computer. Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/setreplace-a-printer-61ee0b1c/setreplace-a-printer-61ee0b1c/:1:0","tags":["Active Directory","HTML"],"title":"Set/Replace a Printer Driver on Print Queues on local or remote Computer.","uri":"/printing/print-servers-print-queues-and-print-jobs/setreplace-a-printer-61ee0b1c/setreplace-a-printer-61ee0b1c/"},{"categories":["Printing"],"content":"Output from Technet Gallery Set/Replace a Printer Driver on Print Queues on local or remote Computer. The Printer Drivers must be installed, This Function is not going to install Printer Drivers. Printers that do not replay to ping will be skipped. The advanced Function supports -whatif and -confirm .PARAMETER ComputerName  The computer name(s) to where you want to set\\change Print Drivers.  Default to local Computer .PARAMETER PrinterName  [Optional] The Printer Name you want to set\\change the Print Driver.  You can use the Asterix ‘*’ as wildcard to set\\change Printer Drivers on a set of Printers.  Default is ‘*’ - All Printers. .PARAMETER OldDriverName  [Optional] Used to filter for Printers which have the given Driver Name as the current Print Driver Name.  Use this Parameter if you want to replace Print Drivers on all Printers that uses  the given Driver Name. .PARAMETER NewDriverName  The Print Driver Name of an existing(installed) Driver that you want to set for the given Printers. .PARAMETER Force  [Optional] Used for the ShouldProcess, Shouldcontinue.  To override these confirmations use -Confirm:$false or the -Force parameter.  More Info:  The variable: $ConfirmPreference default is ‘High’ and you should not change that.  If the User selected -Confirm, has the effect that $Global:ConfirmPreference is set to Low.  You can declare the impact of the commands on the system: “HIGH”, “MEDIUM”, “LOW”. [cmdletbinding(ConfirmImpact = ‘High’, SupportsShouldProcess = $True)]  You can then set ConfirmImpact to be the level that you want Automatic confirmation turned on.  When the ConfirmImpact is less than the $ConfirmPreference than only when you pass the  Switch -Confirm the user will be prompted to confirm. If you want allways the user has to confirm  even whith the -Force Parameter used, then set the ConfirmImpact = ‘High’ .EXAMPLE Set-LHSPrinterDriver -ComputerName Server1 -OldDriverName 'RICOH Aficio MP C2550 PCL 5c' -NewDriverName 'RICOH Aficio MP C3300 PCL 6' -WhatIf Connects to Server1 and replaces on all Printers which have Printer Driver 'RICOH Aficio MP C2550 PCL 5c' to 'RICOH Aficio MP C3300 PCL 6'. The -Whatif Parameter will not make any changes but will show what will be done. .EXAMPLE Set-LHSPrinterDriver -ComputerName Server1 -PrinterName \"Test*\" -NewDriverName 'RICOH Aficio MP C3300 PCL 6' -Force Connects to Server1 and will set on all Printers with Name beginning with Test (wildcard support) to the new Print Driver. The -Force Switch is to bypass the confirmation. .EXAMPLE # check the number of Print Queues with Driver = 'HP Universal Printing PCL 6' $p = Get-Wmiobject -Class win32_printer -ComputerName server1 -Filter \"DriverName like 'HP Universal Printing PCL 6'\" $p.count # create a filename after ISO 8601 standard sortable date time-stamp $dt = (Get-Date).ToString(\"s\").Replace(\":\",\"-\") Set-LHSPrinterDriver -ComputerName server1 -OldDriverName 'HP Universal Printing PCL 6' -NewDriverName 'HP Universal Printing PCL 6 (v5.6.5)' *\u003e\u00261 | Out-File -FilePath \"C:\\Temp\\log\\$dt.txt\" will replace Printer Driver on Print queues of server1 that have the current Print Driver 'HP Universal Printing PCL 6' and replaces with 'HP Universal Printing PCL 6 (v5.6.5)'. '*\u003e\u00261' is to redirect all outputs(verbose,warning,error,debug) to the standard output (requires PS V3.0 or higher). We pipe the output then to a file. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/setreplace-a-printer-61ee0b1c/setreplace-a-printer-61ee0b1c/:2:0","tags":["Active Directory","HTML"],"title":"Set/Replace a Printer Driver on Print Queues on local or remote Computer.","uri":"/printing/print-servers-print-queues-and-print-jobs/setreplace-a-printer-61ee0b1c/setreplace-a-printer-61ee0b1c/"},{"categories":["Printing"],"content":"Original Links Original Technet URL SetPrint.ps1 Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/878e6bac-e2a1-4502-9333-5b1420f8b957/878e6bac-e2a1-4502-9333-5b1420f8b957/:1:0","tags":["Active Directory","HTML"],"title":"SetPrint.ps1","uri":"/printing/print-servers-print-queues-and-print-jobs/878e6bac-e2a1-4502-9333-5b1420f8b957/878e6bac-e2a1-4502-9333-5b1420f8b957/"},{"categories":["Printing"],"content":"Output from Technet Gallery ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/878e6bac-e2a1-4502-9333-5b1420f8b957/878e6bac-e2a1-4502-9333-5b1420f8b957/:2:0","tags":["Active Directory","HTML"],"title":"SetPrint.ps1","uri":"/printing/print-servers-print-queues-and-print-jobs/878e6bac-e2a1-4502-9333-5b1420f8b957/878e6bac-e2a1-4502-9333-5b1420f8b957/"},{"categories":["Printing"],"content":"Description A Powershell script to set some default settings on all the print queues on your print server. You can set the following settings: color, monochrome, twosided, singlesided, and staple. Use “show” to show the print queue properties. param ($ChangeProp) $host.Runspace.ThreadOptions = \"ReuseThread\" Add-Type -AssemblyName System.Printing $permissions = [System.Printing.PrintSystemDesiredAccess]::AdministrateServer $queueperms = [System.Printing.PrintSystemDesiredAccess]::AdministratePrinter $server = new-object System.Printing.PrintServer -argumentList $permissions $queues = $server.GetPrintQueues() function SetProp($capability, $property, $enumeration) { if ($PrintCaps.$capability.Contains($property)) { $q2.DefaultPrintTicket.$enumeration = $property $q2.commit() write-host ($q.Name +\" is now configured for \" + $property) write-host (\" \") } else { write-host ($q.Name +\" does not support \" + $property) write-host (\" \") } } try { foreach ($q in $queues) { #Get edit Permissions on the Queue $q2 = new-object System.Printing.PrintQueue -argumentList $server,$q.Name,1,$queueperms # Get Capabilities Object for the Print Queue $PrintCaps = $q2.GetPrintCapabilities() switch ($ChangeProp) { {$_ -eq \"twosided\"} { SetProp DuplexingCapability TwoSidedLongEdge Duplexing break } {$_ -eq \"onesided\"} { SetProp DuplexingCapability onesided Duplexing break } {$_ -eq \"mono\"} { SetProp OutputColorCapability monochrome OutputColor break } {$_ -eq \"color\"} { SetProp OutputColorCapability color OutputColor break } {$_ -eq \"staple\"} { SetProp StaplingCapability StapleTopLeft Stapling break } {$_ -eq \"show\"} { $DefaultTicket = $q2.DefaultPrintTicket $TicketProps = $DefaultTicket | Get-Member -MemberType Property write-host (\" \") write-host ($q.name) foreach ($p in $TicketProps) { $PName = $p.name $PropValue = $DefaultTicket.$PName write-host ($p.name + \" = \" + $PropValue) } } default { Write-Host (\"$_ is not a valid parameter\") exit } } } } catch [System.Management.Automation.RuntimeException] { write-host (\"Exception: \" + $_.Exception.GetType().FullName) write-host $_.Exception.Message } ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/878e6bac-e2a1-4502-9333-5b1420f8b957/878e6bac-e2a1-4502-9333-5b1420f8b957/:3:0","tags":["Active Directory","HTML"],"title":"SetPrint.ps1","uri":"/printing/print-servers-print-queues-and-print-jobs/878e6bac-e2a1-4502-9333-5b1420f8b957/878e6bac-e2a1-4502-9333-5b1420f8b957/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Sort Project Server Timesheet Line Classifications in Add an existing task pag Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/sort-server-timesheet-line-d2634985/sort-server-timesheet-line-d2634985/:1:0","tags":["Active Directory","HTML"],"title":"Sort Project Server Timesheet Line Classifications in Add an existing task pag","uri":"/project-server/sort-server-timesheet-line-d2634985/sort-server-timesheet-line-d2634985/"},{"categories":["Project Server"],"content":"Output from Technet Gallery Hi, I was thinking of uploading this solution earlier when I was struggling to get Project Server 2010 timesheet line classification sorted in ascending order under “Add an existing task” dialogue box. But due to stretch assignments got delayed but as said it’s always good to be late then never :) :) The underlying problem is OOTB feature displays first the native “Standard” line and then all my custom classifications by alphabetical order. Surprisingly same configuration used to work in PS 2007 environment.Means in PS 2007 dialogue box displays the timesheet line classification in exact ascending sort order whether it ’s default or custom line classification. But this OOTB feature from PS 2010 was not at all accepted by my client. So as quick solution thought of writing the javascript which will sort Timesheet line classification dropdown list in ascending order. So to achieve this add this attached javascript code to “Select Task Dlg.aspx” page which is the aspx page for “Add and existing task” modal dialogue box. Add the attached code under function **Body_OnLoad() **after function **Init();\r**call Here I have attached 2 attachment first contains the JS code to sort the Timesheet Line Classification and second I have attached the “Modiofied-Select Task Dlg.aspx” which has that JS code added in page which you can replace with your actual page in PS 2010 environment Note: Before updating the **Select Task Dlg.aspx page please take a backup copy of this page. Also please implement this solution in Dev environment first and then move accordingly towards PROD deployment. ** ","date":"2019-12-01","objectID":"/project-server/sort-server-timesheet-line-d2634985/sort-server-timesheet-line-d2634985/:2:0","tags":["Active Directory","HTML"],"title":"Sort Project Server Timesheet Line Classifications in Add an existing task pag","uri":"/project-server/sort-server-timesheet-line-d2634985/sort-server-timesheet-line-d2634985/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL SQL Query to find out list of Projects belongs to which PPM Security Group Original Technet Description URL Description Download: [Download Link](Download\\SQL Query to find out which Projects belongs to which Project Security Group.docx) ","date":"2019-12-01","objectID":"/project-server/sql-query-to-find-out-list-9c7fedad/sql-query-to-find-out-list-9c7fedad/:1:0","tags":["Active Directory","HTML"],"title":"SQL Query to find out list of Projects belongs to which PPM Security Group","uri":"/project-server/sql-query-to-find-out-list-9c7fedad/sql-query-to-find-out-list-9c7fedad/"},{"categories":["Project Server"],"content":"Output from Technet Gallery In a nutshell this is a query to get the Project name quoted in a security category. When you add manually several projects to a specific Project Server category, for authorization purpose, you need to check this list. For instance, the list of closed Project for timesheets or for reporting. This query helps you and provide a usefull sample to get this list from the undocumented Project database. This become even more useful, when you use our bulk creation of Project Server Categories. ","date":"2019-12-01","objectID":"/project-server/sql-query-to-find-out-list-9c7fedad/sql-query-to-find-out-list-9c7fedad/:2:0","tags":["Active Directory","HTML"],"title":"SQL Query to find out list of Projects belongs to which PPM Security Group","uri":"/project-server/sql-query-to-find-out-list-9c7fedad/sql-query-to-find-out-list-9c7fedad/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Start and Stop the Print Spooler Servi Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/4b0167c5-eacc-408c-adfd-b898ac60aaec/4b0167c5-eacc-408c-adfd-b898ac60aaec/:1:0","tags":["Active Directory","HTML"],"title":"Start and Stop the Print Spooler Servi","uri":"/printing/printer-ports-and-printer-drivers/4b0167c5-eacc-408c-adfd-b898ac60aaec/4b0167c5-eacc-408c-adfd-b898ac60aaec/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **Anonymous Submission Stops and then restarts the Print Spooler service. Visual Basic Net stop \"print spooler\" net start \"print spooler\" pause ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/4b0167c5-eacc-408c-adfd-b898ac60aaec/4b0167c5-eacc-408c-adfd-b898ac60aaec/:2:0","tags":["Active Directory","HTML"],"title":"Start and Stop the Print Spooler Servi","uri":"/printing/printer-ports-and-printer-drivers/4b0167c5-eacc-408c-adfd-b898ac60aaec/4b0167c5-eacc-408c-adfd-b898ac60aaec/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Step By Step to create a Power BI report from an oData feed without Excel Original Technet Description URL Description Download: [Download Link](Download\\Step By Step to create a Power BI report without Excel.docx) ","date":"2019-12-01","objectID":"/project-server/step-by-step-to-create-a-3eb81a31/step-by-step-to-create-a-3eb81a31/:1:0","tags":["Active Directory","HTML"],"title":"Step By Step to create a Power BI report from an oData feed without Excel","uri":"/project-server/step-by-step-to-create-a-3eb81a31/step-by-step-to-create-a-3eb81a31/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This article will walk you through a step-by-step procedure on creating a Power BI report from an oData feed without Excel. We recently had a lot of new announcements about PowerBI, embedding components such as Power Pivot, Power Query, Power Map, enabling auto refresh, etc… So I decided to roll up my sleeves and get into it with my new Project Online demo tenant. More details here: http://psbehindthescene.blogspot.fr/2015/07/my-first-power-bi-report-whitout-excel.html ","date":"2019-12-01","objectID":"/project-server/step-by-step-to-create-a-3eb81a31/step-by-step-to-create-a-3eb81a31/:2:0","tags":["Active Directory","HTML"],"title":"Step By Step to create a Power BI report from an oData feed without Excel","uri":"/project-server/step-by-step-to-create-a-3eb81a31/step-by-step-to-create-a-3eb81a31/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Step by Step to create your own carousel on the PWA home pag Original Technet Description URL Description Download: [Download Link](Download\\Step by Step to create your own carousel on the PWA home page.docx) ","date":"2019-12-01","objectID":"/project-server/step-by-step-to-create-9d4c06a8/step-by-step-to-create-9d4c06a8/:1:0","tags":["Active Directory","HTML"],"title":"Step by Step to create your own carousel on the PWA home pag","uri":"/project-server/step-by-step-to-create-9d4c06a8/step-by-step-to-create-9d4c06a8/"},{"categories":["Project Server"],"content":"Output from Technet Gallery Step by Step to create your own carousel on the PWA home page: The PWA homepage is really user friendly and pleasant to use since the carousels and tiles have been introduced in Project Server 2013 and Project Online. But wouldn’t it be nice to create your own carousel integrating for example your own corporate links, or anything which might be relevant for your users? We can think about BI Center report libraries, document libraries, and external links. More details here: http://psbehindthescene.blogspot.co.uk/2015/07/create-your-own-carousel-on-pwa-home.html ","date":"2019-12-01","objectID":"/project-server/step-by-step-to-create-9d4c06a8/step-by-step-to-create-9d4c06a8/:2:0","tags":["Active Directory","HTML"],"title":"Step by Step to create your own carousel on the PWA home pag","uri":"/project-server/step-by-step-to-create-9d4c06a8/step-by-step-to-create-9d4c06a8/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL SuperFlow for Microsoft Project Server 2010 Upgrad Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/superflow-for-server-2010-494bf02f/superflow-for-server-2010-494bf02f/:1:0","tags":["Active Directory","HTML"],"title":"SuperFlow for Microsoft Project Server 2010 Upgrad","uri":"/project-server/superflow-for-server-2010-494bf02f/superflow-for-server-2010-494bf02f/"},{"categories":["Project Server"],"content":"Output from Technet Gallery The Microsoft Project Server 2010 Upgrade SuperFlow is a special kind of help file that provides you with information that you need to upgrade to Microsoft Project Server 2010. It provides information that is common to each upgrade path – planning, preparation, and specific procedures for each supported upgrade method. This guide also provides you with information about how to download and use the Microsoft Project Server 2010 virtual migration environment – the recommended method for upgrading your Microsoft Office Project Server 2003 data to Office Project Server 2007 (which you can then upgrade to Project Server 2010). Note: Microsoft .NET Framework 3.5 is required to install the SuperFlow. To install the Microsoft Project Server 2010 Upgrade SuperFlow Download the SF_ProjectServer2010Upgrade.msi file. Run the SF_ProjectServer2010Upgrade.msi file and follow the installation instructions in the wizard. The SuperFlow is installed in a Start menu group that is named Microsoft SuperFlows. ","date":"2019-12-01","objectID":"/project-server/superflow-for-server-2010-494bf02f/superflow-for-server-2010-494bf02f/:2:0","tags":["Active Directory","HTML"],"title":"SuperFlow for Microsoft Project Server 2010 Upgrad","uri":"/project-server/superflow-for-server-2010-494bf02f/superflow-for-server-2010-494bf02f/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Update Printer Locations Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/08aff197-e501-48a7-a2b4-0bca1bfef353/08aff197-e501-48a7-a2b4-0bca1bfef353/:1:0","tags":["Active Directory","HTML"],"title":"Update Printer Locations","uri":"/printing/print-servers-print-queues-and-print-jobs/08aff197-e501-48a7-a2b4-0bca1bfef353/08aff197-e501-48a7-a2b4-0bca1bfef353/"},{"categories":["Printing"],"content":"Output from Technet Gallery Uses ADSI to update the location attribute for all printers in a specified OU. Visual Basic Set objOU = GetObject(\"LDAP://OU=Finance, DC=fabrikam, DC=com\") objOU.Filter = Array(\"printqueue\") For Each objPrintQueue In objOU strNewLocation = \"Redmond/\" \u0026 objPrintQueue.Location objPrintQueue.Put \"Location\" , strNewLocation objPrintQueue.SetInfo Next ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/08aff197-e501-48a7-a2b4-0bca1bfef353/08aff197-e501-48a7-a2b4-0bca1bfef353/:2:0","tags":["Active Directory","HTML"],"title":"Update Printer Locations","uri":"/printing/print-servers-print-queues-and-print-jobs/08aff197-e501-48a7-a2b4-0bca1bfef353/08aff197-e501-48a7-a2b4-0bca1bfef353/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Update Project Online Project Custom Field Value Using PowerShell Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/update-online-custom-field-12f034f4/update-online-custom-field-12f034f4/:1:0","tags":["Active Directory","HTML"],"title":"Update Project Online Project Custom Field Value Using PowerShell","uri":"/project-server/update-online-custom-field-12f034f4/update-online-custom-field-12f034f4/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This PowerShell script will connect to the Project Online PWA instance, import data from a CSV file then update the appropriate projects with the data from the CSV file. This demonstrates a simple example for importing the project budget value from a CSV file into a project level custom field in Project Online. The CSV file could be an export from the financial system. The example script will need updating to for your PWA instance - the DLL location, PWA URL, username, password and CSV file location. See the blog post for details. A code snippet can be seen below (full code in the download): #Add in libraries - update for the correct location #SharePoint Online CSOM DLL Import-Module 'C:\\OneDrive for Business\\External Disk\\SharePointOnlineCSOMDLLs\\16.1.5521.1200\\Microsoft.SharePoint.Client.dll' #Project Online CSOM DLL Import-Module 'C:\\OneDrive for Business\\External Disk\\SharePointOnlineCSOMDLLs\\16.1.5521.1200\\Microsoft.ProjectServer.Client.dll' #Set PWA details - update for correct URL, username and password $PWAInstanceURL = \"https://paulmather.sharepoint.com/sites/pwa\" $PWAUserName = \"paul@paulmather.onmicrosoft.com\" $password = \"password\" $securePass = ConvertTo-SecureString $password -AsPlainText -Force #Custom field ID - update for correct custom field internal ID $customFieldInternalName = \"Custom_7cdad654ca8fe61180c800155d306603\" $projContext = New-Object Microsoft.ProjectServer.Client.ProjectContext($PWAInstanceURL) [Microsoft.SharePoint.Client.SharePointOnlineCredentials]$spocreds = New-Object Microsoft.SharePoint.Client.SharePointOnlineCredentials($PWAUserName, $securePass); $projContext.Credentials = $spocreds #load projects $projContext.Load($projContext.Projects) $projContext.ExecuteQuery() #Import CSV file and update associated project - update location for CSV file Import-Csv \"C:\\Temp\\ProjectBudgetData.csv\" This example is for Project Online but could easily be modified for Project Server 2013 / 2016 - just the authentication would need to be updated and change the DLL’s that are being used as these are for SharePoint and Project Online. A supporting blog post can be seen here: https://pwmather.wordpress.com/2016/11/06/update-projectonline-project-custom-field-values-using-powershell-with-data-from-a-csv-file-ppm-projectserver-csom/ The script is provided “As is” with no warranties etc. ","date":"2019-12-01","objectID":"/project-server/update-online-custom-field-12f034f4/update-online-custom-field-12f034f4/:2:0","tags":["Active Directory","HTML"],"title":"Update Project Online Project Custom Field Value Using PowerShell","uri":"/project-server/update-online-custom-field-12f034f4/update-online-custom-field-12f034f4/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Update Project Online Resource Pool with Azure AD user attributes Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/update-online-resource-83137b7f/update-online-resource-83137b7f/:1:0","tags":["Active Directory","HTML"],"title":"Update Project Online Resource Pool with Azure AD user attributes","uri":"/project-server/update-online-resource-83137b7f/update-online-resource-83137b7f/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This PowerShell script will connect to Azure AD and export all the users to a CSV file with the specified attributes. Then the script will connect to the Project Online PWA instance, import data from a CSV file then update the appropriate resources with the data from the CSV file into the specified custom field. This demonstrates a simple example for importing Azure AD users attributes into resource custom fields. The example script will need updating for your PWA instance - the DLL location, PWA URL, username, password, CSV file location and Azure AD username / password. See the blog post for details. A code snippet can be seen below (full code in the download): Get-MsolUser -All | Select DisplayName, UserPrincipalName, Title | Export-CSV -NoTypeInformation -Path $CSVfilelocation #Set PWA details - update for correct URL, username and password $PWAInstanceURL = \"https://paulmather.sharepoint.com/sites/pwa\" $PWAUserName = \"paul@paulmather.onmicrosoft.com\" $password = \"password\" $securePass = ConvertTo-SecureString $password -AsPlainText -Force #Custom field ID - update for correct custom field internal ID $customFieldInternalName = \"Custom_3fa3e04146a4e61180d100155d507a05\" $projContext = New-Object Microsoft.ProjectServer.Client.ProjectContext($PWAInstanceURL) [Microsoft.SharePoint.Client.SharePointOnlineCredentials]$spocreds = New-Object Microsoft.SharePoint.Client.SharePointOnlineCredentials($PWAUserName, $securePass); $projContext.Credentials = $spocreds #load resources $projContext.Load($projContext.EnterpriseResources) $projContext.ExecuteQuery() #Import CSV file created previously and update associated resources Import-Csv $CSVfilelocation | This example is for Project Online but could easily be modified for Project Server 2013 / 2016 - just the authentication and AD part would need to be updated and change the DLL’s that are being used as these are for SharePoint/Project Online/Azure AD. A supporting blog post can be seen here: https://pwmather.wordpress.com/2016/11/07/update-projectonline-resource-custom-field-values-using-powershell-with-data-from-azuread-user-attributes-ppm-offce365-projectserver-csom/ The script is provided “As is” with no warranties etc. ","date":"2019-12-01","objectID":"/project-server/update-online-resource-83137b7f/update-online-resource-83137b7f/:2:0","tags":["Active Directory","HTML"],"title":"Update Project Online Resource Pool with Azure AD user attributes","uri":"/project-server/update-online-resource-83137b7f/update-online-resource-83137b7f/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Update Project Server 2010 / 2013 Lookup table with values from a text fil Original Technet Description URL Description Download: [Download Link](Download\\Update Project Server lookup table.ps1) ","date":"2019-12-01","objectID":"/project-server/update-server-lookup-table-bb1ae14f/update-server-lookup-table-bb1ae14f/:1:0","tags":["Active Directory","HTML"],"title":"Update Project Server 2010 / 2013 Lookup table with values from a text fil","uri":"/project-server/update-server-lookup-table-bb1ae14f/update-server-lookup-table-bb1ae14f/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This PowerShell script will add lookup table values from a text file into the specified lookup table. This script does assume that the lookup table values are all level 1. The values to add will need to be in a list in a text file, an example can be found on the blog post link below. There are a couple of variables / lines that will need to be updated in the script, these are menitoned below but detailed in the blog post. Text file location and filename, in the example below you will see “C:\\Lookupvaluestoadd.txt” The lookup table that you want to update, in the example below you will see “Test Lookup Table” The Project Server PWA URL, in the example below you will see http://vm353/pwa The language (Locale ID) might also need to be updated, in this examplee you will find 1033 Once these have been updated the script will be ready to execute, I’d recommend running this with a Project Server administrator account as the user acount will need permission to manage enterprise custom fields. Please see a code snippet below: #Get lookup table values to add $values = Get-Content \"C:\\Lookupvaluestoadd.txt\" #Specify Lookup table to update $lookupTablename = \"Test Lookup Table\" $EPMTYString = [system.string]::empty $svcPSProxy = New-WebServiceProxy -uri \"http://vm353/pwa/_vti_bin/PSI/LookupTable.asmx?wsdl\" -useDefaultCredential $lookupTables = $svcPSProxy.ReadLookupTables($EPMTYString, 0 , 1033) $lookupTableGuid = $Lookuptables.LookupTables | where {$_.LT_NAME -eq $Lookuptablename } $lookuptable = $svcPSProxy.ReadLookupTablesbyUids($lookupTableGuid.LT_UID, 1 , 1033) #get lookup table count $lookuptableValues = $svcPSProxy.ReadLookupTablesbyUids($lookupTableGuid.LT_UID, 0 , 1033).LookupTableTrees $count = $lookuptableValues.Count +1 #update lookup table... foreach($value in $values) { $GUID = [System.Guid]::NewGuid() $LookupRow = $lookuptable.LookupTableTrees.NewLookupTableTreesRow() $LookupRow.LT_STRUCT_UID = $GUID $LookupRow.LT_UID = $lookupTableGuid.LT_UID $LookupRow.LT_VALUE_TEXT = $value $LookupRow.LT_VALUE_SORT_INDEX = ($count ++) $lookuptable.LookupTableTrees.AddLookupTableTreesRow($LookupRow) } $error.clear() Try { $svcPSProxy.UpdateLookupTables($lookuptable , 0 , 1 , 1033) } Catch { write-host \"Error updating the Lookup table, see the error below:\" -ForeGroundColor Red -BackGroundColor White write-host \"$error\" -ForeGroundColor Red } If ($error.count -eq 0) { Write-host \"The lookup table $lookupTablename has been updated with the values from the text file specified\" -ForeGroundColor Green } Else { Write-host \"The lookup table $lookupTablename has not been updated with the values from the text file specified, please see error\" -ForeGroundColor Red -BackGroundColor White } #force checkin in case of failure $error.clear() Try { $svcPSProxy.CheckInLookUpTables($lookupTableGuid.LT_UID, 1) } Catch { If ($error -match \"LastError=CICONotCheckedOut\") { } Else { write-host \"Error checking the Lookup table, see the error below:\" -ForeGroundColor Red -BackGroundColor White write-host \"$error\" -ForeGroundColor Red } } For an example walkthrough using this script please see the following blog post: http://pwmather.wordpress.com/2012/08/29/update-projectserver-lookup-tables-using-powershell-ps2010-sp2010-msproject/ ","date":"2019-12-01","objectID":"/project-server/update-server-lookup-table-bb1ae14f/update-server-lookup-table-bb1ae14f/:2:0","tags":["Active Directory","HTML"],"title":"Update Project Server 2010 / 2013 Lookup table with values from a text fil","uri":"/project-server/update-server-lookup-table-bb1ae14f/update-server-lookup-table-bb1ae14f/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Update Project Server- Project Custom Field and Lookup Value Using PowerShell Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/update-server-custom-field-00ab99a9/update-server-custom-field-00ab99a9/:1:0","tags":["Active Directory","HTML"],"title":"Update Project Server- Project Custom Field and Lookup Value Using PowerShell","uri":"/project-server/update-server-custom-field-00ab99a9/update-server-custom-field-00ab99a9/"},{"categories":["Project Server"],"content":"Output from Technet Gallery Based on the script provided by PWMather, on Update Project Online Project Custom Field Value Using PowerShell with CSV The Approach he provided only addresses a single field with a single line of text data type. This is fine, as it does what is required, but i wanted to be able to update Lookup fields as well as bulk updating Multiple filed at the same time. Note1: Dont forget to locate the internal name for the custom field at http://domain/pwa/_api/ProjectServer/CustomFields Note2: Be mindful of Null values in your CSV A code snippet can be seen below (full code in the download): try { $projectName = $_.ProjectName [Array]$MyArray1 = $_.Dept [Array]$MyArray3 = $_.multiselect1,$_.multiselect2,$_.multiselect3 $project = $projContext.Projects | select Id, Name | where {$_.Name -eq $projectName} if($project -ne $null){ $proj = $projContext.Projects.GetByGuid($project.Id) $draftProject = $proj.CheckOut() $draftProject.SetCustomFieldValue($Dept,$MyArray1) $draftProject.SetCustomFieldValue($Cost,$_.Cost) $draftProject.SetCustomFieldValue($multiselect,$MyArray3) $draftProject.SetCustomFieldValue($State,$_.State) $draftProject.Publish($true) | Out-Null $projContext.ExecuteQuery() Write-host -ForegroundColor Green \"'$projectName' has been updated\" } else { Write-host -ForegroundColor Yellow \"'$projectName' not found with $_.Dept , $_.State , $_.ProjectStatus , $_.multiselect1 , $_.multiselect2 , $_.multiselect3 \" } } catch{ write-host -ForegroundColor Red \"Add error occurred whilst attempting to update project: '$projectName'. The error details are: $($_)\" } This example works for both Project Online/On Premise 2013/2016 ","date":"2019-12-01","objectID":"/project-server/update-server-custom-field-00ab99a9/update-server-custom-field-00ab99a9/:2:0","tags":["Active Directory","HTML"],"title":"Update Project Server- Project Custom Field and Lookup Value Using PowerShell","uri":"/project-server/update-server-custom-field-00ab99a9/update-server-custom-field-00ab99a9/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Update-NetworkPrinterServerConnection Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/update-networkprinterserver-36015362/update-networkprinterserver-36015362/:1:0","tags":["Active Directory","HTML"],"title":"Update-NetworkPrinterServerConnection","uri":"/printing/print-servers-print-queues-and-print-jobs/update-networkprinterserver-36015362/update-networkprinterserver-36015362/"},{"categories":["Printing"],"content":"Output from Technet Gallery \u003c# .SYNOPSIS Migrates network printers from one print server to another. .DESCRIPTION Migrates all networked printers from one specified print server to another print server. .INPUTS System.StringArray. .OUTPUTS None. .EXAMPLE Update-NetworkPrintersServerConnection -OldPrintServer \"\\\\MyOldPS\" -NewPrintServer \"\\\\MyNewPS\" .NOTES This is done with a ComObject allowing for use in PowerShell V2, before the Get-Printer, Add-Printer and Remove-Printer Cmdlets where introduced. The default printer, if migrated, will be reset as the default printer with the updated connection. .LINK http://dotps1.github.io .LINK http://technet.microsoft.com/en-us/library/dd347648.aspx #\u003e Function Update-NetworkPrintersServerConnection { [CmdletBinding()] [OutputType([Void])] Param ( # ComputerName, Type String, The name(s) of the systems to migrate printers on. [Parameter(Position = 0, ValueFromPipeLine = $true)] [ValidateScript({ if (Test-Connection -ComputerName $_ -Quiet -Count 2) { return $true } else { throw \"Failed to connect to $_. Please ensure the system is available.\" } })] [String[]] $ComputerName = $env:COMPUTERNAME, # OldPrintServer, Type String, Name of current Print Server to update from. String must start with '\\\\'. [Parameter(Mandatory = $true, Position = 1)] [ValidateScript({ if ($_.StartsWith(\"\\\\\")){ return $true } else { throw \"Parameter $_ does not start with '\\\\'.\" } })] [String] $OldPrintServer, # NewPrintServer, Type String, Name of new Print Server to update to. String must start with '\\\\'. [Parameter(Mandatory = $true, Position = 2)] [ValidateScript({ if ($_.StartsWith(\"\\\\\")){ return $true } else { throw \"Parameter $_ does not start with '\\\\'.\" } })] [ValidateScript({ if (Test-Connection -ComputerName $_.TrimStart(\"\\\\\") -Quiet -Count 2) { return $true } else { throw \"Failed to ping $_. Please ensure the system is available.\" } })] [String] $NewPrintServer ) Begin { $comObject = New-Object -ComObject WScript.Network } Process { try { $printers = Get-WMIObject -Class Win32_Printer -Namespace root\\CIMV2 -Property ServerName,Default,ShareName,Name,network -ComputerName $ComputerName -ErrorAction Stop } catch { throw \"Unable to connect to thw Win32_Printer Class on $ComputerName.\" } if ($printers -ne $null) { $defaultPrinter = $printers | ?{ $_.Default -eq $true } $oldPrinters = $printers | ?{ $_.ServerName -eq $OldPrintServer } foreach ($printer in $oldPrinters) { $comObject.RemovePrinterConnection(\"$($printer.Name)\") $comObject.AddWindowsPrinterConnection(\"$($NewPrintServer + \"\\\" + $printer.ShareName)\") } } if ($oldPrinters.ShareName -contains $defaultPrinter.ShareName) { $comObject.SetDefaultPrinter(\"$($NewPrintServer + \"\\\" + $defaultPrinter.ShareName)\") } } End { [Void][System.Runtime.InteropServices.Marshal]::ReleaseComObject($comObject) Remove-Variable comObject } } This function is used to migrate existing network printer connections from one print server to another. Just specify the old print server name and the new print server name, and all existing connections that are from that server will be deleted, and then recreated with the new server name. This function used a ComObject rather then the *-Printer Cmdlets, so it can be used in PowerShell V2. Use at your own risk, and please rate this script if it works for you! enjoy. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/update-networkprinterserver-36015362/update-networkprinterserver-36015362/:2:0","tags":["Active Directory","HTML"],"title":"Update-NetworkPrinterServerConnection","uri":"/printing/print-servers-print-queues-and-print-jobs/update-networkprinterserver-36015362/update-networkprinterserver-36015362/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Use SharePoint people pickers on Project Server or Online PDPs Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/project-server/use-sharepoint-people-cc8289de/use-sharepoint-people-cc8289de/:1:0","tags":["Active Directory","HTML"],"title":"Use SharePoint people pickers on Project Server or Online PDPs","uri":"/project-server/use-sharepoint-people-cc8289de/use-sharepoint-people-cc8289de/"},{"categories":["Project Server"],"content":"Output from Technet Gallery PDP People Picking Project Server PDPs (Project Detail Pages) have the facility to host Project level enterprise custom fields for users to edit. Out-of-the-box Project Server supports Cost, Date, Duration, Flag, Number and Text - but not fields of type Person. With the supplied Javascript, you can transform any ‘Single Line Of Text’ field into a SharePoint people picker. Simply take the supplied javascript and put it into a Content Editor webpart on the PDP and customise the first line to contain the Display Name of the single line of text field you have placed elsewhere on the page. For example, if the the custom field on the PDP is called “Project Sponsor” then configure the first line of the javascript as: JavaScript //Set the following to be an array of fields you would like to change into a people-picker var targetFields = ['Project Sponsor']; If you have more than one field on the PDP that you want to transform, you can specify each one like this: JavaScript //Set the following to be an array of fields you would like to change into a people-picker var targetFields = ['Field 1', 'Field 2']; ","date":"2019-12-01","objectID":"/project-server/use-sharepoint-people-cc8289de/use-sharepoint-people-cc8289de/:2:0","tags":["Active Directory","HTML"],"title":"Use SharePoint people pickers on Project Server or Online PDPs","uri":"/project-server/use-sharepoint-people-cc8289de/use-sharepoint-people-cc8289de/"},{"categories":["Project Server"],"content":"Known Limitations This code saves the picked person back into the custom field as text, so say you have two “Bob Smith” users with the same display name, this code would be unable to resolve the difference between them. ","date":"2019-12-01","objectID":"/project-server/use-sharepoint-people-cc8289de/use-sharepoint-people-cc8289de/:3:0","tags":["Active Directory","HTML"],"title":"Use SharePoint people pickers on Project Server or Online PDPs","uri":"/project-server/use-sharepoint-people-cc8289de/use-sharepoint-people-cc8289de/"},{"categories":["Project Server"],"content":"Detailed Install Instructions First make sure your PDP has a single line of text field in the Project Details Webpart ready to go. On the Page Tab, Select Edit Page Add a Content Editor, or Script Editor Webpart Click into the content area of the webpart, and click the Edit Source button Type in some empty script tags Paste the Javascript provided in the download into the middle of the script tags, and customise the first line. Press okay, and stop editing the page *IMPORTANT* If you are using Google Chrome you will need to refresh the page as Chrome has a security feature that prevents any script executing that was part of the previous POST. And then the People picker will be ready for use: Happy People Picking :) James. ","date":"2019-12-01","objectID":"/project-server/use-sharepoint-people-cc8289de/use-sharepoint-people-cc8289de/:4:0","tags":["Active Directory","HTML"],"title":"Use SharePoint people pickers on Project Server or Online PDPs","uri":"/project-server/use-sharepoint-people-cc8289de/use-sharepoint-people-cc8289de/"},{"categories":["Printing"],"content":"Original Links Original Technet URL VB script to Display the shared printer information Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/ae3f7fe1-8390-4aae-bbe9-c117da976398/ae3f7fe1-8390-4aae-bbe9-c117da976398/:1:0","tags":["Active Directory","HTML"],"title":"VB script to Display the shared printer information","uri":"/printing/print-servers-print-queues-and-print-jobs/ae3f7fe1-8390-4aae-bbe9-c117da976398/ae3f7fe1-8390-4aae-bbe9-c117da976398/"},{"categories":["Printing"],"content":"Output from Technet Gallery ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/ae3f7fe1-8390-4aae-bbe9-c117da976398/ae3f7fe1-8390-4aae-bbe9-c117da976398/:2:0","tags":["Active Directory","HTML"],"title":"VB script to Display the shared printer information","uri":"/printing/print-servers-print-queues-and-print-jobs/ae3f7fe1-8390-4aae-bbe9-c117da976398/ae3f7fe1-8390-4aae-bbe9-c117da976398/"},{"categories":["Printing"],"content":"Description Password hash and salt values should always be securely protected in storage. An attacker able to compromise a specific hash and salt value from a database may succeed in using other types of brute-force attacks against the compromised hash. In the example given, the four-byte salt would require an attacker to maintain 4.3 trillion values for every given plaintext value. Assuming the victim required passwords of only 4 alphabetical characters in length with no other complexity requirements (a very weak password policy by our standards), defeating a four-byte salt would require the attacker to have a database of 2 x 10^15 precomputed hashes handy. Assuming each of these hashes only required one byte to store, this would require 2 petabytes of storage. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/ae3f7fe1-8390-4aae-bbe9-c117da976398/ae3f7fe1-8390-4aae-bbe9-c117da976398/:3:0","tags":["Active Directory","HTML"],"title":"VB script to Display the shared printer information","uri":"/printing/print-servers-print-queues-and-print-jobs/ae3f7fe1-8390-4aae-bbe9-c117da976398/ae3f7fe1-8390-4aae-bbe9-c117da976398/"},{"categories":["Printing"],"content":"Script Visual Basic 'Auther- Biswajit Das. ' Target Platform windows 2008 r2, windows 2003. ' parameters - none. 'Dependency - WMI class should be present. Set objNetwork = CreateObject(\"Wscript.Network\") strComputer = objNetwork.ComputerName Set objWMIService = GetObject(\"winmgmts:\\\\\" \u0026 strComputer \u0026 \"\\root\\CIMV2\") Set colItems = objWMIService.ExecQuery( _ \"SELECT * FROM Win32_PrinterShare\",,48) WScript.Echo \" Following printers are shared..\" For Each objItem in colItems 'Wscript.Echo \"Antecedent: \" \u0026 objItem.Antecedent share_name=Replace(objItem.Dependent,\"\\\\\"\u0026strComputer\u0026\"\\root\\cimv2:Win32_Share.Name=\",\"\") share_name=Replace(share_name,Chr(34),\"\") Wscript.Echo \" \" \u0026 share_name Next ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/ae3f7fe1-8390-4aae-bbe9-c117da976398/ae3f7fe1-8390-4aae-bbe9-c117da976398/:4:0","tags":["Active Directory","HTML"],"title":"VB script to Display the shared printer information","uri":"/printing/print-servers-print-queues-and-print-jobs/ae3f7fe1-8390-4aae-bbe9-c117da976398/ae3f7fe1-8390-4aae-bbe9-c117da976398/"},{"categories":["Printing"],"content":"Original Links Original Technet URL w-PrintJob Original Technet Description URL Description Download: Download Link ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/new-printjob-2f43062f/new-printjob-2f43062f/:1:0","tags":["Active Directory","HTML"],"title":"w-PrintJob","uri":"/printing/print-servers-print-queues-and-print-jobs/new-printjob-2f43062f/new-printjob-2f43062f/"},{"categories":["Printing"],"content":"Output from Technet Gallery We recently migrated from a single print server, to a print cluster and this move broke our existing print logging solution. So I needed to find a way to get this information as we are routinely asked to present data on user printing. Additionally we use the data internally to track trends, and alert users who may be abusing the printers. This script works in conjunction with an Event Trigger on the PrintService event log on our print servers. This script requires that the Microsoft-Windows-PrintService/Operational log be enabled, so that it can query the log for Event ID 307. This event contains the data that represents a sucessful print, and contains all of the information you might need in a print logger. \u003c# .SYNOPSIS Log a print job to a file. .DESCRIPTION This script works in conjunction with an Event Trigger on the PrintService event on our print servers. This script queries the Microsoft-Windows-PrintService/Operational log for EventID 307, and returns the drive letter from the most recent event. This should be the same event that triggered this script to run in the first place. It appends to a CSV log file if it exists, or creates a new file if it doesn't. .PARAMETER FileName The fully qualified path and filename for the report. .PARAMETER eventRecordID This value is passed in from the even that triggered the task. This is the record number of the event in the log. This is used to grab the specific event that the script will query data from. .PARAMETER eventChannel This is the name of the log, as passed in from the Event subsystem. .EXAMPLE .\\New-PrintJob.ps1 Description ----------- This is the only syntax for this script. .NOTES ScriptName: New-PrintJob.ps1 Created By: Jeff Patton Date Coded: August 17, 2011 ScriptName is used to register events for this script LogName is used to determine which classic log to write to Microsoft .NET Framework 3.5 or greater is required. This script was modified to pull the record id directly from the event subsystem to work around an issue that is potentially caused from pulling in all event id's. .LINK https://code.google.com/p/mod-posh/wiki/New-PrintJob .LINK http://www.patton-tech.com/2012/04/updated-new-printjob-script.html #\u003e Param ( $FileName = \"TEMP-PrintLog-$((get-date -format \"yyyMMdd\")).csv\", $eventRecordID, $eventChannel ) Begin { $ScriptName = $MyInvocation.MyCommand.ToString() $LogName = \"Microsoft-Windows-PrintService/Operational\" $ScriptPath = $MyInvocation.MyCommand.Path $Username = $env:USERDOMAIN + \"\\\" + $env:USERNAME $ErrorActionPreference = \"Stop\" New-EventLog -Source $ScriptName -LogName $LogName -ErrorAction SilentlyContinue $Message = \"Script: \" + $ScriptPath + \"`nScript User: \" + $Username + \"`nStarted: \" + (Get-Date).toString() Write-EventLog -LogName $LogName -Source $ScriptName -EventID \"100\" -EntryType \"Information\" -Message $Message # Dotsource in the functions you need. } Process { Try { $Event307 = Get-WinEvent -LogName $eventChannel -FilterXPath \"\u003cQueryList\u003e\u003cQuery Id='0' Path='$eventChannel'\u003e\u003cSelect Path='$eventChannel'\u003e*[System[(EventRecordID=$eventRecordID)]]\u003c/Select\u003e\u003c/Query\u003e\u003c/QueryList\u003e\" $Event307XML = ([xml]$Event307.ToXml()) } Catch { $Message = $Error[0] Write-Warning $Message Write-EventLog -LogName $LogName -Source $ScriptName -EventID \"101\" -EntryType \"Error\" -Message $Message Break } $Client = $Event307.Properties[3].Value if($Client.IndexOf(\"\\\\\") -gt -1) { $Lookup = \"nslookup $($Client.Substring(2,($Client.Length)-2)) |Select-String 'Name:'\" } else { $Lookup = \"nslookup $($Client) |Select-String 'Name:'\" } Try { [string]$Return = Invoke-Expression $Lookup $Client = $Return.Substring($Return.IndexOf(\" \"),(($Return.Length) - $Return.IndexOf(\" \"))).Trim() } Catch { $Client = $PrintJob.Properties[3].Value } $PrintLog = New-Object -TypeName PSObject -Property @{ Time = $Event307.TimeCreated Job = $Event307XML.Event.UserData.DocumentPrinted.Param1 Document = $Event307XML.Event.UserData.DocumentPrinted.Param2 User = $Eve","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/new-printjob-2f43062f/new-printjob-2f43062f/:2:0","tags":["Active Directory","HTML"],"title":"w-PrintJob","uri":"/printing/print-servers-print-queues-and-print-jobs/new-printjob-2f43062f/new-printjob-2f43062f/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Whiteboard Process-Making A SUCCESSFUL Video STEP by STEP Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/project-server/whiteboard-process-making-1fbe7a17/whiteboard-process-making-1fbe7a17/:1:0","tags":["Active Directory","HTML"],"title":"Whiteboard Process-Making A SUCCESSFUL Video STEP by STEP","uri":"/project-server/whiteboard-process-making-1fbe7a17/whiteboard-process-making-1fbe7a17/"},{"categories":["Project Server"],"content":"Output from Technet Gallery From beginning to end, here is the whiteboard animation procedure for making your own video: **Stage 1: Define Your Goals ** You need to ask yourself; what are the results you expect or the goals you need to achieve. Listing down the goals that you have in your mind, For instance, ‘if you need to build the client change rate on the landing page’ or if you need to expand the transformation rate by 20% on your social media platform. Being sure about your objectives helps you achieve your target. It enables you on making a more defined content. Through your goals, you can have a better understanding of what key messages and suggestion you need to add to take action. **Stage 2: Make Your Script ** your whiteboard video animation sharks won’t be able to change the viewers into your potential clients if you don’t have an awesome content or script. Conveying the desired information completely relies upon your script, so take as much time as it needs to make a well-written and understandable script. Work out on different drafts to locate the one that can works best for you. It is crucial that you sort out and see the majority of your client’s needs and concerns. You can even try to ask some of those concerns from your team and discover what points are important to focus. At that point, you would have the surety of what to answer in your video. The information has to be adequately put inside the content because your script is your story. The story that your clients can identify and would consider when they need to oblige. **Stage 3: The Voiceover ** You can enlist an expert voiceover artisan, who can cost a couple of hundred pounds relying upon involvement. However, with the help of a pro, you can get a decent video. In your whiteboard process while picking the artist for voice over, ensure that you have a voice that will connect well with your targeted audience (for instance, if your targeting only females, you have a female voice or when you are aiming for teenagers, you have a fresh, more lively voice). Voice over can make and destroy your video, if not dealt properly. So make sure you deliver the best voice that your audience would want to hear. As a general guideline, however, the voiceover can dependably be peppy and vivacious keeping in mind your goal is to get your audience connected. **Stage 4: Create Sketches ** You need to picture your content and then accordingly draw different portrayals or sketches. Initially, they can be unpleasant to look or difficult to draw. But that’s what it is all about, you need to “Try”. By trying, you start to get the hold of your character or visuals; you simply have to ensure you get the majority of your thoughts down on paper. If you find this whiteboard process troublesome, making it impossible to interoperate something from your content, don’t get panicked, simply do your best and it will turn out inventively well. **Stage 5: The Storyboard ** Close by the content, choose what pictures you need to utilize and, place them according to the requirement and the position they will show up on screen. Doing so, you will be able to pre-picture the video and that would even save your time by evacuating any issues that previously you encountered. If you like, you can examine those issues through Photoshop; it’s a simple method that helps you scan your storyboard. This option gives you the additional advantage of playing around and reshaping your pre-picture into whatever shape you like. **Stage 6: Create Guides ** Since you have your representations and your final sketches all together, now you need to redraw them VERY daintily on the page. They should be sufficiently dim to be seen by your eye, yet swoon enough for the camera not to lift them up – you don’t need a bundle of rules appearing in your last video. **Stage 7: Record Video ** Keep in mind, the video that you make can be shown speedy, so move at a pace that suits your content and voice over. You need to trust you","date":"2019-12-01","objectID":"/project-server/whiteboard-process-making-1fbe7a17/whiteboard-process-making-1fbe7a17/:2:0","tags":["Active Directory","HTML"],"title":"Whiteboard Process-Making A SUCCESSFUL Video STEP by STEP","uri":"/project-server/whiteboard-process-making-1fbe7a17/whiteboard-process-making-1fbe7a17/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Why Use Microsoft Project Server? Original Technet Description URL Description Download: [Download Link](Download\\Project Server.png) ","date":"2019-12-01","objectID":"/project-server/why-use-server-f4f3b684/why-use-server-f4f3b684/:1:0","tags":["Active Directory","HTML"],"title":"Why Use Microsoft Project Server?","uri":"/project-server/why-use-server-f4f3b684/why-use-server-f4f3b684/"},{"categories":["Project Server"],"content":"Output from Technet Gallery Project Server is built on Microsoft SharePoint Server, bringing together powerful business collaboration platform services with structured execution capabilities to provide flexible work management solutions. Now more than ever, executives are being challenged to “do more with less” and as a result have to be judicious about where they spend their money and how they allocate their resources. The Key components of Microsoft PPM solution are; Microsoft SharePoint, Project Server and Project professional. Deploy on-premise or use cloud based solution. Review more information about Project Online viadubai rugby 7s . Microsoft PPM Solution helps organizations accomplish the following business imperatives: Schedule Management, Resource Management, Time \u0026 Task Management, Financial/Cost Management, Business Intelligence (BI), Demand Management, Portfolio Analysis \u0026 Selection, Issue \u0026 Risk Management, Team Collaboration on Project artefacts such as documents, actions etc. When looking for the best resources to help with migration or implementation, there is no need to look anywhere butProject Solution. We are dedicated to delivering Microsoft Project \u0026 Portfolio Management (PPM) Solutions . Source by live rugby streaming vlog ","date":"2019-12-01","objectID":"/project-server/why-use-server-f4f3b684/why-use-server-f4f3b684/:2:0","tags":["Active Directory","HTML"],"title":"Why Use Microsoft Project Server?","uri":"/project-server/why-use-server-f4f3b684/why-use-server-f4f3b684/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Windows Server 2016 Technical Preview 5 - Overview Original Technet Description URL Description Download: [Download Link](Download\\Win 2016 TP5 - Overview.docx) ","date":"2019-12-01","objectID":"/project-server/windows-server-2016-262acfbe/windows-server-2016-262acfbe/:1:0","tags":["Active Directory","HTML"],"title":"Windows Server 2016 Technical Preview 5 - Overview","uri":"/project-server/windows-server-2016-262acfbe/windows-server-2016-262acfbe/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This Guide will help You to understand: Windows Server 2016 TP5 Console overview. Changes done with Roles \u0026 features. This is start for Windows Server 2016… Now with next Guide, I will start sharing individual features guide with complete evaluation \u0026 testing. Thanks, Mayank Dhama Visit: http://www.mdtechskillssolutions.com ","date":"2019-12-01","objectID":"/project-server/windows-server-2016-262acfbe/windows-server-2016-262acfbe/:2:0","tags":["Active Directory","HTML"],"title":"Windows Server 2016 Technical Preview 5 - Overview","uri":"/project-server/windows-server-2016-262acfbe/windows-server-2016-262acfbe/"},{"categories":["Project Server"],"content":"Original Links Original Technet URL Windows Server 2016 TP5 - About Guest Clustering \u0026 Expanding Shared VHD Onlin Original Technet Description URL Description Download: [Download Link](Download\\Windows Server 2016 TP5 - About Guest Clustering \u0026 Expanding Shared VHD Online (New feature).docx) ","date":"2019-12-01","objectID":"/project-server/windows-server-2016-tp5-b621f59c/windows-server-2016-tp5-b621f59c/:1:0","tags":["Active Directory","HTML"],"title":"Windows Server 2016 TP5 - About Guest Clustering \u0026 Expanding Shared VHD Onlin","uri":"/project-server/windows-server-2016-tp5-b621f59c/windows-server-2016-tp5-b621f59c/"},{"categories":["Project Server"],"content":"Output from Technet Gallery This document will give You brief description: About Guest Clustering Prerequisites Installation \u0026 Configuration. How to create shared VHD in Win 2016 (New Feature). How to add shared VHD in Guest Clustered VMs. How to configure Disk Witness in Quorum. Testing for expanding CSV Volume (Shared Disk) online with no down-time (New Feature). For any query, feel free to post Your comments. Please do share Your ratings about document!!! Thanks, Mayank Dhama Happy to Help!!! Visit: http://www.mdtechskillssolutions.com ","date":"2019-12-01","objectID":"/project-server/windows-server-2016-tp5-b621f59c/windows-server-2016-tp5-b621f59c/:2:0","tags":["Active Directory","HTML"],"title":"Windows Server 2016 TP5 - About Guest Clustering \u0026 Expanding Shared VHD Onlin","uri":"/project-server/windows-server-2016-tp5-b621f59c/windows-server-2016-tp5-b621f59c/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Write Print Server Information to an Excel Spreads Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/cddf9aef-839f-4405-8637-1c2d74522fd6/cddf9aef-839f-4405-8637-1c2d74522fd6/:1:0","tags":["Active Directory","HTML"],"title":"Write Print Server Information to an Excel Spreads","uri":"/printing/printer-ports-and-printer-drivers/cddf9aef-839f-4405-8637-1c2d74522fd6/cddf9aef-839f-4405-8637-1c2d74522fd6/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **Randy Reimers Retrieves print server information and then writes the returned data to an Excel spreadsheet. Visual Basic ' Access a print server, get information about all printers on the server, ' and build an Excel spreadsheet with the information. You must have power ' user or Administrator rights to the print server, and need to have ' Microsoft Excel installed on the PC you are running this from. ' Sorry, it is not well commented, but something had to give in order to make it fit in 150 lines. ' Randy R - 1-22-07 On Error Resume Next Dim strComputer, strExcelPath, objExcel, objSheet, k, objGroup Dim objWMIService, colItems, ErrState, Sheet, strPorts, strPortNum 'Sheet = spreadsheet page, k = row in sheet Sheet = 1 k = 2 strComputer = InputBox (\"Please type the print server name to check, \" \u0026 vbCrLf \u0026 _ \"Else enter ALL for all print servers\", \"Server Name\",\"CCPS01\") if strComputer = \"\" then WScript.quit end if strExcelPath = InputBox (\"Please enter the path to save file to: \", \"File path\", \"F:\\\") strExcelPath = strExcelPath \u0026 \"Printers_\" \u0026 strComputer \u0026 \".xls\" ' Bind to Excel object. On Error Resume Next Set objExcel = CreateObject(\"Excel.Application\") If Err.Number \u003c\u003e 0 Then On Error GoTo 0 Wscript.Echo \"Excel application not found.\" Wscript.Quit End If On Error GoTo 0 ' Create a new workbook. objExcel.Workbooks.Add 'Change this to fit your server situation Select Case UCase(strComputer) Case \"ALL\" PrintServer(\"CCPS01\") Sheet = Sheet + 1 PrintServer(\"CCPS02\") Sheet = Sheet + 1 PrintServer(\"ServerPS03\") Case Else PrintServer(strComputer) End Select Function PrintServer(strComputer) k=2 Set objWMIService = GetObject(\"winmgmts:\\\\\" \u0026 strComputer \u0026 \"\\root\\cimv2\") Set colItems = objWMIService.ExecQuery(\"Select * from Win32_Printer\",,48) Set colPorts = objWMIService.ExecQuery(\"Select * from Win32_TCPIPPrinterPort\") Set strPorts = CreateObject(\"Scripting.Dictionary\") Set strPortNum = CreateObject(\"Scripting.Dictionary\") For Each objPort in colPorts strPorts.add objPort.Name, objPort.HostAddress strPortNum.add objPort.Name, objPort.PortNumber Next ' Bind to worksheet. Set objSheet = objExcel.ActiveWorkbook.Worksheets(Sheet) objSheet.Name = strComputer ' Populate spreadsheet cells with printer attributes. objSheet.Cells(1, 1).Value = \"Name\" objSheet.Cells(1, 2).Value = \"ShareName\" objSheet.Cells(1, 3).Value = \"Comment\" objSheet.Cells(1, 4).Value = \"Error\" objSheet.Cells(1, 5).Value = \"DriverName\" objSheet.Cells(1, 6).Value = \"EnableBIDI\" objSheet.Cells(1, 7).Value = \"JobCount\" objSheet.Cells(1, 8).Value = \"Location\" objSheet.Cells(1, 9).Value = \"PortName\" objSheet.Cells(1, 10).Value = \"PortAddress\" objSheet.Cells(1, 11).Value = \"PortNumber\" objSheet.Cells(1, 12).Value = \"Published\" objSheet.Cells(1, 13).Value = \"Queued\" objSheet.Cells(1, 14).Value = \"Shared\" objSheet.Cells(1, 15).Value = \"Status\" For Each objItem in colItems 'put error code into human readable form Select Case objItem.DetectedErrorState Case 4 ErrState = \"Out of Paper\" Case 5 ErrState = \"Toner low\" Case 6 ErrState = \"Printing\" Case 9 ErrState = \"Offline\" Case Else ErrState = objItem.DetectedErrorState End Select 'populate the row with this printer's data objSheet.Cells(k, 1).Value = objItem.Name objSheet.Cells(k, 2).Value = objItem.ShareName objSheet.Cells(k, 3).Value = objItem.Comment objSheet.Cells(k, 4).Value = ErrState objSheet.Cells(k, 5).Value = objItem.DriverName objSheet.Cells(k, 6).Value = objItem.EnableBIDI objSheet.Cells(k, 7).Value = objItem.JobCountSinceLastReset objSheet.Cells(k, 8).Value = objItem.Location objSheet.Cells(k, 9).Value = objItem.PortName objSheet.Cells(k, 10).Value = strPorts.Item(objItem.PortName) objSheet.Cells(k, 11).Value = strPortNum.Item(objItem.PortName) objSheet.Cells(k, 12).Value = objItem.Published objSheet.Cells(k, 13).Value = objItem.Queued objSheet.Cells(k, 14).Value = objItem.Shared objSheet.Cells(k, 15).Value = objItem.Status k = k + 1 Next ' Format the spreadsheet. objSheet.R","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/cddf9aef-839f-4405-8637-1c2d74522fd6/cddf9aef-839f-4405-8637-1c2d74522fd6/:2:0","tags":["Active Directory","HTML"],"title":"Write Print Server Information to an Excel Spreads","uri":"/printing/printer-ports-and-printer-drivers/cddf9aef-839f-4405-8637-1c2d74522fd6/cddf9aef-839f-4405-8637-1c2d74522fd6/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Write Printer Information to a Web Pag Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/ef4da3ce-7075-46b6-98a2-b49c94743048/ef4da3ce-7075-46b6-98a2-b49c94743048/:1:0","tags":["Active Directory","HTML"],"title":"Write Printer Information to a Web Pag","uri":"/printing/printer-ports-and-printer-drivers/ef4da3ce-7075-46b6-98a2-b49c94743048/ef4da3ce-7075-46b6-98a2-b49c94743048/"},{"categories":["Printing"],"content":"Output from Technet Gallery **Submitted By: **Jesse Riley Exports printer information to a Web page. Visual Basic '****** re-used html needed later ****** 'top listing list = \"\u003ctd\u003e\u003cfont size=\" \u0026 chr(34) \u0026 \"2\" \u0026 chr(34) \u0026 _\"\u003eNetwork Name\u003c/font\u003e\u003c/td\u003e\u003ctd\u003e\u003cfont size=\" \u0026 chr(34) \u0026 \"2\" \u0026 chr(34) \u0026 _ \"\u003eIP Address\u003c/font\u003e\u003c/td\u003e\u003ctd\u003e\u003cfont size=\" \u0026 chr(34) \u0026 \"2\" \u0026 chr(34) \u0026 _\"\u003eModel\u003c/font\u003e\u003c/td\u003e\u003ctd\u003e\u003cfont size=\" \u0026 chr(34) \u0026 \"2\" \u0026 chr(34) \u0026 _\"\u003eComments\u003c/font\u003e\u003c/td\u003e\u003ctd\u003e\u003cfont size=\" \u0026 chr(34) \u0026 \"2\" \u0026 chr(34) \u0026 _\"\u003eShare Name\u003c/font\u003e\u003c/td\u003e\u003c/tr\u003e\" 'td open close tco = \"\u003c/font\u003e\u003c/td\u003e\u003ctd\u003e\u003cfont size=\" \u0026 chr(34) \u0026 \"2\" \u0026 chr(34) \u0026 \"\u003e\" 'open table opentable = \"\u003ctr\u003e\u003ctd\u003e\u003cfont size=\" \u0026 chr(34) \u0026 \"2\" \u0026 chr(34) \u0026 \"\u003e\" 'close table closetable = \"\u003c/font\u003e\u003c/td\u003e\u003c/tr\u003e\" '************* strcomputer = \".\" Set objFSO = CreateObject(\"Scripting.FileSystemObject\") 'change C:\\printers.htm to whatever you wish Set File = objFSO.CreateTextFile(\"C:\\printers.htm\", True) Set objWMIService = GetObject(\"winmgmts:\" \u0026 \"{impersonationLevel=impersonate}!\\\\\" \u0026 _ strComputer \u0026 \"\\root\\cimv2\") Set colInstalledPrinters = objWMIService.ExecQuery (\"Select * from Win32_Printer\") '----------------------------------------------------------------- file.writeline \"\u003chtml\u003e\u003chead\u003e\u003ctitle\u003ePrinter Inventory\u003c/title\u003e\" file.writeline \"\u003c/head\u003e\" file.writeline \"\u003cbody\u003e\u003ctable border=\" \u0026 chr(34) \u0026 \"0\" \u0026 chr(34) \u0026 \"width=\" \u0026 chr(34) \u0026 _ \"1000\" \u0026 chr(34) \u0026 \"id=\" \u0026 chr(34) \u0026 \"table1\" \u0026 chr(34) \u0026 \"\u003e\" \u0026 list For Each objPrinter in colInstalledPrintersname = objprinter.namecomment = objprinter.commentsharename = objprinter.sharenameport = objprinter.portnamedrivername = objprinter.drivernamefile.writeline opentable \u0026 name \u0026 tco \u0026 port \u0026 tco \u0026 drivername \u0026 tco \u0026 _ comment \u0026 tco \u0026 ShareName \u0026 closetable Next file.writeline \"\u003c/font\u003e\u003c/table\u003e\u003c/body\u003e\u003c/html\u003e\" File.Close ","date":"2019-12-01","objectID":"/printing/printer-ports-and-printer-drivers/ef4da3ce-7075-46b6-98a2-b49c94743048/ef4da3ce-7075-46b6-98a2-b49c94743048/:2:0","tags":["Active Directory","HTML"],"title":"Write Printer Information to a Web Pag","uri":"/printing/printer-ports-and-printer-drivers/ef4da3ce-7075-46b6-98a2-b49c94743048/ef4da3ce-7075-46b6-98a2-b49c94743048/"},{"categories":["Printing"],"content":"Original Links Original Technet URL Рециклиране на въздушни възглавници Original Technet Description URL Description Download: Not available. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/727170fc-ff59-4280-8dfe-861b6c738f03/727170fc-ff59-4280-8dfe-861b6c738f03/:1:0","tags":["Active Directory","HTML"],"title":"Рециклиране на въздушни възглавници","uri":"/printing/print-servers-print-queues-and-print-jobs/727170fc-ff59-4280-8dfe-861b6c738f03/727170fc-ff59-4280-8dfe-861b6c738f03/"},{"categories":["Printing"],"content":"Output from Technet Gallery За всички, които са пред дилемата дали да си купят евтини въздушни възглавници за окачването от Китай или да заложат на рециклирането, ще кажем, че рециклирането е правилният избор. Ремонтирането или т.нар. рециклиране на въздушните възглавници на практика е пълно подновяване. Въздушните възглавници в действителност са един гумен балон, който е прикрепен към основа — пластмасова или метална. При рециклиране се подменя този гумен балон като на мястото на стария се слага напълно нов. Основите на въздушната възглавница не се повреждат. Ппри покупката на въздушни възглавници втора употреба рискувате да се сдобиете с част, която е дори в по-лошо състояние от вашата. Дори е да изглежда добре на пръв поглед, не е ясно колко дълго ще продължи да ви върши работа. Колкото до китайските стоки, всички добре знаем колко некачествени са те. Цената, на която ги купувате отговаря на ниското качество, което получавате в замяна. Друг е въпроса, че китайските въздушни възглавници никак не приличат на оригиналните. Ниската цена може да се обясни с ниското качество на всички използвани материали — гума, пластмаса, стомана. Всички специалисти препоръчват рециклирането на въздушните възглавници пред втората употреба или некачествените китайски части. Можем да кажем, че у нас нямаме много опит с рециклирането на въздушните възглавници. Затова е препоръчително да не предприемате ремонтни дейности на своя глава, а да се обърнете към специализиран сервиз. Реномираните сервизи инвестират в обучението на своите кадри и предлагат качествена услуга на клиентите. Друго, за което алармират монтьорите от реномираните сервизи, е да не чакате последния момент за рециклиране на въздушните възглавници. При каране със спукана въздушна възглавница може много лесно да се нарани основата. Ако вземете мерки веднага, когато усетите, че има проблем, ще бъде сменен само каучуковия балон. Много по-сложно става, когато е увредена и основата. При рециклиране на въздушни възглавници, един сервиз, който държи на авторитета си и изпълнява качествени услуги, ще даде гаранция за каучуковия балон, който сменя. В повечето случаи гаранцията е 12 месеца. Ако не получите такава гаранция, трябва да имате едно наум какво можете да очаквате съвсем скоро. Когато не само гумения балон е спукан, но има повреда и по основата, първо се ремонтира основата, за да не стане предпоставка за спукването на новия балон. Един добър сервиз ще вземе мерки да не допусне подобна небрежност. Основата ще бъде надлежно и качествено ремонтирана, след което гуменият балон ще бъде подменен с чисто нов, за който ще получите и гаранция. Рециклирането на въздушни възглавници не отнема много време. ","date":"2019-12-01","objectID":"/printing/print-servers-print-queues-and-print-jobs/727170fc-ff59-4280-8dfe-861b6c738f03/727170fc-ff59-4280-8dfe-861b6c738f03/:2:0","tags":["Active Directory","HTML"],"title":"Рециклиране на въздушни възглавници","uri":"/printing/print-servers-print-queues-and-print-jobs/727170fc-ff59-4280-8dfe-861b6c738f03/727170fc-ff59-4280-8dfe-861b6c738f03/"}]